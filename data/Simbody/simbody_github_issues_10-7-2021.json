[{"url": "https://api.github.com/repos/simbody/simbody/issues/1", "repository_url": "https://api.github.com/repos/simbody/simbody", "labels_url": "https://api.github.com/repos/simbody/simbody/issues/1/labels{/name}", "comments_url": "https://api.github.com/repos/simbody/simbody/issues/1/comments", "events_url": "https://api.github.com/repos/simbody/simbody/issues/1/events", "html_url": "https://github.com/simbody/simbody/issues/1", "id": 18172355, "node_id": "MDU6SXNzdWUxODE3MjM1NQ==", "number": 1, "title": "Optimizer's setDifferentiatorMethod() ignored after useNumericalGradient() has been called", "user": {"login": "sherm1", "id": 4088016, "node_id": "MDQ6VXNlcjQwODgwMTY=", "avatar_url": "https://avatars.githubusercontent.com/u/4088016?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sherm1", "html_url": "https://github.com/sherm1", "followers_url": "https://api.github.com/users/sherm1/followers", "following_url": "https://api.github.com/users/sherm1/following{/other_user}", "gists_url": "https://api.github.com/users/sherm1/gists{/gist_id}", "starred_url": "https://api.github.com/users/sherm1/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sherm1/subscriptions", "organizations_url": "https://api.github.com/users/sherm1/orgs", "repos_url": "https://api.github.com/users/sherm1/repos", "events_url": "https://api.github.com/users/sherm1/events{/privacy}", "received_events_url": "https://api.github.com/users/sherm1/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 52267851, "node_id": "MDU6TGFiZWw1MjI2Nzg1MQ==", "url": "https://api.github.com/repos/simbody/simbody/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": {"login": "sherm1", "id": 4088016, "node_id": "MDQ6VXNlcjQwODgwMTY=", "avatar_url": "https://avatars.githubusercontent.com/u/4088016?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sherm1", "html_url": "https://github.com/sherm1", "followers_url": "https://api.github.com/users/sherm1/followers", "following_url": "https://api.github.com/users/sherm1/following{/other_user}", "gists_url": "https://api.github.com/users/sherm1/gists{/gist_id}", "starred_url": "https://api.github.com/users/sherm1/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sherm1/subscriptions", "organizations_url": "https://api.github.com/users/sherm1/orgs", "repos_url": "https://api.github.com/users/sherm1/repos", "events_url": "https://api.github.com/users/sherm1/events{/privacy}", "received_events_url": "https://api.github.com/users/sherm1/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "sherm1", "id": 4088016, "node_id": "MDQ6VXNlcjQwODgwMTY=", "avatar_url": "https://avatars.githubusercontent.com/u/4088016?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sherm1", "html_url": "https://github.com/sherm1", "followers_url": "https://api.github.com/users/sherm1/followers", "following_url": "https://api.github.com/users/sherm1/following{/other_user}", "gists_url": "https://api.github.com/users/sherm1/gists{/gist_id}", "starred_url": "https://api.github.com/users/sherm1/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sherm1/subscriptions", "organizations_url": "https://api.github.com/users/sherm1/orgs", "repos_url": "https://api.github.com/users/sherm1/repos", "events_url": "https://api.github.com/users/sherm1/events{/privacy}", "received_events_url": "https://api.github.com/users/sherm1/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 3, "created_at": "2013-08-16T18:44:40Z", "updated_at": "2014-03-31T16:46:58Z", "closed_at": "2013-08-16T22:10:20Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "Apparently when `Optimizer::useNumericalGradient()` and probably `...Jacobian()` are called they record the currently-active `Differentiator` method. Subsequent attempts to change it produce no error but have no effect.\n\nThis should _at least_ be fixed in the documentation, better to generate an error, and better still to allow it to take effect whenever it makes logical sense.\n\nKarianne Bergen got bit by this working in OpenSim 3.1.\n", "reactions": {"url": "https://api.github.com/repos/simbody/simbody/issues/1/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/simbody/simbody/issues/1/timeline", "performed_via_github_app": null}, {"url": "https://api.github.com/repos/simbody/simbody/issues/3", "repository_url": "https://api.github.com/repos/simbody/simbody", "labels_url": "https://api.github.com/repos/simbody/simbody/issues/3/labels{/name}", "comments_url": "https://api.github.com/repos/simbody/simbody/issues/3/comments", "events_url": "https://api.github.com/repos/simbody/simbody/issues/3/events", "html_url": "https://github.com/simbody/simbody/issues/3", "id": 18201431, "node_id": "MDU6SXNzdWUxODIwMTQzMQ==", "number": 3, "title": "Distance (Rod) constraint is poorly scaled", "user": {"login": "sherm1", "id": 4088016, "node_id": "MDQ6VXNlcjQwODgwMTY=", "avatar_url": "https://avatars.githubusercontent.com/u/4088016?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sherm1", "html_url": "https://github.com/sherm1", "followers_url": "https://api.github.com/users/sherm1/followers", "following_url": "https://api.github.com/users/sherm1/following{/other_user}", "gists_url": "https://api.github.com/users/sherm1/gists{/gist_id}", "starred_url": "https://api.github.com/users/sherm1/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sherm1/subscriptions", "organizations_url": "https://api.github.com/users/sherm1/orgs", "repos_url": "https://api.github.com/users/sherm1/repos", "events_url": "https://api.github.com/users/sherm1/events{/privacy}", "received_events_url": "https://api.github.com/users/sherm1/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 52267851, "node_id": "MDU6TGFiZWw1MjI2Nzg1MQ==", "url": "https://api.github.com/repos/simbody/simbody/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}, {"id": 52759775, "node_id": "MDU6TGFiZWw1Mjc1OTc3NQ==", "url": "https://api.github.com/repos/simbody/simbody/labels/constraint", "name": "constraint", "color": "d4c5f9", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": {"login": "sherm1", "id": 4088016, "node_id": "MDQ6VXNlcjQwODgwMTY=", "avatar_url": "https://avatars.githubusercontent.com/u/4088016?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sherm1", "html_url": "https://github.com/sherm1", "followers_url": "https://api.github.com/users/sherm1/followers", "following_url": "https://api.github.com/users/sherm1/following{/other_user}", "gists_url": "https://api.github.com/users/sherm1/gists{/gist_id}", "starred_url": "https://api.github.com/users/sherm1/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sherm1/subscriptions", "organizations_url": "https://api.github.com/users/sherm1/orgs", "repos_url": "https://api.github.com/users/sherm1/repos", "events_url": "https://api.github.com/users/sherm1/events{/privacy}", "received_events_url": "https://api.github.com/users/sherm1/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "sherm1", "id": 4088016, "node_id": "MDQ6VXNlcjQwODgwMTY=", "avatar_url": "https://avatars.githubusercontent.com/u/4088016?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sherm1", "html_url": "https://github.com/sherm1", "followers_url": "https://api.github.com/users/sherm1/followers", "following_url": "https://api.github.com/users/sherm1/following{/other_user}", "gists_url": "https://api.github.com/users/sherm1/gists{/gist_id}", "starred_url": "https://api.github.com/users/sherm1/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sherm1/subscriptions", "organizations_url": "https://api.github.com/users/sherm1/orgs", "repos_url": "https://api.github.com/users/sherm1/repos", "events_url": "https://api.github.com/users/sherm1/events{/privacy}", "received_events_url": "https://api.github.com/users/sherm1/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 1, "created_at": "2013-08-18T00:38:43Z", "updated_at": "2014-05-07T06:18:43Z", "closed_at": "2014-05-07T06:18:43Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "(Transferred from SimTK -- original filed 2008-02-19 as bug 562)\n\nThe current implementation of Constraint::Rod \"cleverly\" uses the square of\nthe distance constraint which is cheaper to compute and produces beautiful 1st\nand 2nd time derivatives. However, this results in the position constraint error\nhaving units which are not length like the other translational constraints.\nIn fact they differ from length by a factor of roughly 2*d where d is the rod\nlength.\n\nThe effect of this problem is that if d differs a lot from 1 the constraint\nwill be enforced either too tightly (if d>>1) or too loosely (d<<1).\n\nA quick fix would be to switch to using the square root form of the distance\nconstraint and its derivatives. Then the current default scaling of 1 is good.\n\nA better longer term fix would be to add an interface for the concrete constraints\nto implement which would allow each constraint to specify is own scaling default.\nNormally a constraint would be scaled by 1, here it would be scaled by 1/(2d)\nor something like that. Then the cheaper and more beautiful form could be used\nwith no ill effects.\n", "reactions": {"url": "https://api.github.com/repos/simbody/simbody/issues/3/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/simbody/simbody/issues/3/timeline", "performed_via_github_app": null}, {"url": "https://api.github.com/repos/simbody/simbody/issues/4", "repository_url": "https://api.github.com/repos/simbody/simbody", "labels_url": "https://api.github.com/repos/simbody/simbody/issues/4/labels{/name}", "comments_url": "https://api.github.com/repos/simbody/simbody/issues/4/comments", "events_url": "https://api.github.com/repos/simbody/simbody/issues/4/events", "html_url": "https://github.com/simbody/simbody/issues/4", "id": 18201471, "node_id": "MDU6SXNzdWUxODIwMTQ3MQ==", "number": 4, "title": "Line & FreeLine mobilizers in Euler angle mode should use 2 angles, not 3", "user": {"login": "sherm1", "id": 4088016, "node_id": "MDQ6VXNlcjQwODgwMTY=", "avatar_url": "https://avatars.githubusercontent.com/u/4088016?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sherm1", "html_url": "https://github.com/sherm1", "followers_url": "https://api.github.com/users/sherm1/followers", "following_url": "https://api.github.com/users/sherm1/following{/other_user}", "gists_url": "https://api.github.com/users/sherm1/gists{/gist_id}", "starred_url": "https://api.github.com/users/sherm1/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sherm1/subscriptions", "organizations_url": "https://api.github.com/users/sherm1/orgs", "repos_url": "https://api.github.com/users/sherm1/repos", "events_url": "https://api.github.com/users/sherm1/events{/privacy}", "received_events_url": "https://api.github.com/users/sherm1/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 52267851, "node_id": "MDU6TGFiZWw1MjI2Nzg1MQ==", "url": "https://api.github.com/repos/simbody/simbody/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}, {"id": 52760006, "node_id": "MDU6TGFiZWw1Mjc2MDAwNg==", "url": "https://api.github.com/repos/simbody/simbody/labels/mobilizer", "name": "mobilizer", "color": "c7def8", "default": false, "description": null}], "state": "open", "locked": false, "assignee": {"login": "sherm1", "id": 4088016, "node_id": "MDQ6VXNlcjQwODgwMTY=", "avatar_url": "https://avatars.githubusercontent.com/u/4088016?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sherm1", "html_url": "https://github.com/sherm1", "followers_url": "https://api.github.com/users/sherm1/followers", "following_url": "https://api.github.com/users/sherm1/following{/other_user}", "gists_url": "https://api.github.com/users/sherm1/gists{/gist_id}", "starred_url": "https://api.github.com/users/sherm1/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sherm1/subscriptions", "organizations_url": "https://api.github.com/users/sherm1/orgs", "repos_url": "https://api.github.com/users/sherm1/repos", "events_url": "https://api.github.com/users/sherm1/events{/privacy}", "received_events_url": "https://api.github.com/users/sherm1/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "sherm1", "id": 4088016, "node_id": "MDQ6VXNlcjQwODgwMTY=", "avatar_url": "https://avatars.githubusercontent.com/u/4088016?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sherm1", "html_url": "https://github.com/sherm1", "followers_url": "https://api.github.com/users/sherm1/followers", "following_url": "https://api.github.com/users/sherm1/following{/other_user}", "gists_url": "https://api.github.com/users/sherm1/gists{/gist_id}", "starred_url": "https://api.github.com/users/sherm1/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sherm1/subscriptions", "organizations_url": "https://api.github.com/users/sherm1/orgs", "repos_url": "https://api.github.com/users/sherm1/repos", "events_url": "https://api.github.com/users/sherm1/events{/privacy}", "received_events_url": "https://api.github.com/users/sherm1/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 0, "created_at": "2013-08-18T00:42:54Z", "updated_at": "2013-08-19T21:47:45Z", "closed_at": null, "author_association": "MEMBER", "active_lock_reason": null, "body": "(Transferred from SimTK, original filed 2010-03-8 as bug 1072)\n\nTerminal or free bodies that are \"linear\" in the sense that all their mass is\narranged along a line with no rotational inertia about that line (like O2 or\nCO2 molecules) need special handling. They are not fully general rigid bodies\nand must not have a degree of rotational freedom about the inertialess axis.\nSimbody provides \"Line\" (2 rotational dofs) and \"FreeLine\" (2 rotations + 3\ntranslations) mobilizers to model these reduced bodies.\n\nDespite having only 2 rotational dofs, to avoid singularities during dynamic\nsimulation, the orientation must be represented by a 4-element quaternion. When\nmodeling with setUseEulerAngles(true), all quaternion-using mobilizers switch\nto Euler angles. Currently they all switch to _three_ Euler angles, but these\n2-dof mobilizers should use only _two_ Euler angles, equivalent to azimuth and\nelevation. The current approach can cause some obscure problems when used with\noptimizers because there is a hidden constraint among the three angles, but\nthe use-Euler-angles mode is used specifically to avoid constraints among the\nq's.\n\nLine and FreeLine should thus use 4 q's in dynamics mode and 2 q's in statics\n(Euler angle) mode.\n", "reactions": {"url": "https://api.github.com/repos/simbody/simbody/issues/4/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/simbody/simbody/issues/4/timeline", "performed_via_github_app": null}, {"url": "https://api.github.com/repos/simbody/simbody/issues/5", "repository_url": "https://api.github.com/repos/simbody/simbody", "labels_url": "https://api.github.com/repos/simbody/simbody/issues/5/labels{/name}", "comments_url": "https://api.github.com/repos/simbody/simbody/issues/5/comments", "events_url": "https://api.github.com/repos/simbody/simbody/issues/5/events", "html_url": "https://github.com/simbody/simbody/issues/5", "id": 18201485, "node_id": "MDU6SXNzdWUxODIwMTQ4NQ==", "number": 5, "title": "Visualizer built in Debug mode should have \"_d\" in its name", "user": {"login": "sherm1", "id": 4088016, "node_id": "MDQ6VXNlcjQwODgwMTY=", "avatar_url": "https://avatars.githubusercontent.com/u/4088016?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sherm1", "html_url": "https://github.com/sherm1", "followers_url": "https://api.github.com/users/sherm1/followers", "following_url": "https://api.github.com/users/sherm1/following{/other_user}", "gists_url": "https://api.github.com/users/sherm1/gists{/gist_id}", "starred_url": "https://api.github.com/users/sherm1/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sherm1/subscriptions", "organizations_url": "https://api.github.com/users/sherm1/orgs", "repos_url": "https://api.github.com/users/sherm1/repos", "events_url": "https://api.github.com/users/sherm1/events{/privacy}", "received_events_url": "https://api.github.com/users/sherm1/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 52267851, "node_id": "MDU6TGFiZWw1MjI2Nzg1MQ==", "url": "https://api.github.com/repos/simbody/simbody/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}, {"id": 52759897, "node_id": "MDU6TGFiZWw1Mjc1OTg5Nw==", "url": "https://api.github.com/repos/simbody/simbody/labels/visualization", "name": "visualization", "color": "bfd4f2", "default": false, "description": null}, {"id": 54361018, "node_id": "MDU6TGFiZWw1NDM2MTAxOA==", "url": "https://api.github.com/repos/simbody/simbody/labels/build", "name": "build", "color": "bfe5bf", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": {"login": "sherm1", "id": 4088016, "node_id": "MDQ6VXNlcjQwODgwMTY=", "avatar_url": "https://avatars.githubusercontent.com/u/4088016?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sherm1", "html_url": "https://github.com/sherm1", "followers_url": "https://api.github.com/users/sherm1/followers", "following_url": "https://api.github.com/users/sherm1/following{/other_user}", "gists_url": "https://api.github.com/users/sherm1/gists{/gist_id}", "starred_url": "https://api.github.com/users/sherm1/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sherm1/subscriptions", "organizations_url": "https://api.github.com/users/sherm1/orgs", "repos_url": "https://api.github.com/users/sherm1/repos", "events_url": "https://api.github.com/users/sherm1/events{/privacy}", "received_events_url": "https://api.github.com/users/sherm1/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "sherm1", "id": 4088016, "node_id": "MDQ6VXNlcjQwODgwMTY=", "avatar_url": "https://avatars.githubusercontent.com/u/4088016?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sherm1", "html_url": "https://github.com/sherm1", "followers_url": "https://api.github.com/users/sherm1/followers", "following_url": "https://api.github.com/users/sherm1/following{/other_user}", "gists_url": "https://api.github.com/users/sherm1/gists{/gist_id}", "starred_url": "https://api.github.com/users/sherm1/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sherm1/subscriptions", "organizations_url": "https://api.github.com/users/sherm1/orgs", "repos_url": "https://api.github.com/users/sherm1/repos", "events_url": "https://api.github.com/users/sherm1/events{/privacy}", "received_events_url": "https://api.github.com/users/sherm1/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 5, "created_at": "2013-08-18T00:45:00Z", "updated_at": "2014-07-23T01:18:59Z", "closed_at": "2014-07-22T16:58:34Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "(Transferred from SimTK.org. Original was filed 2011-07-28 as bug #1500)\n\nCurrently both Debug and Release builds of the Simbody Visualizer create an\nexecutable of the same name, e.g. Visualizer.exe on Windows. Depending on build\norder, this can result in a (slow) debuggable Visualizer being used with a (fast)\nrelease set of Simbody libraries.\n\nThe debug version of the Visualizer should be named analogously to the debug\nlibraries -- add an \"_d\" suffix. Then by default the release Visualizer should\nbe used, with fallback to the _d one if release isn't available. Probably this\nshould still be true when using debug Simbody libraries, since it is rare that\nanyone but us would be debugging the Visualizer. Maybe add an environment variable\nthat could select a non-default Visualizer executable; that could be used to\nselect the debug one when we're debugging.\n", "reactions": {"url": "https://api.github.com/repos/simbody/simbody/issues/5/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/simbody/simbody/issues/5/timeline", "performed_via_github_app": null}, {"url": "https://api.github.com/repos/simbody/simbody/issues/6", "repository_url": "https://api.github.com/repos/simbody/simbody", "labels_url": "https://api.github.com/repos/simbody/simbody/issues/6/labels{/name}", "comments_url": "https://api.github.com/repos/simbody/simbody/issues/6/comments", "events_url": "https://api.github.com/repos/simbody/simbody/issues/6/events", "html_url": "https://github.com/simbody/simbody/issues/6", "id": 18201510, "node_id": "MDU6SXNzdWUxODIwMTUxMA==", "number": 6, "title": "Constraint::PrescribedMotion doesn't allow a constant function in Debug mode", "user": {"login": "sherm1", "id": 4088016, "node_id": "MDQ6VXNlcjQwODgwMTY=", "avatar_url": "https://avatars.githubusercontent.com/u/4088016?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sherm1", "html_url": "https://github.com/sherm1", "followers_url": "https://api.github.com/users/sherm1/followers", "following_url": "https://api.github.com/users/sherm1/following{/other_user}", "gists_url": "https://api.github.com/users/sherm1/gists{/gist_id}", "starred_url": "https://api.github.com/users/sherm1/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sherm1/subscriptions", "organizations_url": "https://api.github.com/users/sherm1/orgs", "repos_url": "https://api.github.com/users/sherm1/repos", "events_url": "https://api.github.com/users/sherm1/events{/privacy}", "received_events_url": "https://api.github.com/users/sherm1/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 52267851, "node_id": "MDU6TGFiZWw1MjI2Nzg1MQ==", "url": "https://api.github.com/repos/simbody/simbody/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}, {"id": 52759775, "node_id": "MDU6TGFiZWw1Mjc1OTc3NQ==", "url": "https://api.github.com/repos/simbody/simbody/labels/constraint", "name": "constraint", "color": "d4c5f9", "default": false, "description": null}], "state": "open", "locked": false, "assignee": {"login": "sherm1", "id": 4088016, "node_id": "MDQ6VXNlcjQwODgwMTY=", "avatar_url": "https://avatars.githubusercontent.com/u/4088016?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sherm1", "html_url": "https://github.com/sherm1", "followers_url": "https://api.github.com/users/sherm1/followers", "following_url": "https://api.github.com/users/sherm1/following{/other_user}", "gists_url": "https://api.github.com/users/sherm1/gists{/gist_id}", "starred_url": "https://api.github.com/users/sherm1/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sherm1/subscriptions", "organizations_url": "https://api.github.com/users/sherm1/orgs", "repos_url": "https://api.github.com/users/sherm1/repos", "events_url": "https://api.github.com/users/sherm1/events{/privacy}", "received_events_url": "https://api.github.com/users/sherm1/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "sherm1", "id": 4088016, "node_id": "MDQ6VXNlcjQwODgwMTY=", "avatar_url": "https://avatars.githubusercontent.com/u/4088016?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sherm1", "html_url": "https://github.com/sherm1", "followers_url": "https://api.github.com/users/sherm1/followers", "following_url": "https://api.github.com/users/sherm1/following{/other_user}", "gists_url": "https://api.github.com/users/sherm1/gists{/gist_id}", "starred_url": "https://api.github.com/users/sherm1/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sherm1/subscriptions", "organizations_url": "https://api.github.com/users/sherm1/orgs", "repos_url": "https://api.github.com/users/sherm1/repos", "events_url": "https://api.github.com/users/sherm1/events{/privacy}", "received_events_url": "https://api.github.com/users/sherm1/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 0, "created_at": "2013-08-18T00:47:46Z", "updated_at": "2013-08-19T21:46:18Z", "closed_at": null, "author_association": "MEMBER", "active_lock_reason": null, "body": "(Transferred from SimTK.org. Original filed 2011-09-22 as bug 1541)\nFrom Ajay Seth:\nThis works just fine in release (as the assertions are removed). Perfectly good\nwork around exists: use a polynomial function of time that returns a constant.\n\nSherm has seen this on 2011 09 22 at 1:38pm in his office.\n", "reactions": {"url": "https://api.github.com/repos/simbody/simbody/issues/6/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/simbody/simbody/issues/6/timeline", "performed_via_github_app": null}, {"url": "https://api.github.com/repos/simbody/simbody/issues/7", "repository_url": "https://api.github.com/repos/simbody/simbody", "labels_url": "https://api.github.com/repos/simbody/simbody/issues/7/labels{/name}", "comments_url": "https://api.github.com/repos/simbody/simbody/issues/7/comments", "events_url": "https://api.github.com/repos/simbody/simbody/issues/7/events", "html_url": "https://github.com/simbody/simbody/issues/7", "id": 18201526, "node_id": "MDU6SXNzdWUxODIwMTUyNg==", "number": 7, "title": "Rotation matrices should be re-orthogonalized for long chains", "user": {"login": "sherm1", "id": 4088016, "node_id": "MDQ6VXNlcjQwODgwMTY=", "avatar_url": "https://avatars.githubusercontent.com/u/4088016?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sherm1", "html_url": "https://github.com/sherm1", "followers_url": "https://api.github.com/users/sherm1/followers", "following_url": "https://api.github.com/users/sherm1/following{/other_user}", "gists_url": "https://api.github.com/users/sherm1/gists{/gist_id}", "starred_url": "https://api.github.com/users/sherm1/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sherm1/subscriptions", "organizations_url": "https://api.github.com/users/sherm1/orgs", "repos_url": "https://api.github.com/users/sherm1/repos", "events_url": "https://api.github.com/users/sherm1/events{/privacy}", "received_events_url": "https://api.github.com/users/sherm1/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 52267851, "node_id": "MDU6TGFiZWw1MjI2Nzg1MQ==", "url": "https://api.github.com/repos/simbody/simbody/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}], "state": "open", "locked": false, "assignee": {"login": "sherm1", "id": 4088016, "node_id": "MDQ6VXNlcjQwODgwMTY=", "avatar_url": "https://avatars.githubusercontent.com/u/4088016?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sherm1", "html_url": "https://github.com/sherm1", "followers_url": "https://api.github.com/users/sherm1/followers", "following_url": "https://api.github.com/users/sherm1/following{/other_user}", "gists_url": "https://api.github.com/users/sherm1/gists{/gist_id}", "starred_url": "https://api.github.com/users/sherm1/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sherm1/subscriptions", "organizations_url": "https://api.github.com/users/sherm1/orgs", "repos_url": "https://api.github.com/users/sherm1/repos", "events_url": "https://api.github.com/users/sherm1/events{/privacy}", "received_events_url": "https://api.github.com/users/sherm1/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "sherm1", "id": 4088016, "node_id": "MDQ6VXNlcjQwODgwMTY=", "avatar_url": "https://avatars.githubusercontent.com/u/4088016?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sherm1", "html_url": "https://github.com/sherm1", "followers_url": "https://api.github.com/users/sherm1/followers", "following_url": "https://api.github.com/users/sherm1/following{/other_user}", "gists_url": "https://api.github.com/users/sherm1/gists{/gist_id}", "starred_url": "https://api.github.com/users/sherm1/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sherm1/subscriptions", "organizations_url": "https://api.github.com/users/sherm1/orgs", "repos_url": "https://api.github.com/users/sherm1/repos", "events_url": "https://api.github.com/users/sherm1/events{/privacy}", "received_events_url": "https://api.github.com/users/sherm1/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 1, "created_at": "2013-08-18T00:49:30Z", "updated_at": "2013-08-18T00:50:39Z", "closed_at": null, "author_association": "MEMBER", "active_lock_reason": null, "body": "(Transferred from SimTK.org. Original filed 2011-10-28 as bug 1556)\n\nSam Flores was simulating a large RNA molecule, basically 11,000 bodies in a\nlong chain of pin joints. When the inertia of a body near the end of the chain\nwas transformed from its local frame to ground, it tripped a bug catcher which\ncomplained that the inertia diagonals failed to satisfy the triangle inequality.\nThe error was around 1e-10 and was caused by the rotation R_GB containing errors\naround 1e-9, for example column norms and determinant were all about 1+1e-9\ninstead of 1.\n\nAlthough some numerical errors are inevitable as rotations are propagated along\na long chain, Rotations should be re-orthogonalized so that they are always\ngood Rotation matrices even if there is some error in the orientations they\nrepresent.\n\nWorkaround checked in to Simbody 2.3 and 3.0 was to loosen the allowable inertia\ndiagonal slop from 1e-14 to about 1e-8.\n", "reactions": {"url": "https://api.github.com/repos/simbody/simbody/issues/7/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/simbody/simbody/issues/7/timeline", "performed_via_github_app": null}, {"url": "https://api.github.com/repos/simbody/simbody/issues/8", "repository_url": "https://api.github.com/repos/simbody/simbody", "labels_url": "https://api.github.com/repos/simbody/simbody/issues/8/labels{/name}", "comments_url": "https://api.github.com/repos/simbody/simbody/issues/8/comments", "events_url": "https://api.github.com/repos/simbody/simbody/issues/8/events", "html_url": "https://github.com/simbody/simbody/issues/8", "id": 18201555, "node_id": "MDU6SXNzdWUxODIwMTU1NQ==", "number": 8, "title": "optimizer limits should restrict differentiator perturbations", "user": {"login": "sherm1", "id": 4088016, "node_id": "MDQ6VXNlcjQwODgwMTY=", "avatar_url": "https://avatars.githubusercontent.com/u/4088016?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sherm1", "html_url": "https://github.com/sherm1", "followers_url": "https://api.github.com/users/sherm1/followers", "following_url": "https://api.github.com/users/sherm1/following{/other_user}", "gists_url": "https://api.github.com/users/sherm1/gists{/gist_id}", "starred_url": "https://api.github.com/users/sherm1/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sherm1/subscriptions", "organizations_url": "https://api.github.com/users/sherm1/orgs", "repos_url": "https://api.github.com/users/sherm1/repos", "events_url": "https://api.github.com/users/sherm1/events{/privacy}", "received_events_url": "https://api.github.com/users/sherm1/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 52267851, "node_id": "MDU6TGFiZWw1MjI2Nzg1MQ==", "url": "https://api.github.com/repos/simbody/simbody/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}, {"id": 108217628, "node_id": "MDU6TGFiZWwxMDgyMTc2Mjg=", "url": "https://api.github.com/repos/simbody/simbody/labels/help%20wanted", "name": "help wanted", "color": "009800", "default": true, "description": null}], "state": "open", "locked": false, "assignee": {"login": "sherm1", "id": 4088016, "node_id": "MDQ6VXNlcjQwODgwMTY=", "avatar_url": "https://avatars.githubusercontent.com/u/4088016?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sherm1", "html_url": "https://github.com/sherm1", "followers_url": "https://api.github.com/users/sherm1/followers", "following_url": "https://api.github.com/users/sherm1/following{/other_user}", "gists_url": "https://api.github.com/users/sherm1/gists{/gist_id}", "starred_url": "https://api.github.com/users/sherm1/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sherm1/subscriptions", "organizations_url": "https://api.github.com/users/sherm1/orgs", "repos_url": "https://api.github.com/users/sherm1/repos", "events_url": "https://api.github.com/users/sherm1/events{/privacy}", "received_events_url": "https://api.github.com/users/sherm1/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "sherm1", "id": 4088016, "node_id": "MDQ6VXNlcjQwODgwMTY=", "avatar_url": "https://avatars.githubusercontent.com/u/4088016?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sherm1", "html_url": "https://github.com/sherm1", "followers_url": "https://api.github.com/users/sherm1/followers", "following_url": "https://api.github.com/users/sherm1/following{/other_user}", "gists_url": "https://api.github.com/users/sherm1/gists{/gist_id}", "starred_url": "https://api.github.com/users/sherm1/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sherm1/subscriptions", "organizations_url": "https://api.github.com/users/sherm1/orgs", "repos_url": "https://api.github.com/users/sherm1/repos", "events_url": "https://api.github.com/users/sherm1/events{/privacy}", "received_events_url": "https://api.github.com/users/sherm1/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 0, "created_at": "2013-08-18T00:52:41Z", "updated_at": "2016-03-16T16:45:22Z", "closed_at": null, "author_association": "MEMBER", "active_lock_reason": null, "body": "(Transferred from SimTK.org. Original filed 2012-06-04 as bug #1680)\n\nWhen an optimizer is given limits on the variable values, it may reach those\nlimits but will not exceed them. When at the limit, it may need to calculate\na gradient. When the gradient is not supplied analytically, the SimTK::Differentiator\nis used, but it doesn't know about the limits. So it may perturb variables so\nthat they slightly exceed the limit, which may cause errors to be reported by\nthe underlying objective function. This happened in an OpenSim example with\nexcitations, which are limited to 0..1.\n\nSo the Differentiator should be taught about limits, and the optimizers should\nbe modified to convey the limits to it.\n", "reactions": {"url": "https://api.github.com/repos/simbody/simbody/issues/8/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/simbody/simbody/issues/8/timeline", "performed_via_github_app": null}, {"url": "https://api.github.com/repos/simbody/simbody/issues/9", "repository_url": "https://api.github.com/repos/simbody/simbody", "labels_url": "https://api.github.com/repos/simbody/simbody/issues/9/labels{/name}", "comments_url": "https://api.github.com/repos/simbody/simbody/issues/9/comments", "events_url": "https://api.github.com/repos/simbody/simbody/issues/9/events", "html_url": "https://github.com/simbody/simbody/issues/9", "id": 18201581, "node_id": "MDU6SXNzdWUxODIwMTU4MQ==", "number": 9, "title": "Force::Custom::Implementation should provide access to containing subsystem", "user": {"login": "sherm1", "id": 4088016, "node_id": "MDQ6VXNlcjQwODgwMTY=", "avatar_url": "https://avatars.githubusercontent.com/u/4088016?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sherm1", "html_url": "https://github.com/sherm1", "followers_url": "https://api.github.com/users/sherm1/followers", "following_url": "https://api.github.com/users/sherm1/following{/other_user}", "gists_url": "https://api.github.com/users/sherm1/gists{/gist_id}", "starred_url": "https://api.github.com/users/sherm1/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sherm1/subscriptions", "organizations_url": "https://api.github.com/users/sherm1/orgs", "repos_url": "https://api.github.com/users/sherm1/repos", "events_url": "https://api.github.com/users/sherm1/events{/privacy}", "received_events_url": "https://api.github.com/users/sherm1/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 52267853, "node_id": "MDU6TGFiZWw1MjI2Nzg1Mw==", "url": "https://api.github.com/repos/simbody/simbody/labels/enhancement", "name": "enhancement", "color": "84b6eb", "default": true, "description": null}], "state": "open", "locked": false, "assignee": {"login": "sherm1", "id": 4088016, "node_id": "MDQ6VXNlcjQwODgwMTY=", "avatar_url": "https://avatars.githubusercontent.com/u/4088016?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sherm1", "html_url": "https://github.com/sherm1", "followers_url": "https://api.github.com/users/sherm1/followers", "following_url": "https://api.github.com/users/sherm1/following{/other_user}", "gists_url": "https://api.github.com/users/sherm1/gists{/gist_id}", "starred_url": "https://api.github.com/users/sherm1/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sherm1/subscriptions", "organizations_url": "https://api.github.com/users/sherm1/orgs", "repos_url": "https://api.github.com/users/sherm1/repos", "events_url": "https://api.github.com/users/sherm1/events{/privacy}", "received_events_url": "https://api.github.com/users/sherm1/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "sherm1", "id": 4088016, "node_id": "MDQ6VXNlcjQwODgwMTY=", "avatar_url": "https://avatars.githubusercontent.com/u/4088016?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sherm1", "html_url": "https://github.com/sherm1", "followers_url": "https://api.github.com/users/sherm1/followers", "following_url": "https://api.github.com/users/sherm1/following{/other_user}", "gists_url": "https://api.github.com/users/sherm1/gists{/gist_id}", "starred_url": "https://api.github.com/users/sherm1/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sherm1/subscriptions", "organizations_url": "https://api.github.com/users/sherm1/orgs", "repos_url": "https://api.github.com/users/sherm1/repos", "events_url": "https://api.github.com/users/sherm1/events{/privacy}", "received_events_url": "https://api.github.com/users/sherm1/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 0, "created_at": "2013-08-18T00:55:05Z", "updated_at": "2013-08-18T00:55:05Z", "closed_at": null, "author_association": "MEMBER", "active_lock_reason": null, "body": "(Transferred from SimTK.org. Original filed 2011-03-10 as feature request #1426)\n\nFrom within a force element it is useful to get access to the containing\nForceSubsystem (e.g. for allocating state variables). The internal ForceImpl\nclass provides getForceSubsystem() for that purpose but the user-extensible\nForce::Custom::Implementation class does not.\n", "reactions": {"url": "https://api.github.com/repos/simbody/simbody/issues/9/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/simbody/simbody/issues/9/timeline", "performed_via_github_app": null}, {"url": "https://api.github.com/repos/simbody/simbody/issues/10", "repository_url": "https://api.github.com/repos/simbody/simbody", "labels_url": "https://api.github.com/repos/simbody/simbody/issues/10/labels{/name}", "comments_url": "https://api.github.com/repos/simbody/simbody/issues/10/comments", "events_url": "https://api.github.com/repos/simbody/simbody/issues/10/events", "html_url": "https://github.com/simbody/simbody/issues/10", "id": 18201608, "node_id": "MDU6SXNzdWUxODIwMTYwOA==", "number": 10, "title": "When the Optimizer is asked to use the BestAvailable algorithm, user cannot ascertain what was chosen.", "user": {"login": "sherm1", "id": 4088016, "node_id": "MDQ6VXNlcjQwODgwMTY=", "avatar_url": "https://avatars.githubusercontent.com/u/4088016?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sherm1", "html_url": "https://github.com/sherm1", "followers_url": "https://api.github.com/users/sherm1/followers", "following_url": "https://api.github.com/users/sherm1/following{/other_user}", "gists_url": "https://api.github.com/users/sherm1/gists{/gist_id}", "starred_url": "https://api.github.com/users/sherm1/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sherm1/subscriptions", "organizations_url": "https://api.github.com/users/sherm1/orgs", "repos_url": "https://api.github.com/users/sherm1/repos", "events_url": "https://api.github.com/users/sherm1/events{/privacy}", "received_events_url": "https://api.github.com/users/sherm1/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 52267853, "node_id": "MDU6TGFiZWw1MjI2Nzg1Mw==", "url": "https://api.github.com/repos/simbody/simbody/labels/enhancement", "name": "enhancement", "color": "84b6eb", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": {"login": "sherm1", "id": 4088016, "node_id": "MDQ6VXNlcjQwODgwMTY=", "avatar_url": "https://avatars.githubusercontent.com/u/4088016?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sherm1", "html_url": "https://github.com/sherm1", "followers_url": "https://api.github.com/users/sherm1/followers", "following_url": "https://api.github.com/users/sherm1/following{/other_user}", "gists_url": "https://api.github.com/users/sherm1/gists{/gist_id}", "starred_url": "https://api.github.com/users/sherm1/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sherm1/subscriptions", "organizations_url": "https://api.github.com/users/sherm1/orgs", "repos_url": "https://api.github.com/users/sherm1/repos", "events_url": "https://api.github.com/users/sherm1/events{/privacy}", "received_events_url": "https://api.github.com/users/sherm1/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "sherm1", "id": 4088016, "node_id": "MDQ6VXNlcjQwODgwMTY=", "avatar_url": "https://avatars.githubusercontent.com/u/4088016?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sherm1", "html_url": "https://github.com/sherm1", "followers_url": "https://api.github.com/users/sherm1/followers", "following_url": "https://api.github.com/users/sherm1/following{/other_user}", "gists_url": "https://api.github.com/users/sherm1/gists{/gist_id}", "starred_url": "https://api.github.com/users/sherm1/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sherm1/subscriptions", "organizations_url": "https://api.github.com/users/sherm1/orgs", "repos_url": "https://api.github.com/users/sherm1/repos", "events_url": "https://api.github.com/users/sherm1/events{/privacy}", "received_events_url": "https://api.github.com/users/sherm1/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 1, "created_at": "2013-08-18T00:58:05Z", "updated_at": "2013-10-28T04:52:21Z", "closed_at": "2013-10-28T04:52:21Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "(Transferred from SimTK.org. Original filed by @chrisdembia 2013-05-26 as feature request 1873)\n\nIt would be nice if the user could find out which algorithm was chosen\nfor optimization, when the BestAvailable argument is provided to the constructor.\nPerhaps a 'getAlgorithm' method could do the job.\n", "reactions": {"url": "https://api.github.com/repos/simbody/simbody/issues/10/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/simbody/simbody/issues/10/timeline", "performed_via_github_app": null}, {"url": "https://api.github.com/repos/simbody/simbody/issues/11", "repository_url": "https://api.github.com/repos/simbody/simbody", "labels_url": "https://api.github.com/repos/simbody/simbody/issues/11/labels{/name}", "comments_url": "https://api.github.com/repos/simbody/simbody/issues/11/comments", "events_url": "https://api.github.com/repos/simbody/simbody/issues/11/events", "html_url": "https://github.com/simbody/simbody/issues/11", "id": 18258159, "node_id": "MDU6SXNzdWUxODI1ODE1OQ==", "number": 11, "title": "NoSlip1d constraint does not allow the Case body to be one of the two constrained bodies.", "user": {"login": "sherm1", "id": 4088016, "node_id": "MDQ6VXNlcjQwODgwMTY=", "avatar_url": "https://avatars.githubusercontent.com/u/4088016?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sherm1", "html_url": "https://github.com/sherm1", "followers_url": "https://api.github.com/users/sherm1/followers", "following_url": "https://api.github.com/users/sherm1/following{/other_user}", "gists_url": "https://api.github.com/users/sherm1/gists{/gist_id}", "starred_url": "https://api.github.com/users/sherm1/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sherm1/subscriptions", "organizations_url": "https://api.github.com/users/sherm1/orgs", "repos_url": "https://api.github.com/users/sherm1/repos", "events_url": "https://api.github.com/users/sherm1/events{/privacy}", "received_events_url": "https://api.github.com/users/sherm1/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 52267851, "node_id": "MDU6TGFiZWw1MjI2Nzg1MQ==", "url": "https://api.github.com/repos/simbody/simbody/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}, {"id": 52759775, "node_id": "MDU6TGFiZWw1Mjc1OTc3NQ==", "url": "https://api.github.com/repos/simbody/simbody/labels/constraint", "name": "constraint", "color": "d4c5f9", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": {"login": "sherm1", "id": 4088016, "node_id": "MDQ6VXNlcjQwODgwMTY=", "avatar_url": "https://avatars.githubusercontent.com/u/4088016?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sherm1", "html_url": "https://github.com/sherm1", "followers_url": "https://api.github.com/users/sherm1/followers", "following_url": "https://api.github.com/users/sherm1/following{/other_user}", "gists_url": "https://api.github.com/users/sherm1/gists{/gist_id}", "starred_url": "https://api.github.com/users/sherm1/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sherm1/subscriptions", "organizations_url": "https://api.github.com/users/sherm1/orgs", "repos_url": "https://api.github.com/users/sherm1/repos", "events_url": "https://api.github.com/users/sherm1/events{/privacy}", "received_events_url": "https://api.github.com/users/sherm1/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "sherm1", "id": 4088016, "node_id": "MDQ6VXNlcjQwODgwMTY=", "avatar_url": "https://avatars.githubusercontent.com/u/4088016?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sherm1", "html_url": "https://github.com/sherm1", "followers_url": "https://api.github.com/users/sherm1/followers", "following_url": "https://api.github.com/users/sherm1/following{/other_user}", "gists_url": "https://api.github.com/users/sherm1/gists{/gist_id}", "starred_url": "https://api.github.com/users/sherm1/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sherm1/subscriptions", "organizations_url": "https://api.github.com/users/sherm1/orgs", "repos_url": "https://api.github.com/users/sherm1/repos", "events_url": "https://api.github.com/users/sherm1/events{/privacy}", "received_events_url": "https://api.github.com/users/sherm1/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 6, "created_at": "2013-08-19T19:19:15Z", "updated_at": "2013-11-29T20:35:37Z", "closed_at": "2013-11-29T19:54:47Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "(Transferred from SimTK.org. Filed by Ajay Seth 2009-03-31.)\n\nI think the no-slip constraint should allow the case body to be the same as one of the other bodies. I can't think of any reason that shouldn't work fine, and the fact that it is prohibited is actually an accident -- there is no explicit test preventing it; it just got caught by some generic constraint bugcatching code.\n", "reactions": {"url": "https://api.github.com/repos/simbody/simbody/issues/11/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/simbody/simbody/issues/11/timeline", "performed_via_github_app": null}, {"url": "https://api.github.com/repos/simbody/simbody/issues/12", "repository_url": "https://api.github.com/repos/simbody/simbody", "labels_url": "https://api.github.com/repos/simbody/simbody/issues/12/labels{/name}", "comments_url": "https://api.github.com/repos/simbody/simbody/issues/12/comments", "events_url": "https://api.github.com/repos/simbody/simbody/issues/12/events", "html_url": "https://github.com/simbody/simbody/issues/12", "id": 18258303, "node_id": "MDU6SXNzdWUxODI1ODMwMw==", "number": 12, "title": "Mobilizer default geometry not updated when mobilizer is reversed", "user": {"login": "sherm1", "id": 4088016, "node_id": "MDQ6VXNlcjQwODgwMTY=", "avatar_url": "https://avatars.githubusercontent.com/u/4088016?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sherm1", "html_url": "https://github.com/sherm1", "followers_url": "https://api.github.com/users/sherm1/followers", "following_url": "https://api.github.com/users/sherm1/following{/other_user}", "gists_url": "https://api.github.com/users/sherm1/gists{/gist_id}", "starred_url": "https://api.github.com/users/sherm1/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sherm1/subscriptions", "organizations_url": "https://api.github.com/users/sherm1/orgs", "repos_url": "https://api.github.com/users/sherm1/repos", "events_url": "https://api.github.com/users/sherm1/events{/privacy}", "received_events_url": "https://api.github.com/users/sherm1/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 52267851, "node_id": "MDU6TGFiZWw1MjI2Nzg1MQ==", "url": "https://api.github.com/repos/simbody/simbody/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}, {"id": 52759897, "node_id": "MDU6TGFiZWw1Mjc1OTg5Nw==", "url": "https://api.github.com/repos/simbody/simbody/labels/visualization", "name": "visualization", "color": "bfd4f2", "default": false, "description": null}, {"id": 52760006, "node_id": "MDU6TGFiZWw1Mjc2MDAwNg==", "url": "https://api.github.com/repos/simbody/simbody/labels/mobilizer", "name": "mobilizer", "color": "c7def8", "default": false, "description": null}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2013-08-19T19:22:33Z", "updated_at": "2013-08-19T21:47:45Z", "closed_at": null, "author_association": "MEMBER", "active_lock_reason": null, "body": "(Transferred from SimTK.org. Filed by Ajay Seth 2009-04-09)\n\nLooking at the default decorative geometry of the ellipsoid, it does not appear to change sense- that is it is always affixed to the parent, when in the reverse case it should be affixed to the body.\n", "reactions": {"url": "https://api.github.com/repos/simbody/simbody/issues/12/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/simbody/simbody/issues/12/timeline", "performed_via_github_app": null}, {"url": "https://api.github.com/repos/simbody/simbody/issues/13", "repository_url": "https://api.github.com/repos/simbody/simbody", "labels_url": "https://api.github.com/repos/simbody/simbody/issues/13/labels{/name}", "comments_url": "https://api.github.com/repos/simbody/simbody/issues/13/comments", "events_url": "https://api.github.com/repos/simbody/simbody/issues/13/events", "html_url": "https://github.com/simbody/simbody/issues/13", "id": 18258446, "node_id": "MDU6SXNzdWUxODI1ODQ0Ng==", "number": 13, "title": "Differentiator should check if sizes were set for gradient & jacobian functions", "user": {"login": "sherm1", "id": 4088016, "node_id": "MDQ6VXNlcjQwODgwMTY=", "avatar_url": "https://avatars.githubusercontent.com/u/4088016?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sherm1", "html_url": "https://github.com/sherm1", "followers_url": "https://api.github.com/users/sherm1/followers", "following_url": "https://api.github.com/users/sherm1/following{/other_user}", "gists_url": "https://api.github.com/users/sherm1/gists{/gist_id}", "starred_url": "https://api.github.com/users/sherm1/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sherm1/subscriptions", "organizations_url": "https://api.github.com/users/sherm1/orgs", "repos_url": "https://api.github.com/users/sherm1/repos", "events_url": "https://api.github.com/users/sherm1/events{/privacy}", "received_events_url": "https://api.github.com/users/sherm1/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 52267853, "node_id": "MDU6TGFiZWw1MjI2Nzg1Mw==", "url": "https://api.github.com/repos/simbody/simbody/labels/enhancement", "name": "enhancement", "color": "84b6eb", "default": true, "description": null}, {"id": 108217628, "node_id": "MDU6TGFiZWwxMDgyMTc2Mjg=", "url": "https://api.github.com/repos/simbody/simbody/labels/help%20wanted", "name": "help wanted", "color": "009800", "default": true, "description": null}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 7, "created_at": "2013-08-19T19:25:33Z", "updated_at": "2016-05-04T00:28:48Z", "closed_at": null, "author_association": "MEMBER", "active_lock_reason": null, "body": "(Transferred from SimTK.org. Filed 2010-02-03)\n\n(Tim Dorn ran into this problem)\n\nIf a user derives a Differentiator function from GradientFunction or JacobianFunction but neglects to call the appropriate base class constructor, the sizes will be passed as \"-1\" so this mistake is easy to detect. However, despite extensive error checking in Differentiator it doesn't appear to check those sizes for reasonableness before plowing ahead and encountering mysterious disasters.\n\nThose checks should be added, with a helpful error message mentioning that the base class constructors need to be called explicitly.\n", "reactions": {"url": "https://api.github.com/repos/simbody/simbody/issues/13/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/simbody/simbody/issues/13/timeline", "performed_via_github_app": null}, {"url": "https://api.github.com/repos/simbody/simbody/issues/15", "repository_url": "https://api.github.com/repos/simbody/simbody", "labels_url": "https://api.github.com/repos/simbody/simbody/issues/15/labels{/name}", "comments_url": "https://api.github.com/repos/simbody/simbody/issues/15/comments", "events_url": "https://api.github.com/repos/simbody/simbody/issues/15/events", "html_url": "https://github.com/simbody/simbody/issues/15", "id": 18387779, "node_id": "MDU6SXNzdWUxODM4Nzc3OQ==", "number": 15, "title": "isSameMobilizedBody() doesn't work as documented", "user": {"login": "sherm1", "id": 4088016, "node_id": "MDQ6VXNlcjQwODgwMTY=", "avatar_url": "https://avatars.githubusercontent.com/u/4088016?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sherm1", "html_url": "https://github.com/sherm1", "followers_url": "https://api.github.com/users/sherm1/followers", "following_url": "https://api.github.com/users/sherm1/following{/other_user}", "gists_url": "https://api.github.com/users/sherm1/gists{/gist_id}", "starred_url": "https://api.github.com/users/sherm1/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sherm1/subscriptions", "organizations_url": "https://api.github.com/users/sherm1/orgs", "repos_url": "https://api.github.com/users/sherm1/repos", "events_url": "https://api.github.com/users/sherm1/events{/privacy}", "received_events_url": "https://api.github.com/users/sherm1/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 52267851, "node_id": "MDU6TGFiZWw1MjI2Nzg1MQ==", "url": "https://api.github.com/repos/simbody/simbody/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}, {"id": 52760006, "node_id": "MDU6TGFiZWw1Mjc2MDAwNg==", "url": "https://api.github.com/repos/simbody/simbody/labels/mobilizer", "name": "mobilizer", "color": "c7def8", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": {"login": "sherm1", "id": 4088016, "node_id": "MDQ6VXNlcjQwODgwMTY=", "avatar_url": "https://avatars.githubusercontent.com/u/4088016?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sherm1", "html_url": "https://github.com/sherm1", "followers_url": "https://api.github.com/users/sherm1/followers", "following_url": "https://api.github.com/users/sherm1/following{/other_user}", "gists_url": "https://api.github.com/users/sherm1/gists{/gist_id}", "starred_url": "https://api.github.com/users/sherm1/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sherm1/subscriptions", "organizations_url": "https://api.github.com/users/sherm1/orgs", "repos_url": "https://api.github.com/users/sherm1/repos", "events_url": "https://api.github.com/users/sherm1/events{/privacy}", "received_events_url": "https://api.github.com/users/sherm1/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "sherm1", "id": 4088016, "node_id": "MDQ6VXNlcjQwODgwMTY=", "avatar_url": "https://avatars.githubusercontent.com/u/4088016?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sherm1", "html_url": "https://github.com/sherm1", "followers_url": "https://api.github.com/users/sherm1/followers", "following_url": "https://api.github.com/users/sherm1/following{/other_user}", "gists_url": "https://api.github.com/users/sherm1/gists{/gist_id}", "starred_url": "https://api.github.com/users/sherm1/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sherm1/subscriptions", "organizations_url": "https://api.github.com/users/sherm1/orgs", "repos_url": "https://api.github.com/users/sherm1/repos", "events_url": "https://api.github.com/users/sherm1/events{/privacy}", "received_events_url": "https://api.github.com/users/sherm1/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 0, "created_at": "2013-08-21T23:59:57Z", "updated_at": "2013-08-22T00:15:57Z", "closed_at": "2013-08-22T00:13:55Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "MobilizedBody::isSameMobilizedBody() is supposed to compare two MobilizedBody handles to see if they both point to the same implementation object. Instead, it is comparing the handle addresses so only returns true if they are the same _handles_, leading to false negatives when a handle is used as a reference to an object owned elsewhere.\n", "reactions": {"url": "https://api.github.com/repos/simbody/simbody/issues/15/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/simbody/simbody/issues/15/timeline", "performed_via_github_app": null}, {"url": "https://api.github.com/repos/simbody/simbody/issues/17", "repository_url": "https://api.github.com/repos/simbody/simbody", "labels_url": "https://api.github.com/repos/simbody/simbody/issues/17/labels{/name}", "comments_url": "https://api.github.com/repos/simbody/simbody/issues/17/comments", "events_url": "https://api.github.com/repos/simbody/simbody/issues/17/events", "html_url": "https://github.com/simbody/simbody/issues/17", "id": 18388213, "node_id": "MDU6SXNzdWUxODM4ODIxMw==", "number": 17, "title": "FindSimbody.cmake not working properly for 64 bit Windows", "user": {"login": "sherm1", "id": 4088016, "node_id": "MDQ6VXNlcjQwODgwMTY=", "avatar_url": "https://avatars.githubusercontent.com/u/4088016?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sherm1", "html_url": "https://github.com/sherm1", "followers_url": "https://api.github.com/users/sherm1/followers", "following_url": "https://api.github.com/users/sherm1/following{/other_user}", "gists_url": "https://api.github.com/users/sherm1/gists{/gist_id}", "starred_url": "https://api.github.com/users/sherm1/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sherm1/subscriptions", "organizations_url": "https://api.github.com/users/sherm1/orgs", "repos_url": "https://api.github.com/users/sherm1/repos", "events_url": "https://api.github.com/users/sherm1/events{/privacy}", "received_events_url": "https://api.github.com/users/sherm1/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 52267851, "node_id": "MDU6TGFiZWw1MjI2Nzg1MQ==", "url": "https://api.github.com/repos/simbody/simbody/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": {"login": "sherm1", "id": 4088016, "node_id": "MDQ6VXNlcjQwODgwMTY=", "avatar_url": "https://avatars.githubusercontent.com/u/4088016?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sherm1", "html_url": "https://github.com/sherm1", "followers_url": "https://api.github.com/users/sherm1/followers", "following_url": "https://api.github.com/users/sherm1/following{/other_user}", "gists_url": "https://api.github.com/users/sherm1/gists{/gist_id}", "starred_url": "https://api.github.com/users/sherm1/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sherm1/subscriptions", "organizations_url": "https://api.github.com/users/sherm1/orgs", "repos_url": "https://api.github.com/users/sherm1/repos", "events_url": "https://api.github.com/users/sherm1/events{/privacy}", "received_events_url": "https://api.github.com/users/sherm1/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "sherm1", "id": 4088016, "node_id": "MDQ6VXNlcjQwODgwMTY=", "avatar_url": "https://avatars.githubusercontent.com/u/4088016?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sherm1", "html_url": "https://github.com/sherm1", "followers_url": "https://api.github.com/users/sherm1/followers", "following_url": "https://api.github.com/users/sherm1/following{/other_user}", "gists_url": "https://api.github.com/users/sherm1/gists{/gist_id}", "starred_url": "https://api.github.com/users/sherm1/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sherm1/subscriptions", "organizations_url": "https://api.github.com/users/sherm1/orgs", "repos_url": "https://api.github.com/users/sherm1/repos", "events_url": "https://api.github.com/users/sherm1/events{/privacy}", "received_events_url": "https://api.github.com/users/sherm1/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 1, "created_at": "2013-08-22T00:14:40Z", "updated_at": "2013-08-22T00:15:29Z", "closed_at": "2013-08-22T00:15:29Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "", "reactions": {"url": "https://api.github.com/repos/simbody/simbody/issues/17/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/simbody/simbody/issues/17/timeline", "performed_via_github_app": null}, {"url": "https://api.github.com/repos/simbody/simbody/issues/20", "repository_url": "https://api.github.com/repos/simbody/simbody", "labels_url": "https://api.github.com/repos/simbody/simbody/issues/20/labels{/name}", "comments_url": "https://api.github.com/repos/simbody/simbody/issues/20/comments", "events_url": "https://api.github.com/repos/simbody/simbody/issues/20/events", "html_url": "https://github.com/simbody/simbody/issues/20", "id": 18631371, "node_id": "MDU6SXNzdWUxODYzMTM3MQ==", "number": 20, "title": "Mobilizer::lock() doesn't reset Q and U immediately", "user": {"login": "kingchurch", "id": 5223822, "node_id": "MDQ6VXNlcjUyMjM4MjI=", "avatar_url": "https://avatars.githubusercontent.com/u/5223822?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kingchurch", "html_url": "https://github.com/kingchurch", "followers_url": "https://api.github.com/users/kingchurch/followers", "following_url": "https://api.github.com/users/kingchurch/following{/other_user}", "gists_url": "https://api.github.com/users/kingchurch/gists{/gist_id}", "starred_url": "https://api.github.com/users/kingchurch/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kingchurch/subscriptions", "organizations_url": "https://api.github.com/users/kingchurch/orgs", "repos_url": "https://api.github.com/users/kingchurch/repos", "events_url": "https://api.github.com/users/kingchurch/events{/privacy}", "received_events_url": "https://api.github.com/users/kingchurch/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 52267853, "node_id": "MDU6TGFiZWw1MjI2Nzg1Mw==", "url": "https://api.github.com/repos/simbody/simbody/labels/enhancement", "name": "enhancement", "color": "84b6eb", "default": true, "description": null}, {"id": 52760006, "node_id": "MDU6TGFiZWw1Mjc2MDAwNg==", "url": "https://api.github.com/repos/simbody/simbody/labels/mobilizer", "name": "mobilizer", "color": "c7def8", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2013-08-27T20:18:03Z", "updated_at": "2013-09-09T19:01:55Z", "closed_at": "2013-09-09T19:01:55Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "The lock() method doesn\u2019t change q or u but rather just records the new locked position. Then the next call to prescribe() forces q and u to the right values. prescribe() is usually called as part of integration. \n\nWhen we use lock() for controlling a robotic arm we would like the mobility to be locked instantaneously. If the lock() is called at POSITION level it will be nice if it automatically clear the U to 0, reset or record the Q.  So that when unlock() is called it won't pick up residual U.\n", "reactions": {"url": "https://api.github.com/repos/simbody/simbody/issues/20/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/simbody/simbody/issues/20/timeline", "performed_via_github_app": null}, {"url": "https://api.github.com/repos/simbody/simbody/issues/21", "repository_url": "https://api.github.com/repos/simbody/simbody", "labels_url": "https://api.github.com/repos/simbody/simbody/issues/21/labels{/name}", "comments_url": "https://api.github.com/repos/simbody/simbody/issues/21/comments", "events_url": "https://api.github.com/repos/simbody/simbody/issues/21/events", "html_url": "https://github.com/simbody/simbody/issues/21", "id": 18631535, "node_id": "MDU6SXNzdWUxODYzMTUzNQ==", "number": 21, "title": "Optimize performance of locked mobilizers", "user": {"login": "kingchurch", "id": 5223822, "node_id": "MDQ6VXNlcjUyMjM4MjI=", "avatar_url": "https://avatars.githubusercontent.com/u/5223822?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kingchurch", "html_url": "https://github.com/kingchurch", "followers_url": "https://api.github.com/users/kingchurch/followers", "following_url": "https://api.github.com/users/kingchurch/following{/other_user}", "gists_url": "https://api.github.com/users/kingchurch/gists{/gist_id}", "starred_url": "https://api.github.com/users/kingchurch/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kingchurch/subscriptions", "organizations_url": "https://api.github.com/users/kingchurch/orgs", "repos_url": "https://api.github.com/users/kingchurch/repos", "events_url": "https://api.github.com/users/kingchurch/events{/privacy}", "received_events_url": "https://api.github.com/users/kingchurch/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 52267856, "node_id": "MDU6TGFiZWw1MjI2Nzg1Ng==", "url": "https://api.github.com/repos/simbody/simbody/labels/wontfix", "name": "wontfix", "color": "ffffff", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2013-08-27T20:21:21Z", "updated_at": "2013-10-22T17:33:32Z", "closed_at": "2013-10-22T04:06:12Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "Currently when mobilizers are locked the mobility force elements on the mobilizers are still active.  Can we optimize the locked mobilizer performance by automatically disabling all force elements on the mobilizers and re-enabling them when the mobilizers are unlocked ?  The ideal goal for performance is to treat locked mobilizers as rigid bodies relative to their parent.\n", "reactions": {"url": "https://api.github.com/repos/simbody/simbody/issues/21/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/simbody/simbody/issues/21/timeline", "performed_via_github_app": null}, {"url": "https://api.github.com/repos/simbody/simbody/issues/26", "repository_url": "https://api.github.com/repos/simbody/simbody", "labels_url": "https://api.github.com/repos/simbody/simbody/issues/26/labels{/name}", "comments_url": "https://api.github.com/repos/simbody/simbody/issues/26/comments", "events_url": "https://api.github.com/repos/simbody/simbody/issues/26/events", "html_url": "https://github.com/simbody/simbody/issues/26", "id": 18796480, "node_id": "MDU6SXNzdWUxODc5NjQ4MA==", "number": 26, "title": "SimTK::SimbodyMatterSubsystem::calcBiasForStationJacobian that returns Matrix instead of Vector_<Vec3>", "user": {"login": "chrisdembia", "id": 846001, "node_id": "MDQ6VXNlcjg0NjAwMQ==", "avatar_url": "https://avatars.githubusercontent.com/u/846001?v=4", "gravatar_id": "", "url": "https://api.github.com/users/chrisdembia", "html_url": "https://github.com/chrisdembia", "followers_url": "https://api.github.com/users/chrisdembia/followers", "following_url": "https://api.github.com/users/chrisdembia/following{/other_user}", "gists_url": "https://api.github.com/users/chrisdembia/gists{/gist_id}", "starred_url": "https://api.github.com/users/chrisdembia/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/chrisdembia/subscriptions", "organizations_url": "https://api.github.com/users/chrisdembia/orgs", "repos_url": "https://api.github.com/users/chrisdembia/repos", "events_url": "https://api.github.com/users/chrisdembia/events{/privacy}", "received_events_url": "https://api.github.com/users/chrisdembia/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2013-08-30T16:12:44Z", "updated_at": "2013-08-30T16:21:30Z", "closed_at": "2013-08-30T16:17:34Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "I desire to compute `JSDotu`, but as a 3 \\* nt x nu matrix. Such a method would allow me some convenience, as I would then not need to assemble the 3 \\* nt x nu matrix from the `Vector_` of `Vec3`'s.\n", "reactions": {"url": "https://api.github.com/repos/simbody/simbody/issues/26/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/simbody/simbody/issues/26/timeline", "performed_via_github_app": null}, {"url": "https://api.github.com/repos/simbody/simbody/issues/27", "repository_url": "https://api.github.com/repos/simbody/simbody", "labels_url": "https://api.github.com/repos/simbody/simbody/issues/27/labels{/name}", "comments_url": "https://api.github.com/repos/simbody/simbody/issues/27/comments", "events_url": "https://api.github.com/repos/simbody/simbody/issues/27/events", "html_url": "https://github.com/simbody/simbody/issues/27", "id": 18804204, "node_id": "MDU6SXNzdWUxODgwNDIwNA==", "number": 27, "title": "visualizer executable should have simbody in the name", "user": {"login": "sherm1", "id": 4088016, "node_id": "MDQ6VXNlcjQwODgwMTY=", "avatar_url": "https://avatars.githubusercontent.com/u/4088016?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sherm1", "html_url": "https://github.com/sherm1", "followers_url": "https://api.github.com/users/sherm1/followers", "following_url": "https://api.github.com/users/sherm1/following{/other_user}", "gists_url": "https://api.github.com/users/sherm1/gists{/gist_id}", "starred_url": "https://api.github.com/users/sherm1/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sherm1/subscriptions", "organizations_url": "https://api.github.com/users/sherm1/orgs", "repos_url": "https://api.github.com/users/sherm1/repos", "events_url": "https://api.github.com/users/sherm1/events{/privacy}", "received_events_url": "https://api.github.com/users/sherm1/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 52759897, "node_id": "MDU6TGFiZWw1Mjc1OTg5Nw==", "url": "https://api.github.com/repos/simbody/simbody/labels/visualization", "name": "visualization", "color": "bfd4f2", "default": false, "description": null}, {"id": 54361018, "node_id": "MDU6TGFiZWw1NDM2MTAxOA==", "url": "https://api.github.com/repos/simbody/simbody/labels/build", "name": "build", "color": "bfe5bf", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2013-08-30T18:56:59Z", "updated_at": "2013-10-22T03:50:14Z", "closed_at": "2013-10-22T03:50:14Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "Per @chrisdembia and @j-rivero, for Debian installation into /usr/bin, the Simbody visualizer should have a collision-proof name like \"simbody-visualizer\" rather than the generic name it currently has (VisualizerGUI).\n", "reactions": {"url": "https://api.github.com/repos/simbody/simbody/issues/27/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/simbody/simbody/issues/27/timeline", "performed_via_github_app": null}, {"url": "https://api.github.com/repos/simbody/simbody/issues/28", "repository_url": "https://api.github.com/repos/simbody/simbody", "labels_url": "https://api.github.com/repos/simbody/simbody/issues/28/labels{/name}", "comments_url": "https://api.github.com/repos/simbody/simbody/issues/28/comments", "events_url": "https://api.github.com/repos/simbody/simbody/issues/28/events", "html_url": "https://github.com/simbody/simbody/issues/28", "id": 18811726, "node_id": "MDU6SXNzdWUxODgxMTcyNg==", "number": 28, "title": "Need a method that returns the coriolis/centrifugal force in internal coordinates", "user": {"login": "sherm1", "id": 4088016, "node_id": "MDQ6VXNlcjQwODgwMTY=", "avatar_url": "https://avatars.githubusercontent.com/u/4088016?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sherm1", "html_url": "https://github.com/sherm1", "followers_url": "https://api.github.com/users/sherm1/followers", "following_url": "https://api.github.com/users/sherm1/following{/other_user}", "gists_url": "https://api.github.com/users/sherm1/gists{/gist_id}", "starred_url": "https://api.github.com/users/sherm1/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sherm1/subscriptions", "organizations_url": "https://api.github.com/users/sherm1/orgs", "repos_url": "https://api.github.com/users/sherm1/repos", "events_url": "https://api.github.com/users/sherm1/events{/privacy}", "received_events_url": "https://api.github.com/users/sherm1/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 52267853, "node_id": "MDU6TGFiZWw1MjI2Nzg1Mw==", "url": "https://api.github.com/repos/simbody/simbody/labels/enhancement", "name": "enhancement", "color": "84b6eb", "default": true, "description": null}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2013-08-30T21:57:50Z", "updated_at": "2014-04-26T23:44:03Z", "closed_at": null, "author_association": "MEMBER", "active_lock_reason": null, "body": "SimbodyMatterSubsystem can return coriolis/centrifugal forces on a per-body basis which can be mapped to internal forces. This is too complicated for many users -- it would be nice to have a convenience method that would return C(q,qdot) directly. (Came up in OpenSim workshop.)\n", "reactions": {"url": "https://api.github.com/repos/simbody/simbody/issues/28/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/simbody/simbody/issues/28/timeline", "performed_via_github_app": null}, {"url": "https://api.github.com/repos/simbody/simbody/issues/29", "repository_url": "https://api.github.com/repos/simbody/simbody", "labels_url": "https://api.github.com/repos/simbody/simbody/issues/29/labels{/name}", "comments_url": "https://api.github.com/repos/simbody/simbody/issues/29/comments", "events_url": "https://api.github.com/repos/simbody/simbody/issues/29/events", "html_url": "https://github.com/simbody/simbody/issues/29", "id": 18829094, "node_id": "MDU6SXNzdWUxODgyOTA5NA==", "number": 29, "title": "Cannot use multiplyByMInv or calcMInv in OpenSim::Controller::computeControls(), when calling this latter method more than once", "user": {"login": "chrisdembia", "id": 846001, "node_id": "MDQ6VXNlcjg0NjAwMQ==", "avatar_url": "https://avatars.githubusercontent.com/u/846001?v=4", "gravatar_id": "", "url": "https://api.github.com/users/chrisdembia", "html_url": "https://github.com/chrisdembia", "followers_url": "https://api.github.com/users/chrisdembia/followers", "following_url": "https://api.github.com/users/chrisdembia/following{/other_user}", "gists_url": "https://api.github.com/users/chrisdembia/gists{/gist_id}", "starred_url": "https://api.github.com/users/chrisdembia/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/chrisdembia/subscriptions", "organizations_url": "https://api.github.com/users/chrisdembia/orgs", "repos_url": "https://api.github.com/users/chrisdembia/repos", "events_url": "https://api.github.com/users/chrisdembia/events{/privacy}", "received_events_url": "https://api.github.com/users/chrisdembia/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 52267851, "node_id": "MDU6TGFiZWw1MjI2Nzg1MQ==", "url": "https://api.github.com/repos/simbody/simbody/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2013-08-31T22:07:11Z", "updated_at": "2013-09-03T02:49:26Z", "closed_at": "2013-09-03T02:49:26Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "I am working on an operational-space controller based off Gerald Brantner's BIO 485 project at Stanford and Emel Demircan's direct marker control.\n\nI am implementing it in OpenSim in an OpenSim::Controller, and am using it as a tool, just like CMCTool.\n\nhttps://github.com/chrisdembia/direct-marker-tracking\n\nI have run into an issue that Gerald also ran into. I am making calls to `multiplyByMInv()` inside `OpenSim::DirectMarkerTrackingController::computeControls()`, but I get a SimTK exception if this is called 2 times:\n\n```\nDEBUG COUNT: 1\nDirectMarkerTrackingController.computeControls:  t = 0\nDEBUG COUNT: 2\nDirectMarkerTrackingController.computeControls:  t = 0\nterminate called after throwing an instance of 'SimTK::Exception::StageTooLow'\n  what():  SimTK Exception thrown at State.cpp:2069:\n  Expected stage to be at least Dynamics in StateImpl::getCacheEntry() but current stage was Velocity\n```\n\nThis can be reproduced by building my project at https://github.com/chrisdembia/direct-marker-tracking and running:\n`opensim-tracker double_pendulum_tracker_setup.xml`. I am using trunk for opensim, and master for simbody.\n\nI used the same workaround that Gerald uses. To get the code to work (to use the workaround) change `withBug` to `false`, in DirectMarkerTrackingController.cpp (https://github.com/chrisdembia/direct-marker-tracking/blob/master/DirectMarkerTrackingController.cpp#L79).\n", "reactions": {"url": "https://api.github.com/repos/simbody/simbody/issues/29/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/simbody/simbody/issues/29/timeline", "performed_via_github_app": null}, {"url": "https://api.github.com/repos/simbody/simbody/issues/34", "repository_url": "https://api.github.com/repos/simbody/simbody", "labels_url": "https://api.github.com/repos/simbody/simbody/issues/34/labels{/name}", "comments_url": "https://api.github.com/repos/simbody/simbody/issues/34/comments", "events_url": "https://api.github.com/repos/simbody/simbody/issues/34/events", "html_url": "https://github.com/simbody/simbody/issues/34", "id": 19662488, "node_id": "MDU6SXNzdWUxOTY2MjQ4OA==", "number": 34, "title": "Need a way to map back from DecorativeGeometry to the associated object", "user": {"login": "sherm1", "id": 4088016, "node_id": "MDQ6VXNlcjQwODgwMTY=", "avatar_url": "https://avatars.githubusercontent.com/u/4088016?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sherm1", "html_url": "https://github.com/sherm1", "followers_url": "https://api.github.com/users/sherm1/followers", "following_url": "https://api.github.com/users/sherm1/following{/other_user}", "gists_url": "https://api.github.com/users/sherm1/gists{/gist_id}", "starred_url": "https://api.github.com/users/sherm1/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sherm1/subscriptions", "organizations_url": "https://api.github.com/users/sherm1/orgs", "repos_url": "https://api.github.com/users/sherm1/repos", "events_url": "https://api.github.com/users/sherm1/events{/privacy}", "received_events_url": "https://api.github.com/users/sherm1/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 52267853, "node_id": "MDU6TGFiZWw1MjI2Nzg1Mw==", "url": "https://api.github.com/repos/simbody/simbody/labels/enhancement", "name": "enhancement", "color": "84b6eb", "default": true, "description": null}, {"id": 52759897, "node_id": "MDU6TGFiZWw1Mjc1OTg5Nw==", "url": "https://api.github.com/repos/simbody/simbody/labels/visualization", "name": "visualization", "color": "bfd4f2", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": {"login": "sherm1", "id": 4088016, "node_id": "MDQ6VXNlcjQwODgwMTY=", "avatar_url": "https://avatars.githubusercontent.com/u/4088016?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sherm1", "html_url": "https://github.com/sherm1", "followers_url": "https://api.github.com/users/sherm1/followers", "following_url": "https://api.github.com/users/sherm1/following{/other_user}", "gists_url": "https://api.github.com/users/sherm1/gists{/gist_id}", "starred_url": "https://api.github.com/users/sherm1/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sherm1/subscriptions", "organizations_url": "https://api.github.com/users/sherm1/orgs", "repos_url": "https://api.github.com/users/sherm1/repos", "events_url": "https://api.github.com/users/sherm1/events{/privacy}", "received_events_url": "https://api.github.com/users/sherm1/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "sherm1", "id": 4088016, "node_id": "MDQ6VXNlcjQwODgwMTY=", "avatar_url": "https://avatars.githubusercontent.com/u/4088016?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sherm1", "html_url": "https://github.com/sherm1", "followers_url": "https://api.github.com/users/sherm1/followers", "following_url": "https://api.github.com/users/sherm1/following{/other_user}", "gists_url": "https://api.github.com/users/sherm1/gists{/gist_id}", "starred_url": "https://api.github.com/users/sherm1/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sherm1/subscriptions", "organizations_url": "https://api.github.com/users/sherm1/orgs", "repos_url": "https://api.github.com/users/sherm1/repos", "events_url": "https://api.github.com/users/sherm1/events{/privacy}", "received_events_url": "https://api.github.com/users/sherm1/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 1, "created_at": "2013-09-18T05:27:57Z", "updated_at": "2013-10-28T05:06:17Z", "closed_at": "2013-10-28T05:06:17Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "@aymanhab wants to be able to select in the OpenSim GUI geometry that results from `DecorativeGeometry` objects, and then map those back to the OpenSim objects to which the user meant to refer. We decided that the `DecorativeGeometry` objects should maintain a \"user reference pointer\", that is, a `void*` that means something to the person who created it. Then a selection that identifies a `DecorativeGeometry` can return the associated pointer which can be mapped back to something meaningful.\n", "reactions": {"url": "https://api.github.com/repos/simbody/simbody/issues/34/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/simbody/simbody/issues/34/timeline", "performed_via_github_app": null}, {"url": "https://api.github.com/repos/simbody/simbody/issues/36", "repository_url": "https://api.github.com/repos/simbody/simbody", "labels_url": "https://api.github.com/repos/simbody/simbody/issues/36/labels{/name}", "comments_url": "https://api.github.com/repos/simbody/simbody/issues/36/comments", "events_url": "https://api.github.com/repos/simbody/simbody/issues/36/events", "html_url": "https://github.com/simbody/simbody/issues/36", "id": 19828067, "node_id": "MDU6SXNzdWUxOTgyODA2Nw==", "number": 36, "title": "Need a general way to transfer state between corresponding simbody elements.", "user": {"login": "hsu", "id": 138109, "node_id": "MDQ6VXNlcjEzODEwOQ==", "avatar_url": "https://avatars.githubusercontent.com/u/138109?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hsu", "html_url": "https://github.com/hsu", "followers_url": "https://api.github.com/users/hsu/followers", "following_url": "https://api.github.com/users/hsu/following{/other_user}", "gists_url": "https://api.github.com/users/hsu/gists{/gist_id}", "starred_url": "https://api.github.com/users/hsu/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hsu/subscriptions", "organizations_url": "https://api.github.com/users/hsu/orgs", "repos_url": "https://api.github.com/users/hsu/repos", "events_url": "https://api.github.com/users/hsu/events{/privacy}", "received_events_url": "https://api.github.com/users/hsu/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 52267853, "node_id": "MDU6TGFiZWw1MjI2Nzg1Mw==", "url": "https://api.github.com/repos/simbody/simbody/labels/enhancement", "name": "enhancement", "color": "84b6eb", "default": true, "description": null}, {"id": 57297924, "node_id": "MDU6TGFiZWw1NzI5NzkyNA==", "url": "https://api.github.com/repos/simbody/simbody/labels/state", "name": "state", "color": "fbca04", "default": false, "description": null}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2013-09-20T16:45:28Z", "updated_at": "2013-09-20T16:48:12Z", "closed_at": null, "author_association": "MEMBER", "active_lock_reason": null, "body": "Needed by all modeling layers including Gazebo, OpenSim, Roblox (Xulu)...\n", "reactions": {"url": "https://api.github.com/repos/simbody/simbody/issues/36/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/simbody/simbody/issues/36/timeline", "performed_via_github_app": null}, {"url": "https://api.github.com/repos/simbody/simbody/issues/38", "repository_url": "https://api.github.com/repos/simbody/simbody", "labels_url": "https://api.github.com/repos/simbody/simbody/issues/38/labels{/name}", "comments_url": "https://api.github.com/repos/simbody/simbody/issues/38/comments", "events_url": "https://api.github.com/repos/simbody/simbody/issues/38/events", "html_url": "https://github.com/simbody/simbody/issues/38", "id": 20142522, "node_id": "MDU6SXNzdWUyMDE0MjUyMg==", "number": 38, "title": "CMAKE_INSTALL_PREFIX not used", "user": {"login": "scpeters", "id": 3650755, "node_id": "MDQ6VXNlcjM2NTA3NTU=", "avatar_url": "https://avatars.githubusercontent.com/u/3650755?v=4", "gravatar_id": "", "url": "https://api.github.com/users/scpeters", "html_url": "https://github.com/scpeters", "followers_url": "https://api.github.com/users/scpeters/followers", "following_url": "https://api.github.com/users/scpeters/following{/other_user}", "gists_url": "https://api.github.com/users/scpeters/gists{/gist_id}", "starred_url": "https://api.github.com/users/scpeters/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/scpeters/subscriptions", "organizations_url": "https://api.github.com/users/scpeters/orgs", "repos_url": "https://api.github.com/users/scpeters/repos", "events_url": "https://api.github.com/users/scpeters/events{/privacy}", "received_events_url": "https://api.github.com/users/scpeters/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 54361018, "node_id": "MDU6TGFiZWw1NDM2MTAxOA==", "url": "https://api.github.com/repos/simbody/simbody/labels/build", "name": "build", "color": "bfe5bf", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2013-09-26T23:01:53Z", "updated_at": "2013-10-03T16:45:48Z", "closed_at": "2013-10-03T16:45:48Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "In the [root CMakeLists.txt](https://github.com/simbody/simbody/blob/master/CMakeLists.txt#L224), the `CMAKE_INSTALL_PREFIX` variable is replaced by the value of `SimTK_INSTALL_PREFIX`. In the comments (which were added in afc617ee), it states that `CMAKE_INSTALL_PREFIX` is \"always set to something incorrect by CMake\". Is this just an issue with Windows? We use `CMAKE_INSTALL_PREFIX` regularly on Ubuntu and OSX for gazebo.\n", "reactions": {"url": "https://api.github.com/repos/simbody/simbody/issues/38/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/simbody/simbody/issues/38/timeline", "performed_via_github_app": null}, {"url": "https://api.github.com/repos/simbody/simbody/issues/39", "repository_url": "https://api.github.com/repos/simbody/simbody", "labels_url": "https://api.github.com/repos/simbody/simbody/issues/39/labels{/name}", "comments_url": "https://api.github.com/repos/simbody/simbody/issues/39/comments", "events_url": "https://api.github.com/repos/simbody/simbody/issues/39/events", "html_url": "https://github.com/simbody/simbody/issues/39", "id": 20206396, "node_id": "MDU6SXNzdWUyMDIwNjM5Ng==", "number": 39, "title": "Tag for simbody 3.3 release", "user": {"login": "scpeters", "id": 3650755, "node_id": "MDQ6VXNlcjM2NTA3NTU=", "avatar_url": "https://avatars.githubusercontent.com/u/3650755?v=4", "gravatar_id": "", "url": "https://api.github.com/users/scpeters", "html_url": "https://github.com/scpeters", "followers_url": "https://api.github.com/users/scpeters/followers", "following_url": "https://api.github.com/users/scpeters/following{/other_user}", "gists_url": "https://api.github.com/users/scpeters/gists{/gist_id}", "starred_url": "https://api.github.com/users/scpeters/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/scpeters/subscriptions", "organizations_url": "https://api.github.com/users/scpeters/orgs", "repos_url": "https://api.github.com/users/scpeters/repos", "events_url": "https://api.github.com/users/scpeters/events{/privacy}", "received_events_url": "https://api.github.com/users/scpeters/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 8, "created_at": "2013-09-28T05:17:40Z", "updated_at": "2013-09-30T19:09:17Z", "closed_at": "2013-09-30T04:05:51Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "It would be nice to tag the simbody 3.3 release. I believe the current head (32522087f63eab536d34c9a9a281cf50d1a7d5a0) was used to make the deb at packages.osrfoundation.org.\n", "reactions": {"url": "https://api.github.com/repos/simbody/simbody/issues/39/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/simbody/simbody/issues/39/timeline", "performed_via_github_app": null}, {"url": "https://api.github.com/repos/simbody/simbody/issues/41", "repository_url": "https://api.github.com/repos/simbody/simbody", "labels_url": "https://api.github.com/repos/simbody/simbody/issues/41/labels{/name}", "comments_url": "https://api.github.com/repos/simbody/simbody/issues/41/comments", "events_url": "https://api.github.com/repos/simbody/simbody/issues/41/events", "html_url": "https://github.com/simbody/simbody/issues/41", "id": 20501717, "node_id": "MDU6SXNzdWUyMDUwMTcxNw==", "number": 41, "title": "Hide Doxygen for unsupported Body::Particle?", "user": {"login": "tkuchida", "id": 4203505, "node_id": "MDQ6VXNlcjQyMDM1MDU=", "avatar_url": "https://avatars.githubusercontent.com/u/4203505?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tkuchida", "html_url": "https://github.com/tkuchida", "followers_url": "https://api.github.com/users/tkuchida/followers", "following_url": "https://api.github.com/users/tkuchida/following{/other_user}", "gists_url": "https://api.github.com/users/tkuchida/gists{/gist_id}", "starred_url": "https://api.github.com/users/tkuchida/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tkuchida/subscriptions", "organizations_url": "https://api.github.com/users/tkuchida/orgs", "repos_url": "https://api.github.com/users/tkuchida/repos", "events_url": "https://api.github.com/users/tkuchida/events{/privacy}", "received_events_url": "https://api.github.com/users/tkuchida/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 52267851, "node_id": "MDU6TGFiZWw1MjI2Nzg1MQ==", "url": "https://api.github.com/repos/simbody/simbody/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}, {"id": 52267855, "node_id": "MDU6TGFiZWw1MjI2Nzg1NQ==", "url": "https://api.github.com/repos/simbody/simbody/labels/question", "name": "question", "color": "cc317c", "default": true, "description": null}, {"id": 59408209, "node_id": "MDU6TGFiZWw1OTQwODIwOQ==", "url": "https://api.github.com/repos/simbody/simbody/labels/documentation", "name": "documentation", "color": "bfdadc", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2013-10-04T06:17:26Z", "updated_at": "2013-10-09T03:34:04Z", "closed_at": "2013-10-09T03:34:04Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "Based on https://github.com/simbody/simbody/blob/master/Simbody/include/simbody/internal/Force_Gravity.h#L489, particles aren't yet supported, so should Body::Particle be hidden from Doxygen?\n", "reactions": {"url": "https://api.github.com/repos/simbody/simbody/issues/41/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/simbody/simbody/issues/41/timeline", "performed_via_github_app": null}, {"url": "https://api.github.com/repos/simbody/simbody/issues/46", "repository_url": "https://api.github.com/repos/simbody/simbody", "labels_url": "https://api.github.com/repos/simbody/simbody/issues/46/labels{/name}", "comments_url": "https://api.github.com/repos/simbody/simbody/issues/46/comments", "events_url": "https://api.github.com/repos/simbody/simbody/issues/46/events", "html_url": "https://github.com/simbody/simbody/issues/46", "id": 21186252, "node_id": "MDU6SXNzdWUyMTE4NjI1Mg==", "number": 46, "title": "Size of repository is really large", "user": {"login": "moorepants", "id": 276007, "node_id": "MDQ6VXNlcjI3NjAwNw==", "avatar_url": "https://avatars.githubusercontent.com/u/276007?v=4", "gravatar_id": "", "url": "https://api.github.com/users/moorepants", "html_url": "https://github.com/moorepants", "followers_url": "https://api.github.com/users/moorepants/followers", "following_url": "https://api.github.com/users/moorepants/following{/other_user}", "gists_url": "https://api.github.com/users/moorepants/gists{/gist_id}", "starred_url": "https://api.github.com/users/moorepants/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/moorepants/subscriptions", "organizations_url": "https://api.github.com/users/moorepants/orgs", "repos_url": "https://api.github.com/users/moorepants/repos", "events_url": "https://api.github.com/users/moorepants/events{/privacy}", "received_events_url": "https://api.github.com/users/moorepants/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2013-10-17T21:20:01Z", "updated_at": "2013-11-27T19:00:38Z", "closed_at": "2013-10-20T01:44:38Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "When I cloned this repo I was suprised at how long it took to download. It seems it was on the order of 150mb+.\n\n```\nmoorepants@moorepants-UL30A:simbody(master)$ find . -size +500k -ls\n14551698 1164 -rw-rw-r--   1 moorepants moorepants  1187875 Oct 12 15:44 ./doc/HowToBuildSimbodyFromSource_Windows.pdf\n14551697  584 -rw-rw-r--   1 moorepants moorepants   594432 Oct 12 15:44 ./doc/HowToBuildSimbodyFromSource_Windows.doc\n14551695  552 -rw-rw-r--   1 moorepants moorepants   564224 Oct 12 15:44 ./doc/HowToBuildSimbodyFromSource_MacLinux.doc\n14551696 1176 -rw-rw-r--   1 moorepants moorepants  1200874 Oct 12 15:44 ./doc/HowToBuildSimbodyFromSource_MacLinux.pdf\n15082756 162476 -r--r--r--   1 moorepants moorepants 166367623 Oct 12 15:44 ./.git/objects/pack/pack-09fa36e59a726779ac09bd68c80fa718829ab9f0.pack\n15082757  932 -r--r--r--   1 moorepants moorepants   953716 Oct 12 15:44 ./.git/objects/pack/pack-09fa36e59a726779ac09bd68c80fa718829ab9f0.idx\n19664888  664 -rw-rw-r--   1 moorepants moorepants   676403 Oct 12 15:44 ./SimTKmath/doc/SimmathUserGuide.pdf\n19664887 3708 -rw-rw-r--   1 moorepants moorepants  3793408 Oct 12 15:44 ./SimTKmath/doc/SimmathUserGuide.doc\n19664958  716 -rw-rw-r--   1 moorepants moorepants   729739 Oct 12 15:44 ./SimTKmath/tests/adhoc/nlpqlp.cpp\n19664999  644 -rw-rw-r--   1 moorepants moorepants   657674 Oct 12 15:44 ./Simbody/doc/SimbodyAdvancedProgrammingGuide.docx\n19665002 1220 -rw-rw-r--   1 moorepants moorepants  1246968 Oct 12 15:44 ./Simbody/doc/SimbodyAndMolmodelUserGuide.pdf\n19665004 2688 -rw-rw-r--   1 moorepants moorepants  2751495 Oct 12 15:44 ./Simbody/doc/SimbodyTheoryManual.pdf\n19665003 7000 -rw-rw-r--   1 moorepants moorepants  7164580 Oct 12 15:44 ./Simbody/doc/SimbodyTheoryManual.docx\n19665001  876 -rw-rw-r--   1 moorepants moorepants   896783 Oct 12 15:44 ./Simbody/doc/SimbodyAndMolmodelUserGuide.docx\n19664997  664 -rw-rw-r--   1 moorepants moorepants   676204 Oct 12 15:44 ./Simbody/doc/FrictionConstraints.docx\n19665000  744 -rw-rw-r--   1 moorepants moorepants   759048 Oct 12 15:44 ./Simbody/doc/SimbodyAdvancedProgrammingGuide.pdf\n19665012 2440 -rw-rw-r--   1 moorepants moorepants  2498359 Oct 12 15:44 ./Simbody/examples/ExampleAmysIKProblem.cpp\n19665223  624 -rw-rw-r--   1 moorepants moorepants   636158 Oct 12 15:44 ./Simbody/tests/adhoc/ContactBigMeshes_Femur.obj\n19664971  620 -rw-rw-r--   1 moorepants moorepants   634357 Oct 12 15:44 ./Simbody/Visualizer/VisualizerGUI/glut32/glext.h\n19664210  692 -rw-rw-r--   1 moorepants moorepants   704526 Oct 12 15:44 ./Platform/Windows/lib_x86/libquadmath-0.dll\n19664207 1048 -rw-rw-r--   1 moorepants moorepants  1069582 Oct 12 15:44 ./Platform/Windows/lib_x86/libgfortran-3.dll\n19664202 11528 -rw-rw-r--   1 moorepants moorepants 11802640 Oct 12 15:44 ./Platform/Windows/lib_x86/SimTKlapack.dll\n19664208 5844 -rw-rw-r--   1 moorepants moorepants  5983228 Oct 12 15:44 ./Platform/Windows/lib_x86/liblapack.dll\n15599500 1280 -rw-rw-r--   1 moorepants moorepants  1310056 Oct 12 15:44 ./Platform/Windows/lib_x64/libquadmath-0.dll\n15599496  732 -rw-rw-r--   1 moorepants moorepants   749404 Oct 12 15:44 ./Platform/Windows/lib_x64/libgcc_s_sjlj-1.dll\n15599497 7168 -rw-rw-r--   1 moorepants moorepants  7337949 Oct 12 15:44 ./Platform/Windows/lib_x64/libgfortran-3.dll\n15599471  656 -rw-rw-r--   1 moorepants moorepants   671682 Oct 12 15:44 ./Platform/Windows/lib_x64/libblas.dll\n15599498 6044 -rw-rw-r--   1 moorepants moorepants  6187063 Oct 12 15:44 ./Platform/Windows/lib_x64/liblapack.dll\n```\n\nIt seems that the pdfs, word docs, and windows dll's are the likely culprits. From interacting with other software projects, it isn't typical to store binaries in distributed version control repositories both because versioning them has little use and cloning is slow. I'd be happy to submit a pull request that completely purges all of the generated files such as the dlls and pdfs from the repo. Copies of these could be hosted on the SimTK website instead of in the software repository.\n", "reactions": {"url": "https://api.github.com/repos/simbody/simbody/issues/46/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/simbody/simbody/issues/46/timeline", "performed_via_github_app": null}, {"url": "https://api.github.com/repos/simbody/simbody/issues/47", "repository_url": "https://api.github.com/repos/simbody/simbody", "labels_url": "https://api.github.com/repos/simbody/simbody/issues/47/labels{/name}", "comments_url": "https://api.github.com/repos/simbody/simbody/issues/47/comments", "events_url": "https://api.github.com/repos/simbody/simbody/issues/47/events", "html_url": "https://github.com/simbody/simbody/issues/47", "id": 21188689, "node_id": "MDU6SXNzdWUyMTE4ODY4OQ==", "number": 47, "title": "Default install directory seems incorrect and documentation doesn't match anymore", "user": {"login": "moorepants", "id": 276007, "node_id": "MDQ6VXNlcjI3NjAwNw==", "avatar_url": "https://avatars.githubusercontent.com/u/276007?v=4", "gravatar_id": "", "url": "https://api.github.com/users/moorepants", "html_url": "https://github.com/moorepants", "followers_url": "https://api.github.com/users/moorepants/followers", "following_url": "https://api.github.com/users/moorepants/following{/other_user}", "gists_url": "https://api.github.com/users/moorepants/gists{/gist_id}", "starred_url": "https://api.github.com/users/moorepants/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/moorepants/subscriptions", "organizations_url": "https://api.github.com/users/moorepants/orgs", "repos_url": "https://api.github.com/users/moorepants/repos", "events_url": "https://api.github.com/users/moorepants/events{/privacy}", "received_events_url": "https://api.github.com/users/moorepants/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 54361018, "node_id": "MDU6TGFiZWw1NDM2MTAxOA==", "url": "https://api.github.com/repos/simbody/simbody/labels/build", "name": "build", "color": "bfe5bf", "default": false, "description": null}, {"id": 59408209, "node_id": "MDU6TGFiZWw1OTQwODIwOQ==", "url": "https://api.github.com/repos/simbody/simbody/labels/documentation", "name": "documentation", "color": "bfdadc", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2013-10-17T22:04:39Z", "updated_at": "2014-05-14T23:54:44Z", "closed_at": "2014-05-14T23:54:44Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "I just built Simbody on Ubuntu 13.04 (git hash 7e06039b0aa4188d2).\n\nccmake no longer gave an option for `SimTK_INSTALL_PREFIX` as was specified in the included HowToBuildSimbodyFromSource_MacLinux.pdf on page 6. So I installed without checking that variable. This installed Simbody into `/usr/local` instead of `/usr/local/SimTK`. The new option CMAKE_INSTALL_PREFIX that was added in PR #40 doesn't show up in the ccmake default, only the advanced section and for me the default value was `/usr/local`.\n", "reactions": {"url": "https://api.github.com/repos/simbody/simbody/issues/47/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/simbody/simbody/issues/47/timeline", "performed_via_github_app": null}, {"url": "https://api.github.com/repos/simbody/simbody/issues/48", "repository_url": "https://api.github.com/repos/simbody/simbody", "labels_url": "https://api.github.com/repos/simbody/simbody/issues/48/labels{/name}", "comments_url": "https://api.github.com/repos/simbody/simbody/issues/48/comments", "events_url": "https://api.github.com/repos/simbody/simbody/issues/48/events", "html_url": "https://github.com/simbody/simbody/issues/48", "id": 21190625, "node_id": "MDU6SXNzdWUyMTE5MDYyNQ==", "number": 48, "title": "LD_LIBRARY_PATH shouldn't be required", "user": {"login": "moorepants", "id": 276007, "node_id": "MDQ6VXNlcjI3NjAwNw==", "avatar_url": "https://avatars.githubusercontent.com/u/276007?v=4", "gravatar_id": "", "url": "https://api.github.com/users/moorepants", "html_url": "https://github.com/moorepants", "followers_url": "https://api.github.com/users/moorepants/followers", "following_url": "https://api.github.com/users/moorepants/following{/other_user}", "gists_url": "https://api.github.com/users/moorepants/gists{/gist_id}", "starred_url": "https://api.github.com/users/moorepants/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/moorepants/subscriptions", "organizations_url": "https://api.github.com/users/moorepants/orgs", "repos_url": "https://api.github.com/users/moorepants/repos", "events_url": "https://api.github.com/users/moorepants/events{/privacy}", "received_events_url": "https://api.github.com/users/moorepants/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 54361018, "node_id": "MDU6TGFiZWw1NDM2MTAxOA==", "url": "https://api.github.com/repos/simbody/simbody/labels/build", "name": "build", "color": "bfe5bf", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 18, "created_at": "2013-10-17T22:46:35Z", "updated_at": "2014-02-15T22:02:13Z", "closed_at": "2014-02-15T22:02:13Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "It is odd that you have to set the LD_LIBRARY_PATH before running code which includes simbody. I've installed many libraries from source that set this up properly for various linux distributions. I'm not sure how to fix it yet, but I think it is worth noting an issue about this.\n\nSome pages about this stuff:\n\nhttp://tldp.org/HOWTO/Program-Library-HOWTO/shared-libraries.html\nhttp://www.cc.dtu.dk/?page_id=304\n\nFrom the first document:\n\n\"LD_LIBRARY_PATH is handy for development and testing, but shouldn't be modified by an installation process for normal use by normal users\"\n", "reactions": {"url": "https://api.github.com/repos/simbody/simbody/issues/48/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/simbody/simbody/issues/48/timeline", "performed_via_github_app": null}, {"url": "https://api.github.com/repos/simbody/simbody/issues/49", "repository_url": "https://api.github.com/repos/simbody/simbody", "labels_url": "https://api.github.com/repos/simbody/simbody/issues/49/labels{/name}", "comments_url": "https://api.github.com/repos/simbody/simbody/issues/49/comments", "events_url": "https://api.github.com/repos/simbody/simbody/issues/49/events", "html_url": "https://github.com/simbody/simbody/issues/49", "id": 21196675, "node_id": "MDU6SXNzdWUyMTE5NjY3NQ==", "number": 49, "title": "Distribute simbody through the Debian repositories.", "user": {"login": "chrisdembia", "id": 846001, "node_id": "MDQ6VXNlcjg0NjAwMQ==", "avatar_url": "https://avatars.githubusercontent.com/u/846001?v=4", "gravatar_id": "", "url": "https://api.github.com/users/chrisdembia", "html_url": "https://github.com/chrisdembia", "followers_url": "https://api.github.com/users/chrisdembia/followers", "following_url": "https://api.github.com/users/chrisdembia/following{/other_user}", "gists_url": "https://api.github.com/users/chrisdembia/gists{/gist_id}", "starred_url": "https://api.github.com/users/chrisdembia/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/chrisdembia/subscriptions", "organizations_url": "https://api.github.com/users/chrisdembia/orgs", "repos_url": "https://api.github.com/users/chrisdembia/repos", "events_url": "https://api.github.com/users/chrisdembia/events{/privacy}", "received_events_url": "https://api.github.com/users/chrisdembia/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 54361018, "node_id": "MDU6TGFiZWw1NDM2MTAxOA==", "url": "https://api.github.com/repos/simbody/simbody/labels/build", "name": "build", "color": "bfe5bf", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 34, "created_at": "2013-10-18T01:56:09Z", "updated_at": "2014-10-31T03:52:34Z", "closed_at": "2014-10-31T03:52:34Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "See:\nhttp://askubuntu.com/questions/16446/how-to-get-my-software-into-ubuntu\nhttps://wiki.debian.org/DebianMentorsFaq\n\nWe can either get it into Ubuntu, or into Debian, which will eventually get it into Ubuntu for us.\n\nA \"Debian Developer\" needs to package it for us, or one of us needs to become a Debian Developer. I assume none of us want to become Debian Developers. We can find such people to do it for us at http://mentors.debian.net/. The Debian Developer would be called a sponsor, and we would be called the maintainers. Well, @sherm1  or @j-rivero would be, I suppose.\n\nThis is probably the most useful page: http://mentors.debian.net/intro-maintainers.\n\nBefore we do this, I think we should rename the VisualizerGUI executable to something like simbody-visualizer. Or, the debian package should not include this executable.\n\nMaybe @j-rivero knows a good amount about how we could go about this.\n", "reactions": {"url": "https://api.github.com/repos/simbody/simbody/issues/49/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/simbody/simbody/issues/49/timeline", "performed_via_github_app": null}, {"url": "https://api.github.com/repos/simbody/simbody/issues/50", "repository_url": "https://api.github.com/repos/simbody/simbody", "labels_url": "https://api.github.com/repos/simbody/simbody/issues/50/labels{/name}", "comments_url": "https://api.github.com/repos/simbody/simbody/issues/50/comments", "events_url": "https://api.github.com/repos/simbody/simbody/issues/50/events", "html_url": "https://github.com/simbody/simbody/issues/50", "id": 21240170, "node_id": "MDU6SXNzdWUyMTI0MDE3MA==", "number": 50, "title": "Increase the maintainability of (installation) documentation", "user": {"login": "chrisdembia", "id": 846001, "node_id": "MDQ6VXNlcjg0NjAwMQ==", "avatar_url": "https://avatars.githubusercontent.com/u/846001?v=4", "gravatar_id": "", "url": "https://api.github.com/users/chrisdembia", "html_url": "https://github.com/chrisdembia", "followers_url": "https://api.github.com/users/chrisdembia/followers", "following_url": "https://api.github.com/users/chrisdembia/following{/other_user}", "gists_url": "https://api.github.com/users/chrisdembia/gists{/gist_id}", "starred_url": "https://api.github.com/users/chrisdembia/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/chrisdembia/subscriptions", "organizations_url": "https://api.github.com/users/chrisdembia/orgs", "repos_url": "https://api.github.com/users/chrisdembia/repos", "events_url": "https://api.github.com/users/chrisdembia/events{/privacy}", "received_events_url": "https://api.github.com/users/chrisdembia/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 59408209, "node_id": "MDU6TGFiZWw1OTQwODIwOQ==", "url": "https://api.github.com/repos/simbody/simbody/labels/documentation", "name": "documentation", "color": "bfdadc", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 26, "created_at": "2013-10-18T19:33:03Z", "updated_at": "2014-07-14T02:00:06Z", "closed_at": "2014-06-19T22:55:44Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "It's come up in other issues that if the (install) documentation were in a plain text format, it would be easier to maintain. See #47, #48.\n\nDo we want to move the install documentation? An option would be to write them in Markdown/RST, which could be converted into a PDF using pandoc or something like that.\n", "reactions": {"url": "https://api.github.com/repos/simbody/simbody/issues/50/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/simbody/simbody/issues/50/timeline", "performed_via_github_app": null}, {"url": "https://api.github.com/repos/simbody/simbody/issues/51", "repository_url": "https://api.github.com/repos/simbody/simbody", "labels_url": "https://api.github.com/repos/simbody/simbody/issues/51/labels{/name}", "comments_url": "https://api.github.com/repos/simbody/simbody/issues/51/comments", "events_url": "https://api.github.com/repos/simbody/simbody/issues/51/events", "html_url": "https://github.com/simbody/simbody/issues/51", "id": 21241569, "node_id": "MDU6SXNzdWUyMTI0MTU2OQ==", "number": 51, "title": "3 tests fail on Ubuntu 13.10", "user": {"login": "moorepants", "id": 276007, "node_id": "MDQ6VXNlcjI3NjAwNw==", "avatar_url": "https://avatars.githubusercontent.com/u/276007?v=4", "gravatar_id": "", "url": "https://api.github.com/users/moorepants", "html_url": "https://github.com/moorepants", "followers_url": "https://api.github.com/users/moorepants/followers", "following_url": "https://api.github.com/users/moorepants/following{/other_user}", "gists_url": "https://api.github.com/users/moorepants/gists{/gist_id}", "starred_url": "https://api.github.com/users/moorepants/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/moorepants/subscriptions", "organizations_url": "https://api.github.com/users/moorepants/orgs", "repos_url": "https://api.github.com/users/moorepants/repos", "events_url": "https://api.github.com/users/moorepants/events{/privacy}", "received_events_url": "https://api.github.com/users/moorepants/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 11, "created_at": "2013-10-18T19:59:31Z", "updated_at": "2014-02-15T22:00:03Z", "closed_at": "2014-02-15T22:00:03Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "I just installed Simbody (ddadd1c79039b4bd29f975b0e16776c4af5dad4f) into a fresh Ubuntu 13.10 desktop OS and three tests fail after compiling:\n\n```\n97% tests passed, 3 tests failed out of 98\n\nTotal Test time (real) = 595.11 sec\n\nThe following tests FAILED:\n     71 - TestGeo (OTHER_FAULT)\n     75 - TestTriangleMesh (OTHER_FAULT)\n     87 - TestObservedPointFitter (Failed)\nErrors while running CTest\nmake: *** [test] Error 8\n```\n\nWhat should I do to figure out what is going wrong?\n", "reactions": {"url": "https://api.github.com/repos/simbody/simbody/issues/51/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/simbody/simbody/issues/51/timeline", "performed_via_github_app": null}, {"url": "https://api.github.com/repos/simbody/simbody/issues/55", "repository_url": "https://api.github.com/repos/simbody/simbody", "labels_url": "https://api.github.com/repos/simbody/simbody/issues/55/labels{/name}", "comments_url": "https://api.github.com/repos/simbody/simbody/issues/55/comments", "events_url": "https://api.github.com/repos/simbody/simbody/issues/55/events", "html_url": "https://github.com/simbody/simbody/issues/55", "id": 21359794, "node_id": "MDU6SXNzdWUyMTM1OTc5NA==", "number": 55, "title": "Documentation needs to be updated to reflect new visualizer name", "user": {"login": "sherm1", "id": 4088016, "node_id": "MDQ6VXNlcjQwODgwMTY=", "avatar_url": "https://avatars.githubusercontent.com/u/4088016?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sherm1", "html_url": "https://github.com/sherm1", "followers_url": "https://api.github.com/users/sherm1/followers", "following_url": "https://api.github.com/users/sherm1/following{/other_user}", "gists_url": "https://api.github.com/users/sherm1/gists{/gist_id}", "starred_url": "https://api.github.com/users/sherm1/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sherm1/subscriptions", "organizations_url": "https://api.github.com/users/sherm1/orgs", "repos_url": "https://api.github.com/users/sherm1/repos", "events_url": "https://api.github.com/users/sherm1/events{/privacy}", "received_events_url": "https://api.github.com/users/sherm1/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 52759897, "node_id": "MDU6TGFiZWw1Mjc1OTg5Nw==", "url": "https://api.github.com/repos/simbody/simbody/labels/visualization", "name": "visualization", "color": "bfd4f2", "default": false, "description": null}, {"id": 59408209, "node_id": "MDU6TGFiZWw1OTQwODIwOQ==", "url": "https://api.github.com/repos/simbody/simbody/labels/documentation", "name": "documentation", "color": "bfdadc", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2013-10-22T03:54:29Z", "updated_at": "2014-06-19T22:51:11Z", "closed_at": "2014-06-19T22:48:55Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "PR #53 changed the Simbody visualizer name from `VisualizerGUI` to `simbody-visualizer`. Word documentation that references the visualizer needs to be updated or replaced. (See related issue #50)\n", "reactions": {"url": "https://api.github.com/repos/simbody/simbody/issues/55/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/simbody/simbody/issues/55/timeline", "performed_via_github_app": null}, {"url": "https://api.github.com/repos/simbody/simbody/issues/56", "repository_url": "https://api.github.com/repos/simbody/simbody", "labels_url": "https://api.github.com/repos/simbody/simbody/issues/56/labels{/name}", "comments_url": "https://api.github.com/repos/simbody/simbody/issues/56/comments", "events_url": "https://api.github.com/repos/simbody/simbody/issues/56/events", "html_url": "https://github.com/simbody/simbody/issues/56", "id": 21602080, "node_id": "MDU6SXNzdWUyMTYwMjA4MA==", "number": 56, "title": "Add ability to dynamically add/remove constraints to arbitrary body in system without rebuilding the system", "user": {"login": "hsu", "id": 138109, "node_id": "MDQ6VXNlcjEzODEwOQ==", "avatar_url": "https://avatars.githubusercontent.com/u/138109?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hsu", "html_url": "https://github.com/hsu", "followers_url": "https://api.github.com/users/hsu/followers", "following_url": "https://api.github.com/users/hsu/following{/other_user}", "gists_url": "https://api.github.com/users/hsu/gists{/gist_id}", "starred_url": "https://api.github.com/users/hsu/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hsu/subscriptions", "organizations_url": "https://api.github.com/users/hsu/orgs", "repos_url": "https://api.github.com/users/hsu/repos", "events_url": "https://api.github.com/users/hsu/events{/privacy}", "received_events_url": "https://api.github.com/users/hsu/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 52267853, "node_id": "MDU6TGFiZWw1MjI2Nzg1Mw==", "url": "https://api.github.com/repos/simbody/simbody/labels/enhancement", "name": "enhancement", "color": "84b6eb", "default": true, "description": null}, {"id": 52759775, "node_id": "MDU6TGFiZWw1Mjc1OTc3NQ==", "url": "https://api.github.com/repos/simbody/simbody/labels/constraint", "name": "constraint", "color": "d4c5f9", "default": false, "description": null}, {"id": 62665552, "node_id": "MDU6TGFiZWw2MjY2NTU1Mg==", "url": "https://api.github.com/repos/simbody/simbody/labels/contact", "name": "contact", "color": "eb6420", "default": false, "description": null}], "state": "open", "locked": false, "assignee": {"login": "sherm1", "id": 4088016, "node_id": "MDQ6VXNlcjQwODgwMTY=", "avatar_url": "https://avatars.githubusercontent.com/u/4088016?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sherm1", "html_url": "https://github.com/sherm1", "followers_url": "https://api.github.com/users/sherm1/followers", "following_url": "https://api.github.com/users/sherm1/following{/other_user}", "gists_url": "https://api.github.com/users/sherm1/gists{/gist_id}", "starred_url": "https://api.github.com/users/sherm1/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sherm1/subscriptions", "organizations_url": "https://api.github.com/users/sherm1/orgs", "repos_url": "https://api.github.com/users/sherm1/repos", "events_url": "https://api.github.com/users/sherm1/events{/privacy}", "received_events_url": "https://api.github.com/users/sherm1/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "sherm1", "id": 4088016, "node_id": "MDQ6VXNlcjQwODgwMTY=", "avatar_url": "https://avatars.githubusercontent.com/u/4088016?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sherm1", "html_url": "https://github.com/sherm1", "followers_url": "https://api.github.com/users/sherm1/followers", "following_url": "https://api.github.com/users/sherm1/following{/other_user}", "gists_url": "https://api.github.com/users/sherm1/gists{/gist_id}", "starred_url": "https://api.github.com/users/sherm1/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sherm1/subscriptions", "organizations_url": "https://api.github.com/users/sherm1/orgs", "repos_url": "https://api.github.com/users/sherm1/repos", "events_url": "https://api.github.com/users/sherm1/events{/privacy}", "received_events_url": "https://api.github.com/users/sherm1/received_events", "type": "User", "site_admin": false}], "milestone": {"url": "https://api.github.com/repos/simbody/simbody/milestones/1", "html_url": "https://github.com/simbody/simbody/milestone/1", "labels_url": "https://api.github.com/repos/simbody/simbody/milestones/1/labels", "id": 910475, "node_id": "MDk6TWlsZXN0b25lOTEwNDc1", "number": 1, "title": "Simbody 4.0", "description": "This milestone collects Issues and Pull Requests that must be dealt with before Simbody 4.0 can be released. This is a prerequisite for OpenSim 4.0.", "creator": {"login": "sherm1", "id": 4088016, "node_id": "MDQ6VXNlcjQwODgwMTY=", "avatar_url": "https://avatars.githubusercontent.com/u/4088016?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sherm1", "html_url": "https://github.com/sherm1", "followers_url": "https://api.github.com/users/sherm1/followers", "following_url": "https://api.github.com/users/sherm1/following{/other_user}", "gists_url": "https://api.github.com/users/sherm1/gists{/gist_id}", "starred_url": "https://api.github.com/users/sherm1/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sherm1/subscriptions", "organizations_url": "https://api.github.com/users/sherm1/orgs", "repos_url": "https://api.github.com/users/sherm1/repos", "events_url": "https://api.github.com/users/sherm1/events{/privacy}", "received_events_url": "https://api.github.com/users/sherm1/received_events", "type": "User", "site_admin": false}, "open_issues": 12, "closed_issues": 13, "state": "open", "created_at": "2014-12-19T18:48:14Z", "updated_at": "2015-12-23T21:15:41Z", "due_on": "2015-06-01T07:00:00Z", "closed_at": null}, "comments": 0, "created_at": "2013-10-25T16:44:54Z", "updated_at": "2014-12-23T04:50:06Z", "closed_at": null, "author_association": "MEMBER", "active_lock_reason": null, "body": "Use case:  simulating virtual harness not specified in model file for Atlas robot on start-up for controller initialization.\n\nThis should try and use the same mechanism used by contact constraint creation/removal.\n", "reactions": {"url": "https://api.github.com/repos/simbody/simbody/issues/56/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/simbody/simbody/issues/56/timeline", "performed_via_github_app": null}, {"url": "https://api.github.com/repos/simbody/simbody/issues/57", "repository_url": "https://api.github.com/repos/simbody/simbody", "labels_url": "https://api.github.com/repos/simbody/simbody/issues/57/labels{/name}", "comments_url": "https://api.github.com/repos/simbody/simbody/issues/57/comments", "events_url": "https://api.github.com/repos/simbody/simbody/issues/57/events", "html_url": "https://github.com/simbody/simbody/issues/57", "id": 21603444, "node_id": "MDU6SXNzdWUyMTYwMzQ0NA==", "number": 57, "title": "Add STL reader to PolygonalMesh class", "user": {"login": "hsu", "id": 138109, "node_id": "MDQ6VXNlcjEzODEwOQ==", "avatar_url": "https://avatars.githubusercontent.com/u/138109?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hsu", "html_url": "https://github.com/hsu", "followers_url": "https://api.github.com/users/hsu/followers", "following_url": "https://api.github.com/users/hsu/following{/other_user}", "gists_url": "https://api.github.com/users/hsu/gists{/gist_id}", "starred_url": "https://api.github.com/users/hsu/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hsu/subscriptions", "organizations_url": "https://api.github.com/users/hsu/orgs", "repos_url": "https://api.github.com/users/hsu/repos", "events_url": "https://api.github.com/users/hsu/events{/privacy}", "received_events_url": "https://api.github.com/users/hsu/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 62665552, "node_id": "MDU6TGFiZWw2MjY2NTU1Mg==", "url": "https://api.github.com/repos/simbody/simbody/labels/contact", "name": "contact", "color": "eb6420", "default": false, "description": null}, {"id": 108217628, "node_id": "MDU6TGFiZWwxMDgyMTc2Mjg=", "url": "https://api.github.com/repos/simbody/simbody/labels/help%20wanted", "name": "help wanted", "color": "009800", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2013-10-25T17:08:58Z", "updated_at": "2014-06-26T22:44:45Z", "closed_at": "2014-06-26T22:44:45Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "Add a `PolygonalMesh::loadSTLFile` or `PolygonalMesh::LoadDAEFile` similar to [loadVtpFile](https://github.com/simbody/simbody/blob/master/SimTKcommon/Geometry/include/SimTKcommon/internal/PolygonalMesh.h#L226).  Consider re-using the [gazebo STL mesh reader](https://bitbucket.org/osrf/gazebo/src/a1c1411114944087bf52ade92f9f9eab970e47ca/gazebo/common/STLLoader.hh?at=default).\n", "reactions": {"url": "https://api.github.com/repos/simbody/simbody/issues/57/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/simbody/simbody/issues/57/timeline", "performed_via_github_app": null}, {"url": "https://api.github.com/repos/simbody/simbody/issues/65", "repository_url": "https://api.github.com/repos/simbody/simbody", "labels_url": "https://api.github.com/repos/simbody/simbody/issues/65/labels{/name}", "comments_url": "https://api.github.com/repos/simbody/simbody/issues/65/comments", "events_url": "https://api.github.com/repos/simbody/simbody/issues/65/events", "html_url": "https://github.com/simbody/simbody/issues/65", "id": 22468079, "node_id": "MDU6SXNzdWUyMjQ2ODA3OQ==", "number": 65, "title": "Provide cmake config file instead of module", "user": {"login": "scpeters", "id": 3650755, "node_id": "MDQ6VXNlcjM2NTA3NTU=", "avatar_url": "https://avatars.githubusercontent.com/u/3650755?v=4", "gravatar_id": "", "url": "https://api.github.com/users/scpeters", "html_url": "https://github.com/scpeters", "followers_url": "https://api.github.com/users/scpeters/followers", "following_url": "https://api.github.com/users/scpeters/following{/other_user}", "gists_url": "https://api.github.com/users/scpeters/gists{/gist_id}", "starred_url": "https://api.github.com/users/scpeters/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/scpeters/subscriptions", "organizations_url": "https://api.github.com/users/scpeters/orgs", "repos_url": "https://api.github.com/users/scpeters/repos", "events_url": "https://api.github.com/users/scpeters/events{/privacy}", "received_events_url": "https://api.github.com/users/scpeters/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2013-11-11T18:50:26Z", "updated_at": "2013-12-20T19:22:09Z", "closed_at": "2013-12-20T19:22:09Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "There are two ways that cmake uses to search when `find_package` is invoked. Downstream developers often write module that search for a package location based on the expected header files and library names, while package maintainers can provide a cmake config template file that is populated at build time with the absolute paths. The latter case is preferable since it reduces the probability of bugs in the module search logic and plays more nicely on systems with multiple simbody installations (something I do).\n\nCurrently simbody has a module; I would propose using a cmake config file instead.\n", "reactions": {"url": "https://api.github.com/repos/simbody/simbody/issues/65/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/simbody/simbody/issues/65/timeline", "performed_via_github_app": null}, {"url": "https://api.github.com/repos/simbody/simbody/issues/66", "repository_url": "https://api.github.com/repos/simbody/simbody", "labels_url": "https://api.github.com/repos/simbody/simbody/issues/66/labels{/name}", "comments_url": "https://api.github.com/repos/simbody/simbody/issues/66/comments", "events_url": "https://api.github.com/repos/simbody/simbody/issues/66/events", "html_url": "https://github.com/simbody/simbody/issues/66", "id": 22481550, "node_id": "MDU6SXNzdWUyMjQ4MTU1MA==", "number": 66, "title": "Compilation errors with libc++ (Mac OSX 10.9 Mavericks)", "user": {"login": "scpeters", "id": 3650755, "node_id": "MDQ6VXNlcjM2NTA3NTU=", "avatar_url": "https://avatars.githubusercontent.com/u/3650755?v=4", "gravatar_id": "", "url": "https://api.github.com/users/scpeters", "html_url": "https://github.com/scpeters", "followers_url": "https://api.github.com/users/scpeters/followers", "following_url": "https://api.github.com/users/scpeters/following{/other_user}", "gists_url": "https://api.github.com/users/scpeters/gists{/gist_id}", "starred_url": "https://api.github.com/users/scpeters/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/scpeters/subscriptions", "organizations_url": "https://api.github.com/users/scpeters/orgs", "repos_url": "https://api.github.com/users/scpeters/repos", "events_url": "https://api.github.com/users/scpeters/events{/privacy}", "received_events_url": "https://api.github.com/users/scpeters/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2013-11-11T22:19:27Z", "updated_at": "2013-11-21T21:28:05Z", "closed_at": "2013-11-21T21:28:05Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "The new version of Mac OSX uses libc++ by default, rather than libstdc++, which causes a number of compilation errors. For example, when building TestVectorMath, it gives several complaints about operator overloading and templates:\n\n```\n/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../lib/c++/v1/algorithm:3585:17: error: \n      no viable overloaded '+='\n            __m += __delta;\n            ~~~ ^  ~~~~~~~\n/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../lib/c++/v1/algorithm:3743:5: note: in\n      instantiation of function template specialization 'std::__1::__sort<std::__1::__less<double, double> &,\n      SimTK::VectorIterator<double, SimTK::VectorBase<double> > >' requested here\n    __sort<_Comp_ref>(__first, __last, __comp);\n    ^\n/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../lib/c++/v1/algorithm:3752:5: note: in\n      instantiation of function template specialization 'std::__1::sort<SimTK::VectorIterator<double, SimTK::VectorBase<double>\n      >, std::__1::__less<double, double> >' requested here\n    _VSTD::sort(__first, __last, __less<typename iterator_traits<_RandomAccessIterator>::value_type>());\n    ^\n/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../lib/c++/v1/__config:300:15: note: \n      expanded from macro '_VSTD'\n#define _VSTD std::_LIBCPP_NAMESPACE\n              ^\n/tmp/simbody-Fnqf/simbody-Simbody-3.3/SimTKcommon/./include/SimTKcommon/internal/VectorMath.h:358:5: note: in instantiation of\n      function template specialization 'std::__1::sort<SimTK::VectorIterator<double, SimTK::VectorBase<double> > >' requested\n      here\n    std::sort(temp.begin(), temp.end());\n    ^\n/tmp/simbody-Fnqf/simbody-Simbody-3.3/SimTKcommon/tests/TestVectorMath.cpp:331:20: note: in instantiation of function template\n      specialization 'SimTK::sort<double>' requested here\n        testVector(sort(vector), expectedVec);\n                   ^\n```\n\nFull console output:\n\n```\n$ make TestVectorMath\n...\n[100%] Building CXX object SimTKcommon/tests/CMakeFiles/TestVectorMath.dir/TestVectorMath.cpp.o\ncd /tmp/simbody-Fnqf/simbody-Simbody-3.3/build/SimTKcommon/tests && /usr/local/Library/ENV/4.3/clang++   -DSimTK_SIMBODY_AUTHORS=\\\"Michael.Sherman_Peter.Eastman\\\" -DSimTK_SIMBODY_COPYRIGHT_YEARS=\\\"2005-13\\\" -DSimTK_SIMBODY_SVN_REVISION=\"\\\"Unversioned directory\\\"\" -DSimTK_SimTKCOMMON_AUTHORS=\\\"Michael.Sherman_Peter.Eastman\\\" -DSimTK_SimTKCOMMON_COPYRIGHT_YEARS=\\\"2005-10\\\" -DSimTK_SimTKCOMMON_LIBRARY_NAME=SimTKcommon -DSimTK_SimTKCOMMON_MAJOR_VERSION=3 -DSimTK_SimTKCOMMON_MINOR_VERSION=3 -DSimTK_SimTKCOMMON_PATCH_VERSION=0 -DSimTK_SimTKCOMMON_SVN_REVISION=\"\\\"Unversioned directory\\\"\" -I/tmp/simbody-Fnqf/simbody-Simbody-3.3/Platform/Mac/include -I/tmp/simbody-Fnqf/simbody-Simbody-3.3/SimTKcommon/./include -I/tmp/simbody-Fnqf/simbody-Simbody-3.3/SimTKcommon/Scalar/include -I/tmp/simbody-Fnqf/simbody-Simbody-3.3/SimTKcommon/SmallMatrix/include -I/tmp/simbody-Fnqf/simbody-Simbody-3.3/SimTKcommon/Mechanics/include -I/tmp/simbody-Fnqf/simbody-Simbody-3.3/SimTKcommon/BigMatrix/include -I/tmp/simbody-Fnqf/simbody-Simbody-3.3/SimTKcommon/Geometry/include -I/tmp/simbody-Fnqf/simbody-Simbody-3.3/SimTKcommon/Simulation/include -I/tmp/simbody-Fnqf/simbody-Simbody-3.3/SimTKcommon/Random/include -I/tmp/simbody-Fnqf/simbody-Simbody-3.3/SimTKcommon/Polynomial/include    -o CMakeFiles/TestVectorMath.dir/TestVectorMath.cpp.o -c /tmp/simbody-Fnqf/simbody-Simbody-3.3/SimTKcommon/tests/TestVectorMath.cpp\nIn file included from /tmp/simbody-Fnqf/simbody-Simbody-3.3/SimTKcommon/tests/TestVectorMath.cpp:24:\nIn file included from /tmp/simbody-Fnqf/simbody-Simbody-3.3/SimTKcommon/./include/SimTKcommon.h:32:\nIn file included from /tmp/simbody-Fnqf/simbody-Simbody-3.3/SimTKcommon/./include/SimTKcommon/basics.h:38:\nIn file included from /tmp/simbody-Fnqf/simbody-Simbody-3.3/SimTKcommon/./include/SimTKcommon/internal/common.h:234:\nIn file included from /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../lib/c++/v1/complex:247:\nIn file included from /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../lib/c++/v1/sstream:174:\nIn file included from /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../lib/c++/v1/ostream:130:\nIn file included from /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../lib/c++/v1/ios:216:\nIn file included from /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../lib/c++/v1/__locale:15:\nIn file included from /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../lib/c++/v1/string:434:\n/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../lib/c++/v1/algorithm:3585:17: error: \n      no viable overloaded '+='\n            __m += __delta;\n            ~~~ ^  ~~~~~~~\n/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../lib/c++/v1/algorithm:3743:5: note: in\n      instantiation of function template specialization 'std::__1::__sort<std::__1::__less<double, double> &,\n      SimTK::VectorIterator<double, SimTK::VectorBase<double> > >' requested here\n    __sort<_Comp_ref>(__first, __last, __comp);\n    ^\n/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../lib/c++/v1/algorithm:3752:5: note: in\n      instantiation of function template specialization 'std::__1::sort<SimTK::VectorIterator<double, SimTK::VectorBase<double>\n      >, std::__1::__less<double, double> >' requested here\n    _VSTD::sort(__first, __last, __less<typename iterator_traits<_RandomAccessIterator>::value_type>());\n    ^\n/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../lib/c++/v1/__config:300:15: note: \n      expanded from macro '_VSTD'\n#define _VSTD std::_LIBCPP_NAMESPACE\n              ^\n/tmp/simbody-Fnqf/simbody-Simbody-3.3/SimTKcommon/./include/SimTKcommon/internal/VectorMath.h:358:5: note: in instantiation of\n      function template specialization 'std::__1::sort<SimTK::VectorIterator<double, SimTK::VectorBase<double> > >' requested\n      here\n    std::sort(temp.begin(), temp.end());\n    ^\n/tmp/simbody-Fnqf/simbody-Simbody-3.3/SimTKcommon/tests/TestVectorMath.cpp:331:20: note: in instantiation of function template\n      specialization 'SimTK::sort<double>' requested here\n        testVector(sort(vector), expectedVec);\n                   ^\nIn file included from /tmp/simbody-Fnqf/simbody-Simbody-3.3/SimTKcommon/tests/TestVectorMath.cpp:24:\nIn file included from /tmp/simbody-Fnqf/simbody-Simbody-3.3/SimTKcommon/./include/SimTKcommon.h:32:\nIn file included from /tmp/simbody-Fnqf/simbody-Simbody-3.3/SimTKcommon/./include/SimTKcommon/basics.h:38:\nIn file included from /tmp/simbody-Fnqf/simbody-Simbody-3.3/SimTKcommon/./include/SimTKcommon/internal/common.h:234:\nIn file included from /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../lib/c++/v1/complex:247:\nIn file included from /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../lib/c++/v1/sstream:174:\nIn file included from /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../lib/c++/v1/ostream:130:\nIn file included from /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../lib/c++/v1/ios:216:\nIn file included from /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../lib/c++/v1/__locale:15:\nIn file included from /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../lib/c++/v1/string:434:\n/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../lib/c++/v1/algorithm:3585:17: error: \n      no viable overloaded '+='\n            __m += __delta;\n            ~~~ ^  ~~~~~~~\n/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../lib/c++/v1/algorithm:3743:5: note: in\n      instantiation of function template specialization 'std::__1::__sort<std::__1::__less<double, double> &,\n      SimTK::VectorIterator<double, SimTK::RowVectorBase<double> > >' requested here\n    __sort<_Comp_ref>(__first, __last, __comp);\n    ^\n/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../lib/c++/v1/algorithm:3752:5: note: in\n      instantiation of function template specialization 'std::__1::sort<SimTK::VectorIterator<double,\n      SimTK::RowVectorBase<double> >, std::__1::__less<double, double> >' requested here\n    _VSTD::sort(__first, __last, __less<typename iterator_traits<_RandomAccessIterator>::value_type>());\n    ^\n/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../lib/c++/v1/__config:300:15: note: \n      expanded from macro '_VSTD'\n#define _VSTD std::_LIBCPP_NAMESPACE\n              ^\n/tmp/simbody-Fnqf/simbody-Simbody-3.3/SimTKcommon/./include/SimTKcommon/internal/VectorMath.h:365:5: note: in instantiation of\n      function template specialization 'std::__1::sort<SimTK::VectorIterator<double, SimTK::RowVectorBase<double> > >' requested\n      here\n    std::sort(temp.begin(), temp.end());\n    ^\n/tmp/simbody-Fnqf/simbody-Simbody-3.3/SimTKcommon/tests/TestVectorMath.cpp:332:20: note: in instantiation of function template\n      specialization 'SimTK::sort<double>' requested here\n        testVector(sort(rowvector), expectedVec);\n                   ^\n2 errors generated.\nmake[3]: *** [SimTKcommon/tests/CMakeFiles/TestVectorMath.dir/TestVectorMath.cpp.o] Error 1\nmake[2]: *** [SimTKcommon/tests/CMakeFiles/TestVectorMath.dir/all] Error 2\nmake[1]: *** [SimTKcommon/tests/CMakeFiles/TestVectorMath.dir/rule] Error 2\nmake: *** [TestVectorMath] Error 2\n```\n", "reactions": {"url": "https://api.github.com/repos/simbody/simbody/issues/66/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/simbody/simbody/issues/66/timeline", "performed_via_github_app": null}, {"url": "https://api.github.com/repos/simbody/simbody/issues/67", "repository_url": "https://api.github.com/repos/simbody/simbody", "labels_url": "https://api.github.com/repos/simbody/simbody/issues/67/labels{/name}", "comments_url": "https://api.github.com/repos/simbody/simbody/issues/67/comments", "events_url": "https://api.github.com/repos/simbody/simbody/issues/67/events", "html_url": "https://github.com/simbody/simbody/issues/67", "id": 22636503, "node_id": "MDU6SXNzdWUyMjYzNjUwMw==", "number": 67, "title": "Using a \"develop\" branch", "user": {"login": "chrisdembia", "id": 846001, "node_id": "MDQ6VXNlcjg0NjAwMQ==", "avatar_url": "https://avatars.githubusercontent.com/u/846001?v=4", "gravatar_id": "", "url": "https://api.github.com/users/chrisdembia", "html_url": "https://github.com/chrisdembia", "followers_url": "https://api.github.com/users/chrisdembia/followers", "following_url": "https://api.github.com/users/chrisdembia/following{/other_user}", "gists_url": "https://api.github.com/users/chrisdembia/gists{/gist_id}", "starred_url": "https://api.github.com/users/chrisdembia/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/chrisdembia/subscriptions", "organizations_url": "https://api.github.com/users/chrisdembia/orgs", "repos_url": "https://api.github.com/users/chrisdembia/repos", "events_url": "https://api.github.com/users/chrisdembia/events{/privacy}", "received_events_url": "https://api.github.com/users/chrisdembia/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 15, "created_at": "2013-11-14T01:24:42Z", "updated_at": "2013-11-28T20:34:41Z", "closed_at": "2013-11-28T20:34:41Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "I think @sherm1 decided a few months ago that, given the number of developers on simbody, it makes sense to only use a master branch, and to not have a \"develop\" branch. But I think maybe we should consider using a develop branch.\n\nI'm just thinking of the way I obtain software from GitHub: I always expect that master will be stable. I think others have that expectation too.\n", "reactions": {"url": "https://api.github.com/repos/simbody/simbody/issues/67/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/simbody/simbody/issues/67/timeline", "performed_via_github_app": null}, {"url": "https://api.github.com/repos/simbody/simbody/issues/68", "repository_url": "https://api.github.com/repos/simbody/simbody", "labels_url": "https://api.github.com/repos/simbody/simbody/issues/68/labels{/name}", "comments_url": "https://api.github.com/repos/simbody/simbody/issues/68/comments", "events_url": "https://api.github.com/repos/simbody/simbody/issues/68/events", "html_url": "https://github.com/simbody/simbody/issues/68", "id": 22755522, "node_id": "MDU6SXNzdWUyMjc1NTUyMg==", "number": 68, "title": "Provide a pkgconfig file", "user": {"login": "j-rivero", "id": 2098802, "node_id": "MDQ6VXNlcjIwOTg4MDI=", "avatar_url": "https://avatars.githubusercontent.com/u/2098802?v=4", "gravatar_id": "", "url": "https://api.github.com/users/j-rivero", "html_url": "https://github.com/j-rivero", "followers_url": "https://api.github.com/users/j-rivero/followers", "following_url": "https://api.github.com/users/j-rivero/following{/other_user}", "gists_url": "https://api.github.com/users/j-rivero/gists{/gist_id}", "starred_url": "https://api.github.com/users/j-rivero/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/j-rivero/subscriptions", "organizations_url": "https://api.github.com/users/j-rivero/orgs", "repos_url": "https://api.github.com/users/j-rivero/repos", "events_url": "https://api.github.com/users/j-rivero/events{/privacy}", "received_events_url": "https://api.github.com/users/j-rivero/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 8, "created_at": "2013-11-15T20:05:24Z", "updated_at": "2014-01-25T23:31:08Z", "closed_at": "2014-01-25T23:31:08Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "Inspired by a [comment](https://github.com/simbody/simbody/pull/64#issuecomment-28260778) done by Thomas Moulard, it would be nice to provide a pkg-config file supporting simbody installations.\n", "reactions": {"url": "https://api.github.com/repos/simbody/simbody/issues/68/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/simbody/simbody/issues/68/timeline", "performed_via_github_app": null}, {"url": "https://api.github.com/repos/simbody/simbody/issues/72", "repository_url": "https://api.github.com/repos/simbody/simbody", "labels_url": "https://api.github.com/repos/simbody/simbody/issues/72/labels{/name}", "comments_url": "https://api.github.com/repos/simbody/simbody/issues/72/comments", "events_url": "https://api.github.com/repos/simbody/simbody/issues/72/events", "html_url": "https://github.com/simbody/simbody/issues/72", "id": 23278296, "node_id": "MDU6SXNzdWUyMzI3ODI5Ng==", "number": 72, "title": "Visualizer won't build on OS X Mavericks (10.9): glut is gone?", "user": {"login": "sherm1", "id": 4088016, "node_id": "MDQ6VXNlcjQwODgwMTY=", "avatar_url": "https://avatars.githubusercontent.com/u/4088016?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sherm1", "html_url": "https://github.com/sherm1", "followers_url": "https://api.github.com/users/sherm1/followers", "following_url": "https://api.github.com/users/sherm1/following{/other_user}", "gists_url": "https://api.github.com/users/sherm1/gists{/gist_id}", "starred_url": "https://api.github.com/users/sherm1/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sherm1/subscriptions", "organizations_url": "https://api.github.com/users/sherm1/orgs", "repos_url": "https://api.github.com/users/sherm1/repos", "events_url": "https://api.github.com/users/sherm1/events{/privacy}", "received_events_url": "https://api.github.com/users/sherm1/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 18, "created_at": "2013-11-25T22:12:38Z", "updated_at": "2013-12-24T01:34:52Z", "closed_at": "2013-12-24T01:34:52Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "I was unable to build simbody-visualizer on Mavericks. It gave a bunch of messages indicating that glut was deprecated, then failed to link. It built fine if I turned off building of the visualizer (in CMake), and then passed all tests.\n\n@scpeters have you had any luck getting the visualizer to build, or are you disabling that also? Is there any hope for getting glut or freeglut to work in 10.9?\n", "reactions": {"url": "https://api.github.com/repos/simbody/simbody/issues/72/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/simbody/simbody/issues/72/timeline", "performed_via_github_app": null}, {"url": "https://api.github.com/repos/simbody/simbody/issues/73", "repository_url": "https://api.github.com/repos/simbody/simbody", "labels_url": "https://api.github.com/repos/simbody/simbody/issues/73/labels{/name}", "comments_url": "https://api.github.com/repos/simbody/simbody/issues/73/comments", "events_url": "https://api.github.com/repos/simbody/simbody/issues/73/events", "html_url": "https://github.com/simbody/simbody/issues/73", "id": 23368124, "node_id": "MDU6SXNzdWUyMzM2ODEyNA==", "number": 73, "title": "Delete obsolete binaries from Simbody repo", "user": {"login": "sherm1", "id": 4088016, "node_id": "MDQ6VXNlcjQwODgwMTY=", "avatar_url": "https://avatars.githubusercontent.com/u/4088016?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sherm1", "html_url": "https://github.com/sherm1", "followers_url": "https://api.github.com/users/sherm1/followers", "following_url": "https://api.github.com/users/sherm1/following{/other_user}", "gists_url": "https://api.github.com/users/sherm1/gists{/gist_id}", "starred_url": "https://api.github.com/users/sherm1/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sherm1/subscriptions", "organizations_url": "https://api.github.com/users/sherm1/orgs", "repos_url": "https://api.github.com/users/sherm1/repos", "events_url": "https://api.github.com/users/sherm1/events{/privacy}", "received_events_url": "https://api.github.com/users/sherm1/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 7, "created_at": "2013-11-27T05:36:28Z", "updated_at": "2014-03-27T18:39:17Z", "closed_at": "2014-03-27T18:39:17Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "Simbody's repo contains some binary libraries that are needed on some platforms but can't be built from Simbody source, such as pthreads, glut and lapack for Windows. This used to include Linux as well and an older Windows lapack called SimTKlapack; these libraries aren't needed and should be deleted.\n\nWarning: don't get carried away and try to edit these binaries out of the repo history. Considerable mayhem may ensue; see issue #46.\n", "reactions": {"url": "https://api.github.com/repos/simbody/simbody/issues/73/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/simbody/simbody/issues/73/timeline", "performed_via_github_app": null}, {"url": "https://api.github.com/repos/simbody/simbody/issues/80", "repository_url": "https://api.github.com/repos/simbody/simbody", "labels_url": "https://api.github.com/repos/simbody/simbody/issues/80/labels{/name}", "comments_url": "https://api.github.com/repos/simbody/simbody/issues/80/comments", "events_url": "https://api.github.com/repos/simbody/simbody/issues/80/events", "html_url": "https://github.com/simbody/simbody/issues/80", "id": 24076262, "node_id": "MDU6SXNzdWUyNDA3NjI2Mg==", "number": 80, "title": "Update Force::Gravity doxygen to reflect state-updating methods.", "user": {"login": "hsu", "id": 138109, "node_id": "MDQ6VXNlcjEzODEwOQ==", "avatar_url": "https://avatars.githubusercontent.com/u/138109?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hsu", "html_url": "https://github.com/hsu", "followers_url": "https://api.github.com/users/hsu/followers", "following_url": "https://api.github.com/users/hsu/following{/other_user}", "gists_url": "https://api.github.com/users/hsu/gists{/gist_id}", "starred_url": "https://api.github.com/users/hsu/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hsu/subscriptions", "organizations_url": "https://api.github.com/users/hsu/orgs", "repos_url": "https://api.github.com/users/hsu/repos", "events_url": "https://api.github.com/users/hsu/events{/privacy}", "received_events_url": "https://api.github.com/users/hsu/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": {"login": "sherm1", "id": 4088016, "node_id": "MDQ6VXNlcjQwODgwMTY=", "avatar_url": "https://avatars.githubusercontent.com/u/4088016?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sherm1", "html_url": "https://github.com/sherm1", "followers_url": "https://api.github.com/users/sherm1/followers", "following_url": "https://api.github.com/users/sherm1/following{/other_user}", "gists_url": "https://api.github.com/users/sherm1/gists{/gist_id}", "starred_url": "https://api.github.com/users/sherm1/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sherm1/subscriptions", "organizations_url": "https://api.github.com/users/sherm1/orgs", "repos_url": "https://api.github.com/users/sherm1/repos", "events_url": "https://api.github.com/users/sherm1/events{/privacy}", "received_events_url": "https://api.github.com/users/sherm1/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "sherm1", "id": 4088016, "node_id": "MDQ6VXNlcjQwODgwMTY=", "avatar_url": "https://avatars.githubusercontent.com/u/4088016?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sherm1", "html_url": "https://github.com/sherm1", "followers_url": "https://api.github.com/users/sherm1/followers", "following_url": "https://api.github.com/users/sherm1/following{/other_user}", "gists_url": "https://api.github.com/users/sherm1/gists{/gist_id}", "starred_url": "https://api.github.com/users/sherm1/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sherm1/subscriptions", "organizations_url": "https://api.github.com/users/sherm1/orgs", "repos_url": "https://api.github.com/users/sherm1/repos", "events_url": "https://api.github.com/users/sherm1/events{/privacy}", "received_events_url": "https://api.github.com/users/sherm1/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 1, "created_at": "2013-12-11T00:06:00Z", "updated_at": "2013-12-17T21:56:19Z", "closed_at": "2013-12-17T21:56:19Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "For example, `setBodyIsExcluded()` reduces current state to `Stage::Velocity` but currently says it invalidates Instance stage. The doxygen group documentation for the state-modifying methods needs fixing & check the individual methods too.\n", "reactions": {"url": "https://api.github.com/repos/simbody/simbody/issues/80/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/simbody/simbody/issues/80/timeline", "performed_via_github_app": null}, {"url": "https://api.github.com/repos/simbody/simbody/issues/81", "repository_url": "https://api.github.com/repos/simbody/simbody", "labels_url": "https://api.github.com/repos/simbody/simbody/issues/81/labels{/name}", "comments_url": "https://api.github.com/repos/simbody/simbody/issues/81/comments", "events_url": "https://api.github.com/repos/simbody/simbody/issues/81/events", "html_url": "https://github.com/simbody/simbody/issues/81", "id": 24210572, "node_id": "MDU6SXNzdWUyNDIxMDU3Mg==", "number": 81, "title": "simbody-visualizer shows \"?.?.?\" instead of version number in title bar", "user": {"login": "chrisdembia", "id": 846001, "node_id": "MDQ6VXNlcjg0NjAwMQ==", "avatar_url": "https://avatars.githubusercontent.com/u/846001?v=4", "gravatar_id": "", "url": "https://api.github.com/users/chrisdembia", "html_url": "https://github.com/chrisdembia", "followers_url": "https://api.github.com/users/chrisdembia/followers", "following_url": "https://api.github.com/users/chrisdembia/following{/other_user}", "gists_url": "https://api.github.com/users/chrisdembia/gists{/gist_id}", "starred_url": "https://api.github.com/users/chrisdembia/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/chrisdembia/subscriptions", "organizations_url": "https://api.github.com/users/chrisdembia/orgs", "repos_url": "https://api.github.com/users/chrisdembia/repos", "events_url": "https://api.github.com/users/chrisdembia/events{/privacy}", "received_events_url": "https://api.github.com/users/chrisdembia/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2013-12-12T21:39:27Z", "updated_at": "2013-12-12T22:37:27Z", "closed_at": "2013-12-12T22:29:34Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "I have only investigated this on Windows.\n\n![image](https://f.cloud.github.com/assets/846001/1737606/dc90d0c2-6375-11e3-9d07-86cd9e1b6eeb.png)\n", "reactions": {"url": "https://api.github.com/repos/simbody/simbody/issues/81/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/simbody/simbody/issues/81/timeline", "performed_via_github_app": null}, {"url": "https://api.github.com/repos/simbody/simbody/issues/82", "repository_url": "https://api.github.com/repos/simbody/simbody", "labels_url": "https://api.github.com/repos/simbody/simbody/issues/82/labels{/name}", "comments_url": "https://api.github.com/repos/simbody/simbody/issues/82/comments", "events_url": "https://api.github.com/repos/simbody/simbody/issues/82/events", "html_url": "https://github.com/simbody/simbody/issues/82", "id": 24211238, "node_id": "MDU6SXNzdWUyNDIxMTIzOA==", "number": 82, "title": "where should Simbody examples be installed?", "user": {"login": "sherm1", "id": 4088016, "node_id": "MDQ6VXNlcjQwODgwMTY=", "avatar_url": "https://avatars.githubusercontent.com/u/4088016?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sherm1", "html_url": "https://github.com/sherm1", "followers_url": "https://api.github.com/users/sherm1/followers", "following_url": "https://api.github.com/users/sherm1/following{/other_user}", "gists_url": "https://api.github.com/users/sherm1/gists{/gist_id}", "starred_url": "https://api.github.com/users/sherm1/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sherm1/subscriptions", "organizations_url": "https://api.github.com/users/sherm1/orgs", "repos_url": "https://api.github.com/users/sherm1/repos", "events_url": "https://api.github.com/users/sherm1/events{/privacy}", "received_events_url": "https://api.github.com/users/sherm1/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 11, "created_at": "2013-12-12T21:49:54Z", "updated_at": "2013-12-26T01:22:10Z", "closed_at": "2013-12-26T01:22:10Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "This is a follow-on to pr #64.\n@j-rivero, @scpeters, @thomas-moulard\nThe Simbody installation includes some example programs, provided in both source and binary form. On Windows these end up in `<SimbodyInstallDir>/examples/{bin,src,...}` which is adequate there. However I don't think they are going to the right place on Mac and Linux, where the installed files are spread around rather than being concentrated in a single directory. On Mac they end up in `/usr/local/examples/...`. I don't know what happens on Linux.\n\nWhere should these go? Is there a GnuInstallDirs convention for examples?\n", "reactions": {"url": "https://api.github.com/repos/simbody/simbody/issues/82/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/simbody/simbody/issues/82/timeline", "performed_via_github_app": null}, {"url": "https://api.github.com/repos/simbody/simbody/issues/85", "repository_url": "https://api.github.com/repos/simbody/simbody", "labels_url": "https://api.github.com/repos/simbody/simbody/issues/85/labels{/name}", "comments_url": "https://api.github.com/repos/simbody/simbody/issues/85/comments", "events_url": "https://api.github.com/repos/simbody/simbody/issues/85/events", "html_url": "https://github.com/simbody/simbody/issues/85", "id": 24218569, "node_id": "MDU6SXNzdWUyNDIxODU2OQ==", "number": 85, "title": "make doxygen not working if simbody has parent folder named src", "user": {"login": "scpeters", "id": 3650755, "node_id": "MDQ6VXNlcjM2NTA3NTU=", "avatar_url": "https://avatars.githubusercontent.com/u/3650755?v=4", "gravatar_id": "", "url": "https://api.github.com/users/scpeters", "html_url": "https://github.com/scpeters", "followers_url": "https://api.github.com/users/scpeters/followers", "following_url": "https://api.github.com/users/scpeters/following{/other_user}", "gists_url": "https://api.github.com/users/scpeters/gists{/gist_id}", "starred_url": "https://api.github.com/users/scpeters/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/scpeters/subscriptions", "organizations_url": "https://api.github.com/users/scpeters/orgs", "repos_url": "https://api.github.com/users/scpeters/repos", "events_url": "https://api.github.com/users/scpeters/events{/privacy}", "received_events_url": "https://api.github.com/users/scpeters/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 14, "created_at": "2013-12-13T00:04:02Z", "updated_at": "2013-12-13T22:59:22Z", "closed_at": "2013-12-13T22:59:22Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "`make doxygen` works on my mac (doxygen 1.8.5), but it's not finding code files to analyze on my Ubuntu machine (12.10 quantal with doxygen 1.8.1.2). There's quite a few warnings and then it doesn't mention any specific code files that it parsed. Here's the console output:\n\n```\n$ make doxygen\nwarning: ignoring unsupported tag `AUTOLINK_SUPPORT       =' at line 289, file /home/scpeters/ws/gazebo_simbody/build_isolated/simbody/devel/Doxyfile\nwarning: ignoring unsupported tag `USE_MDFILE_AS_MAINPAGE =' at line 882, file /home/scpeters/ws/gazebo_simbody/build_isolated/simbody/devel/Doxyfile\nwarning: ignoring unsupported tag `SOURCE_TOOLTIPS        =' at line 938, file /home/scpeters/ws/gazebo_simbody/build_isolated/simbody/devel/Doxyfile\nwarning: ignoring unsupported tag `CLANG_ASSISTED_PARSING =' at line 979, file /home/scpeters/ws/gazebo_simbody/build_isolated/simbody/devel/Doxyfile\nwarning: ignoring unsupported tag `CLANG_OPTIONS          =' at line 987, file /home/scpeters/ws/gazebo_simbody/build_isolated/simbody/devel/Doxyfile\nwarning: ignoring unsupported tag `HTML_EXTRA_STYLESHEET  =' at line 1090, file /home/scpeters/ws/gazebo_simbody/build_isolated/simbody/devel/Doxyfile\nwarning: ignoring unsupported tag `MATHJAX_FORMAT         =' at line 1439, file /home/scpeters/ws/gazebo_simbody/build_isolated/simbody/devel/Doxyfile\nwarning: ignoring unsupported tag `MATHJAX_CODEFILE       =' at line 1467, file /home/scpeters/ws/gazebo_simbody/build_isolated/simbody/devel/Doxyfile\nwarning: ignoring unsupported tag `EXTERNAL_SEARCH        =' at line 1516, file /home/scpeters/ws/gazebo_simbody/build_isolated/simbody/devel/Doxyfile\nwarning: ignoring unsupported tag `SEARCHENGINE_URL       =' at line 1527, file /home/scpeters/ws/gazebo_simbody/build_isolated/simbody/devel/Doxyfile\nwarning: ignoring unsupported tag `SEARCHDATA_FILE        =' at line 1535, file /home/scpeters/ws/gazebo_simbody/build_isolated/simbody/devel/Doxyfile\nwarning: ignoring unsupported tag `EXTERNAL_SEARCH_ID     =' at line 1543, file /home/scpeters/ws/gazebo_simbody/build_isolated/simbody/devel/Doxyfile\nwarning: ignoring unsupported tag `EXTRA_SEARCH_MAPPINGS  =' at line 1553, file /home/scpeters/ws/gazebo_simbody/build_isolated/simbody/devel/Doxyfile\nwarning: ignoring unsupported tag `LATEX_EXTRA_FILES      =' at line 1647, file /home/scpeters/ws/gazebo_simbody/build_isolated/simbody/devel/Doxyfile\nwarning: ignoring unsupported tag `GENERATE_DOCBOOK       =' at line 1840, file /home/scpeters/ws/gazebo_simbody/build_isolated/simbody/devel/Doxyfile\nwarning: ignoring unsupported tag `DOCBOOK_OUTPUT         =' at line 1848, file /home/scpeters/ws/gazebo_simbody/build_isolated/simbody/devel/Doxyfile\nwarning: ignoring unsupported tag `EXTERNAL_PAGES         =' at line 2026, file /home/scpeters/ws/gazebo_simbody/build_isolated/simbody/devel/Doxyfile\nSearching for include files...\nSearching for example files...\nSearching for images...\nSearching for files in directory /home/scpeters/ws/gazebo_simbody/src/simbody/doc/images\nSearching for files in directory /home/scpeters/ws/gazebo_simbody/src/simbody/Simbody/doc/images\nSearching for files in directory /home/scpeters/ws/gazebo_simbody/src/simbody/SimTKmath/doc/images\nSearching for files in directory /home/scpeters/ws/gazebo_simbody/src/simbody/SimTKcommon/doc/images\nSearching for dot files...\nSearching for msc files...\nSearching for files to exclude\nSearching for files to process...\nSearching for files in directory /home/scpeters/ws/gazebo_simbody/src/simbody\nReading and parsing tag files\nBuilding group list...\nBuilding directory list...\nBuilding namespace list...\nBuilding file list...\nBuilding class list...\nAssociating documentation with classes...\nComputing nesting relations for classes...\nBuilding example list...\nSearching for enumerations...\nSearching for documented typedefs...\nSearching for members imported via using declarations...\nSearching for included using directives...\nSearching for documented variables...\nBuilding member list...\nSearching for friends...\nSearching for documented defines...\nComputing class inheritance relations...\nComputing class usage relations...\nFlushing cached template relations that have become invalid...\nCreating members for template instances...\nComputing class relations...\nAdd enum values to enums...\nSearching for member function documentation...\nBuilding page list...\nSearch for main page...\nComputing page relations...\nDetermining the scope of groups...\nSorting lists...\nFreeing entry tree\nDetermining which enums are documented\nComputing member relations...\nBuilding full member lists recursively...\nAdding members to member groups.\nDistributing member group documentation.\nComputing member references...\nInheriting documentation...\nGenerating disk names...\nAdding source references...\nAdding xrefitems...\nSorting member lists...\nComputing dependencies between directories...\nGenerating citations page...\nCounting data structures...\nResolving user defined references...\nFinding anchors and sections in the documentation...\nCombining using relations...\nAdding members to index pages...\nGenerating style sheet...\nGenerating search indices...\nGenerating example documentation...\nGenerating file sources...\nGenerating file documentation...\nGenerating page documentation...\nGenerating group documentation...\nGenerating class documentation...\nGenerating namespace index...\nGenerating graph info page...\nGenerating directory documentation...\nGenerating index page...\nGenerating page index...\nGenerating module index...\nGenerating namespace index...\nGenerating namespace member index...\nGenerating annotated compound index...\nGenerating alphabetical compound index...\nGenerating hierarchical class index...\nGenerating member index...\nGenerating file index...\nGenerating file member index...\nGenerating example index...\nfinalizing index lists...\nsymbol cache used 30/65536 hits=393 misses=30\nlookup cache used 85/65536 hits=134 misses=119\nfinished...\nBuilt target doxygen\n```\n", "reactions": {"url": "https://api.github.com/repos/simbody/simbody/issues/85/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/simbody/simbody/issues/85/timeline", "performed_via_github_app": null}, {"url": "https://api.github.com/repos/simbody/simbody/issues/90", "repository_url": "https://api.github.com/repos/simbody/simbody", "labels_url": "https://api.github.com/repos/simbody/simbody/issues/90/labels{/name}", "comments_url": "https://api.github.com/repos/simbody/simbody/issues/90/comments", "events_url": "https://api.github.com/repos/simbody/simbody/issues/90/events", "html_url": "https://github.com/simbody/simbody/issues/90", "id": 24458629, "node_id": "MDU6SXNzdWUyNDQ1ODYyOQ==", "number": 90, "title": "Simbody cmake config not self consistent; breaks builds of dependent systems", "user": {"login": "catskul", "id": 375302, "node_id": "MDQ6VXNlcjM3NTMwMg==", "avatar_url": "https://avatars.githubusercontent.com/u/375302?v=4", "gravatar_id": "", "url": "https://api.github.com/users/catskul", "html_url": "https://github.com/catskul", "followers_url": "https://api.github.com/users/catskul/followers", "following_url": "https://api.github.com/users/catskul/following{/other_user}", "gists_url": "https://api.github.com/users/catskul/gists{/gist_id}", "starred_url": "https://api.github.com/users/catskul/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/catskul/subscriptions", "organizations_url": "https://api.github.com/users/catskul/orgs", "repos_url": "https://api.github.com/users/catskul/repos", "events_url": "https://api.github.com/users/catskul/events{/privacy}", "received_events_url": "https://api.github.com/users/catskul/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2013-12-17T23:20:19Z", "updated_at": "2014-01-06T00:59:10Z", "closed_at": "2014-01-06T00:59:10Z", "author_association": "NONE", "active_lock_reason": null, "body": "When building from source the artifacts seem to get dumped in which ever directory `cmake` is called from. This seems to break the assumptions of `./cmake/SimbodyConfig.cmake.in` which look for libraries in `./Simbody/lib` if it finds include files in `./Simbody/include`\n\nFurthermore the packaged version of libsimbody also has a similar problem as it gets installed to `/usr/lib/x86_64-linux-gnu/` and at best looks in `/usr/lib`.\n\nIt seems that `SimbodyConfig.cmake.in` is in need of repair, and `CMakeLists.txt` may need some as well.\n\nI can probably fix this if there is agreement that this is a need and the fix is likely to be accepted.\n", "reactions": {"url": "https://api.github.com/repos/simbody/simbody/issues/90/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/simbody/simbody/issues/90/timeline", "performed_via_github_app": null}, {"url": "https://api.github.com/repos/simbody/simbody/issues/92", "repository_url": "https://api.github.com/repos/simbody/simbody", "labels_url": "https://api.github.com/repos/simbody/simbody/issues/92/labels{/name}", "comments_url": "https://api.github.com/repos/simbody/simbody/issues/92/comments", "events_url": "https://api.github.com/repos/simbody/simbody/issues/92/events", "html_url": "https://github.com/simbody/simbody/issues/92", "id": 24515791, "node_id": "MDU6SXNzdWUyNDUxNTc5MQ==", "number": 92, "title": "BUILD_EXAMPLES CMake variable does nothing?", "user": {"login": "chrisdembia", "id": 846001, "node_id": "MDQ6VXNlcjg0NjAwMQ==", "avatar_url": "https://avatars.githubusercontent.com/u/846001?v=4", "gravatar_id": "", "url": "https://api.github.com/users/chrisdembia", "html_url": "https://github.com/chrisdembia", "followers_url": "https://api.github.com/users/chrisdembia/followers", "following_url": "https://api.github.com/users/chrisdembia/following{/other_user}", "gists_url": "https://api.github.com/users/chrisdembia/gists{/gist_id}", "starred_url": "https://api.github.com/users/chrisdembia/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/chrisdembia/subscriptions", "organizations_url": "https://api.github.com/users/chrisdembia/orgs", "repos_url": "https://api.github.com/users/chrisdembia/repos", "events_url": "https://api.github.com/users/chrisdembia/events{/privacy}", "received_events_url": "https://api.github.com/users/chrisdembia/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2013-12-18T20:19:28Z", "updated_at": "2014-02-15T20:42:08Z", "closed_at": "2014-02-15T20:42:08Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "I am able to set BUILD_EXAMPLES to TRUE and end up with no example targets.\n\nLooking at Simbody/examples/CMakeLists.txt, it seems that the building of examples depends primarily on the values of BUILD_TESTING_SHARED, BUILD_STATIC_LIBRARIES, and BUILD_TESTING_STATIC, and not at all on BUILD_EXAMPLES.\n\nAm I mistaken? If not, I will create a PR to fix this.\n", "reactions": {"url": "https://api.github.com/repos/simbody/simbody/issues/92/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/simbody/simbody/issues/92/timeline", "performed_via_github_app": null}, {"url": "https://api.github.com/repos/simbody/simbody/issues/93", "repository_url": "https://api.github.com/repos/simbody/simbody", "labels_url": "https://api.github.com/repos/simbody/simbody/issues/93/labels{/name}", "comments_url": "https://api.github.com/repos/simbody/simbody/issues/93/comments", "events_url": "https://api.github.com/repos/simbody/simbody/issues/93/events", "html_url": "https://github.com/simbody/simbody/issues/93", "id": 24674785, "node_id": "MDU6SXNzdWUyNDY3NDc4NQ==", "number": 93, "title": "Direct bug reports to GitHub?", "user": {"login": "tkuchida", "id": 4203505, "node_id": "MDQ6VXNlcjQyMDM1MDU=", "avatar_url": "https://avatars.githubusercontent.com/u/4203505?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tkuchida", "html_url": "https://github.com/tkuchida", "followers_url": "https://api.github.com/users/tkuchida/followers", "following_url": "https://api.github.com/users/tkuchida/following{/other_user}", "gists_url": "https://api.github.com/users/tkuchida/gists{/gist_id}", "starred_url": "https://api.github.com/users/tkuchida/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tkuchida/subscriptions", "organizations_url": "https://api.github.com/users/tkuchida/orgs", "repos_url": "https://api.github.com/users/tkuchida/repos", "events_url": "https://api.github.com/users/tkuchida/events{/privacy}", "received_events_url": "https://api.github.com/users/tkuchida/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2013-12-22T02:43:26Z", "updated_at": "2013-12-24T00:41:34Z", "closed_at": "2013-12-24T00:41:34Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "Request that Simbody users file bug reports on GitHub rather than simtk.org?\nhttps://github.com/simbody/simbody/blob/master/SimTKcommon/include/SimTKcommon/internal/Exception.h#L97\n", "reactions": {"url": "https://api.github.com/repos/simbody/simbody/issues/93/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/simbody/simbody/issues/93/timeline", "performed_via_github_app": null}, {"url": "https://api.github.com/repos/simbody/simbody/issues/96", "repository_url": "https://api.github.com/repos/simbody/simbody", "labels_url": "https://api.github.com/repos/simbody/simbody/issues/96/labels{/name}", "comments_url": "https://api.github.com/repos/simbody/simbody/issues/96/comments", "events_url": "https://api.github.com/repos/simbody/simbody/issues/96/events", "html_url": "https://github.com/simbody/simbody/issues/96", "id": 25029923, "node_id": "MDU6SXNzdWUyNTAyOTkyMw==", "number": 96, "title": "Plan for a new simbody release (3.4)? ", "user": {"login": "j-rivero", "id": 2098802, "node_id": "MDQ6VXNlcjIwOTg4MDI=", "avatar_url": "https://avatars.githubusercontent.com/u/2098802?v=4", "gravatar_id": "", "url": "https://api.github.com/users/j-rivero", "html_url": "https://github.com/j-rivero", "followers_url": "https://api.github.com/users/j-rivero/followers", "following_url": "https://api.github.com/users/j-rivero/following{/other_user}", "gists_url": "https://api.github.com/users/j-rivero/gists{/gist_id}", "starred_url": "https://api.github.com/users/j-rivero/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/j-rivero/subscriptions", "organizations_url": "https://api.github.com/users/j-rivero/orgs", "repos_url": "https://api.github.com/users/j-rivero/repos", "events_url": "https://api.github.com/users/j-rivero/events{/privacy}", "received_events_url": "https://api.github.com/users/j-rivero/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 35, "created_at": "2014-01-03T19:05:52Z", "updated_at": "2014-03-27T04:17:05Z", "closed_at": "2014-03-27T04:17:05Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "Dear Simbody team:\n\nIs there any plan to release a new version of simbody? I was looking to ask debian for an official submission but it would be great to release an official version with all the latest changes we did to the build system and examples.\n\nThanks.\n\nP.D: my best wishes for this new year and thanks for all the collaboration you have done during the 2013 :)\n", "reactions": {"url": "https://api.github.com/repos/simbody/simbody/issues/96/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/simbody/simbody/issues/96/timeline", "performed_via_github_app": null}, {"url": "https://api.github.com/repos/simbody/simbody/issues/97", "repository_url": "https://api.github.com/repos/simbody/simbody", "labels_url": "https://api.github.com/repos/simbody/simbody/issues/97/labels{/name}", "comments_url": "https://api.github.com/repos/simbody/simbody/issues/97/comments", "events_url": "https://api.github.com/repos/simbody/simbody/issues/97/events", "html_url": "https://github.com/simbody/simbody/issues/97", "id": 25040078, "node_id": "MDU6SXNzdWUyNTA0MDA3OA==", "number": 97, "title": "Screw mobilizer should allow runtime pitch change & similarly for other elements", "user": {"login": "sherm1", "id": 4088016, "node_id": "MDQ6VXNlcjQwODgwMTY=", "avatar_url": "https://avatars.githubusercontent.com/u/4088016?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sherm1", "html_url": "https://github.com/sherm1", "followers_url": "https://api.github.com/users/sherm1/followers", "following_url": "https://api.github.com/users/sherm1/following{/other_user}", "gists_url": "https://api.github.com/users/sherm1/gists{/gist_id}", "starred_url": "https://api.github.com/users/sherm1/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sherm1/subscriptions", "organizations_url": "https://api.github.com/users/sherm1/orgs", "repos_url": "https://api.github.com/users/sherm1/repos", "events_url": "https://api.github.com/users/sherm1/events{/privacy}", "received_events_url": "https://api.github.com/users/sherm1/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 52267853, "node_id": "MDU6TGFiZWw1MjI2Nzg1Mw==", "url": "https://api.github.com/repos/simbody/simbody/labels/enhancement", "name": "enhancement", "color": "84b6eb", "default": true, "description": null}, {"id": 62665552, "node_id": "MDU6TGFiZWw2MjY2NTU1Mg==", "url": "https://api.github.com/repos/simbody/simbody/labels/contact", "name": "contact", "color": "eb6420", "default": false, "description": null}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2014-01-03T22:36:28Z", "updated_at": "2014-01-10T17:53:36Z", "closed_at": null, "author_association": "MEMBER", "active_lock_reason": null, "body": "The pitch should be stored in an instance variable in the State so that it can be changed without requiring topology to be rebuilt. (Gazebo has an API for setting it.)\n\nEDIT: there are many other elements in Simbody that need state-modifiable versions of their parameters. Here is the beginning of a checklist:\n- [ ] Screw mobilizer's pitch\n- [ ] PointInPlane constraint's normal direction, height, and follower point location\n- [ ] Ball constraint's two point locations (and radius?)\n- [ ] lots more \n", "reactions": {"url": "https://api.github.com/repos/simbody/simbody/issues/97/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/simbody/simbody/issues/97/timeline", "performed_via_github_app": null}, {"url": "https://api.github.com/repos/simbody/simbody/issues/98", "repository_url": "https://api.github.com/repos/simbody/simbody", "labels_url": "https://api.github.com/repos/simbody/simbody/issues/98/labels{/name}", "comments_url": "https://api.github.com/repos/simbody/simbody/issues/98/comments", "events_url": "https://api.github.com/repos/simbody/simbody/issues/98/events", "html_url": "https://github.com/simbody/simbody/issues/98", "id": 25040419, "node_id": "MDU6SXNzdWUyNTA0MDQxOQ==", "number": 98, "title": "Contact geometry needs a void* pointer for identifying corresponding model component", "user": {"login": "sherm1", "id": 4088016, "node_id": "MDQ6VXNlcjQwODgwMTY=", "avatar_url": "https://avatars.githubusercontent.com/u/4088016?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sherm1", "html_url": "https://github.com/sherm1", "followers_url": "https://api.github.com/users/sherm1/followers", "following_url": "https://api.github.com/users/sherm1/following{/other_user}", "gists_url": "https://api.github.com/users/sherm1/gists{/gist_id}", "starred_url": "https://api.github.com/users/sherm1/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sherm1/subscriptions", "organizations_url": "https://api.github.com/users/sherm1/orgs", "repos_url": "https://api.github.com/users/sherm1/repos", "events_url": "https://api.github.com/users/sherm1/events{/privacy}", "received_events_url": "https://api.github.com/users/sherm1/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 52267853, "node_id": "MDU6TGFiZWw1MjI2Nzg1Mw==", "url": "https://api.github.com/repos/simbody/simbody/labels/enhancement", "name": "enhancement", "color": "84b6eb", "default": true, "description": null}, {"id": 62665552, "node_id": "MDU6TGFiZWw2MjY2NTU1Mg==", "url": "https://api.github.com/repos/simbody/simbody/labels/contact", "name": "contact", "color": "eb6420", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": {"url": "https://api.github.com/repos/simbody/simbody/milestones/1", "html_url": "https://github.com/simbody/simbody/milestone/1", "labels_url": "https://api.github.com/repos/simbody/simbody/milestones/1/labels", "id": 910475, "node_id": "MDk6TWlsZXN0b25lOTEwNDc1", "number": 1, "title": "Simbody 4.0", "description": "This milestone collects Issues and Pull Requests that must be dealt with before Simbody 4.0 can be released. This is a prerequisite for OpenSim 4.0.", "creator": {"login": "sherm1", "id": 4088016, "node_id": "MDQ6VXNlcjQwODgwMTY=", "avatar_url": "https://avatars.githubusercontent.com/u/4088016?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sherm1", "html_url": "https://github.com/sherm1", "followers_url": "https://api.github.com/users/sherm1/followers", "following_url": "https://api.github.com/users/sherm1/following{/other_user}", "gists_url": "https://api.github.com/users/sherm1/gists{/gist_id}", "starred_url": "https://api.github.com/users/sherm1/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sherm1/subscriptions", "organizations_url": "https://api.github.com/users/sherm1/orgs", "repos_url": "https://api.github.com/users/sherm1/repos", "events_url": "https://api.github.com/users/sherm1/events{/privacy}", "received_events_url": "https://api.github.com/users/sherm1/received_events", "type": "User", "site_admin": false}, "open_issues": 12, "closed_issues": 13, "state": "open", "created_at": "2014-12-19T18:48:14Z", "updated_at": "2015-12-23T21:15:41Z", "due_on": "2015-06-01T07:00:00Z", "closed_at": null}, "comments": 0, "created_at": "2014-01-03T22:44:24Z", "updated_at": "2015-02-25T00:57:27Z", "closed_at": "2015-02-25T00:57:27Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "Similar to the pointer stored with DecorativeGeometry. (This is useful for mapping back from contact or ray-contact geometry intersection to the higher level model component it was generated from.) Gazebo uses this for Lidar modeling.\n", "reactions": {"url": "https://api.github.com/repos/simbody/simbody/issues/98/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/simbody/simbody/issues/98/timeline", "performed_via_github_app": null}, {"url": "https://api.github.com/repos/simbody/simbody/issues/99", "repository_url": "https://api.github.com/repos/simbody/simbody", "labels_url": "https://api.github.com/repos/simbody/simbody/issues/99/labels{/name}", "comments_url": "https://api.github.com/repos/simbody/simbody/issues/99/comments", "events_url": "https://api.github.com/repos/simbody/simbody/issues/99/events", "html_url": "https://github.com/simbody/simbody/issues/99", "id": 25040683, "node_id": "MDU6SXNzdWUyNTA0MDY4Mw==", "number": 99, "title": "Would like to have ray cast against contact geometry", "user": {"login": "sherm1", "id": 4088016, "node_id": "MDQ6VXNlcjQwODgwMTY=", "avatar_url": "https://avatars.githubusercontent.com/u/4088016?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sherm1", "html_url": "https://github.com/sherm1", "followers_url": "https://api.github.com/users/sherm1/followers", "following_url": "https://api.github.com/users/sherm1/following{/other_user}", "gists_url": "https://api.github.com/users/sherm1/gists{/gist_id}", "starred_url": "https://api.github.com/users/sherm1/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sherm1/subscriptions", "organizations_url": "https://api.github.com/users/sherm1/orgs", "repos_url": "https://api.github.com/users/sherm1/repos", "events_url": "https://api.github.com/users/sherm1/events{/privacy}", "received_events_url": "https://api.github.com/users/sherm1/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 52267853, "node_id": "MDU6TGFiZWw1MjI2Nzg1Mw==", "url": "https://api.github.com/repos/simbody/simbody/labels/enhancement", "name": "enhancement", "color": "84b6eb", "default": true, "description": null}, {"id": 62665552, "node_id": "MDU6TGFiZWw2MjY2NTU1Mg==", "url": "https://api.github.com/repos/simbody/simbody/labels/contact", "name": "contact", "color": "eb6420", "default": false, "description": null}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2014-01-03T22:50:22Z", "updated_at": "2014-01-03T22:50:22Z", "closed_at": null, "author_association": "MEMBER", "active_lock_reason": null, "body": "Gazebo uses this currently although might prefer to use visual geometry instead.\n", "reactions": {"url": "https://api.github.com/repos/simbody/simbody/issues/99/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/simbody/simbody/issues/99/timeline", "performed_via_github_app": null}, {"url": "https://api.github.com/repos/simbody/simbody/issues/101", "repository_url": "https://api.github.com/repos/simbody/simbody", "labels_url": "https://api.github.com/repos/simbody/simbody/issues/101/labels{/name}", "comments_url": "https://api.github.com/repos/simbody/simbody/issues/101/comments", "events_url": "https://api.github.com/repos/simbody/simbody/issues/101/events", "html_url": "https://github.com/simbody/simbody/issues/101", "id": 25137118, "node_id": "MDU6SXNzdWUyNTEzNzExOA==", "number": 101, "title": "Change include install location", "user": {"login": "scpeters", "id": 3650755, "node_id": "MDQ6VXNlcjM2NTA3NTU=", "avatar_url": "https://avatars.githubusercontent.com/u/3650755?v=4", "gravatar_id": "", "url": "https://api.github.com/users/scpeters", "html_url": "https://github.com/scpeters", "followers_url": "https://api.github.com/users/scpeters/followers", "following_url": "https://api.github.com/users/scpeters/following{/other_user}", "gists_url": "https://api.github.com/users/scpeters/gists{/gist_id}", "starred_url": "https://api.github.com/users/scpeters/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/scpeters/subscriptions", "organizations_url": "https://api.github.com/users/scpeters/orgs", "repos_url": "https://api.github.com/users/scpeters/repos", "events_url": "https://api.github.com/users/scpeters/events{/privacy}", "received_events_url": "https://api.github.com/users/scpeters/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2014-01-06T23:12:39Z", "updated_at": "2014-01-14T06:03:11Z", "closed_at": "2014-01-14T06:03:11Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "The include files are going to `/usr/include/.h` when they should go to `/usr/include/simbody/.h`\n", "reactions": {"url": "https://api.github.com/repos/simbody/simbody/issues/101/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/simbody/simbody/issues/101/timeline", "performed_via_github_app": null}, {"url": "https://api.github.com/repos/simbody/simbody/issues/104", "repository_url": "https://api.github.com/repos/simbody/simbody", "labels_url": "https://api.github.com/repos/simbody/simbody/issues/104/labels{/name}", "comments_url": "https://api.github.com/repos/simbody/simbody/issues/104/comments", "events_url": "https://api.github.com/repos/simbody/simbody/issues/104/events", "html_url": "https://github.com/simbody/simbody/issues/104", "id": 25409949, "node_id": "MDU6SXNzdWUyNTQwOTk0OQ==", "number": 104, "title": "Add `make uninstall` target", "user": {"login": "scpeters", "id": 3650755, "node_id": "MDQ6VXNlcjM2NTA3NTU=", "avatar_url": "https://avatars.githubusercontent.com/u/3650755?v=4", "gravatar_id": "", "url": "https://api.github.com/users/scpeters", "html_url": "https://github.com/scpeters", "followers_url": "https://api.github.com/users/scpeters/followers", "following_url": "https://api.github.com/users/scpeters/following{/other_user}", "gists_url": "https://api.github.com/users/scpeters/gists{/gist_id}", "starred_url": "https://api.github.com/users/scpeters/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/scpeters/subscriptions", "organizations_url": "https://api.github.com/users/scpeters/orgs", "repos_url": "https://api.github.com/users/scpeters/repos", "events_url": "https://api.github.com/users/scpeters/events{/privacy}", "received_events_url": "https://api.github.com/users/scpeters/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2014-01-10T17:36:41Z", "updated_at": "2014-01-14T19:56:42Z", "closed_at": "2014-01-14T19:56:42Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "See [gazebo's example](https://bitbucket.org/osrf/gazebo/src/default/cmake/cmake_uninstall.cmake.in)\n", "reactions": {"url": "https://api.github.com/repos/simbody/simbody/issues/104/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/simbody/simbody/issues/104/timeline", "performed_via_github_app": null}, {"url": "https://api.github.com/repos/simbody/simbody/issues/105", "repository_url": "https://api.github.com/repos/simbody/simbody", "labels_url": "https://api.github.com/repos/simbody/simbody/issues/105/labels{/name}", "comments_url": "https://api.github.com/repos/simbody/simbody/issues/105/comments", "events_url": "https://api.github.com/repos/simbody/simbody/issues/105/events", "html_url": "https://github.com/simbody/simbody/issues/105", "id": 25410847, "node_id": "MDU6SXNzdWUyNTQxMDg0Nw==", "number": 105, "title": "Clarify installation targets for each platform", "user": {"login": "scpeters", "id": 3650755, "node_id": "MDQ6VXNlcjM2NTA3NTU=", "avatar_url": "https://avatars.githubusercontent.com/u/3650755?v=4", "gravatar_id": "", "url": "https://api.github.com/users/scpeters", "html_url": "https://github.com/scpeters", "followers_url": "https://api.github.com/users/scpeters/followers", "following_url": "https://api.github.com/users/scpeters/following{/other_user}", "gists_url": "https://api.github.com/users/scpeters/gists{/gist_id}", "starred_url": "https://api.github.com/users/scpeters/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/scpeters/subscriptions", "organizations_url": "https://api.github.com/users/scpeters/orgs", "repos_url": "https://api.github.com/users/scpeters/repos", "events_url": "https://api.github.com/users/scpeters/events{/privacy}", "received_events_url": "https://api.github.com/users/scpeters/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 9, "created_at": "2014-01-10T17:52:51Z", "updated_at": "2014-05-14T23:52:10Z", "closed_at": "2014-05-14T23:52:10Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "- Windows\n- Mac\n  - homebrew\n  - plain cmake install\n- Ubuntu\n  - apt-get\n  - plain cmake install\n", "reactions": {"url": "https://api.github.com/repos/simbody/simbody/issues/105/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/simbody/simbody/issues/105/timeline", "performed_via_github_app": null}, {"url": "https://api.github.com/repos/simbody/simbody/issues/108", "repository_url": "https://api.github.com/repos/simbody/simbody", "labels_url": "https://api.github.com/repos/simbody/simbody/issues/108/labels{/name}", "comments_url": "https://api.github.com/repos/simbody/simbody/issues/108/comments", "events_url": "https://api.github.com/repos/simbody/simbody/issues/108/events", "html_url": "https://github.com/simbody/simbody/issues/108", "id": 25823459, "node_id": "MDU6SXNzdWUyNTgyMzQ1OQ==", "number": 108, "title": "Need new README.md before release", "user": {"login": "sherm1", "id": 4088016, "node_id": "MDQ6VXNlcjQwODgwMTY=", "avatar_url": "https://avatars.githubusercontent.com/u/4088016?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sherm1", "html_url": "https://github.com/sherm1", "followers_url": "https://api.github.com/users/sherm1/followers", "following_url": "https://api.github.com/users/sherm1/following{/other_user}", "gists_url": "https://api.github.com/users/sherm1/gists{/gist_id}", "starred_url": "https://api.github.com/users/sherm1/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sherm1/subscriptions", "organizations_url": "https://api.github.com/users/sherm1/orgs", "repos_url": "https://api.github.com/users/sherm1/repos", "events_url": "https://api.github.com/users/sherm1/events{/privacy}", "received_events_url": "https://api.github.com/users/sherm1/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": {"login": "chrisdembia", "id": 846001, "node_id": "MDQ6VXNlcjg0NjAwMQ==", "avatar_url": "https://avatars.githubusercontent.com/u/846001?v=4", "gravatar_id": "", "url": "https://api.github.com/users/chrisdembia", "html_url": "https://github.com/chrisdembia", "followers_url": "https://api.github.com/users/chrisdembia/followers", "following_url": "https://api.github.com/users/chrisdembia/following{/other_user}", "gists_url": "https://api.github.com/users/chrisdembia/gists{/gist_id}", "starred_url": "https://api.github.com/users/chrisdembia/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/chrisdembia/subscriptions", "organizations_url": "https://api.github.com/users/chrisdembia/orgs", "repos_url": "https://api.github.com/users/chrisdembia/repos", "events_url": "https://api.github.com/users/chrisdembia/events{/privacy}", "received_events_url": "https://api.github.com/users/chrisdembia/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "chrisdembia", "id": 846001, "node_id": "MDQ6VXNlcjg0NjAwMQ==", "avatar_url": "https://avatars.githubusercontent.com/u/846001?v=4", "gravatar_id": "", "url": "https://api.github.com/users/chrisdembia", "html_url": "https://github.com/chrisdembia", "followers_url": "https://api.github.com/users/chrisdembia/followers", "following_url": "https://api.github.com/users/chrisdembia/following{/other_user}", "gists_url": "https://api.github.com/users/chrisdembia/gists{/gist_id}", "starred_url": "https://api.github.com/users/chrisdembia/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/chrisdembia/subscriptions", "organizations_url": "https://api.github.com/users/chrisdembia/orgs", "repos_url": "https://api.github.com/users/chrisdembia/repos", "events_url": "https://api.github.com/users/chrisdembia/events{/privacy}", "received_events_url": "https://api.github.com/users/chrisdembia/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 18, "created_at": "2014-01-17T17:38:11Z", "updated_at": "2014-05-14T23:51:09Z", "closed_at": "2014-05-14T23:51:09Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "Simbody's README.md is minimal and needs to be filled in with basic installation and use instructions. I think @chrisdembia already took a shot at this; might be a good start! For a good example, see https://github.com/ifa-ethz/ecos.\n", "reactions": {"url": "https://api.github.com/repos/simbody/simbody/issues/108/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/simbody/simbody/issues/108/timeline", "performed_via_github_app": null}, {"url": "https://api.github.com/repos/simbody/simbody/issues/109", "repository_url": "https://api.github.com/repos/simbody/simbody", "labels_url": "https://api.github.com/repos/simbody/simbody/issues/109/labels{/name}", "comments_url": "https://api.github.com/repos/simbody/simbody/issues/109/comments", "events_url": "https://api.github.com/repos/simbody/simbody/issues/109/events", "html_url": "https://github.com/simbody/simbody/issues/109", "id": 25845970, "node_id": "MDU6SXNzdWUyNTg0NTk3MA==", "number": 109, "title": "Examples symlink on Ubuntu points to nonexistent location.", "user": {"login": "chrisdembia", "id": 846001, "node_id": "MDQ6VXNlcjg0NjAwMQ==", "avatar_url": "https://avatars.githubusercontent.com/u/846001?v=4", "gravatar_id": "", "url": "https://api.github.com/users/chrisdembia", "html_url": "https://github.com/chrisdembia", "followers_url": "https://api.github.com/users/chrisdembia/followers", "following_url": "https://api.github.com/users/chrisdembia/following{/other_user}", "gists_url": "https://api.github.com/users/chrisdembia/gists{/gist_id}", "starred_url": "https://api.github.com/users/chrisdembia/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/chrisdembia/subscriptions", "organizations_url": "https://api.github.com/users/chrisdembia/orgs", "repos_url": "https://api.github.com/users/chrisdembia/repos", "events_url": "https://api.github.com/users/chrisdembia/events{/privacy}", "received_events_url": "https://api.github.com/users/chrisdembia/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2014-01-17T23:32:49Z", "updated_at": "2014-03-27T18:13:39Z", "closed_at": "2014-03-27T18:13:28Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "On Ubuntu:\n\nIn `/usr/local/share/doc/simbody/examples there's a symlink:\n\n```\nlrwxrwxrwx 1 root root   64 Jan 17 15:28 bin -> /home/fitze/simtk/simbody/lib/x86_64-linux-gnu/simbody/examples/\n```\n\nbut nothing is there (in my `~/`). I think the symlink is supposed to point to `x86_64-linux-gnu/simbody/examples/`\n", "reactions": {"url": "https://api.github.com/repos/simbody/simbody/issues/109/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/simbody/simbody/issues/109/timeline", "performed_via_github_app": null}, {"url": "https://api.github.com/repos/simbody/simbody/issues/111", "repository_url": "https://api.github.com/repos/simbody/simbody", "labels_url": "https://api.github.com/repos/simbody/simbody/issues/111/labels{/name}", "comments_url": "https://api.github.com/repos/simbody/simbody/issues/111/comments", "events_url": "https://api.github.com/repos/simbody/simbody/issues/111/events", "html_url": "https://github.com/simbody/simbody/issues/111", "id": 26162307, "node_id": "MDU6SXNzdWUyNjE2MjMwNw==", "number": 111, "title": "lack of error message for ContactMaterial properties", "user": {"login": "AlexandraZobova", "id": 6481321, "node_id": "MDQ6VXNlcjY0ODEzMjE=", "avatar_url": "https://avatars.githubusercontent.com/u/6481321?v=4", "gravatar_id": "", "url": "https://api.github.com/users/AlexandraZobova", "html_url": "https://github.com/AlexandraZobova", "followers_url": "https://api.github.com/users/AlexandraZobova/followers", "following_url": "https://api.github.com/users/AlexandraZobova/following{/other_user}", "gists_url": "https://api.github.com/users/AlexandraZobova/gists{/gist_id}", "starred_url": "https://api.github.com/users/AlexandraZobova/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/AlexandraZobova/subscriptions", "organizations_url": "https://api.github.com/users/AlexandraZobova/orgs", "repos_url": "https://api.github.com/users/AlexandraZobova/repos", "events_url": "https://api.github.com/users/AlexandraZobova/events{/privacy}", "received_events_url": "https://api.github.com/users/AlexandraZobova/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 62665552, "node_id": "MDU6TGFiZWw2MjY2NTU1Mg==", "url": "https://api.github.com/repos/simbody/simbody/labels/contact", "name": "contact", "color": "eb6420", "default": false, "description": null}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": {"url": "https://api.github.com/repos/simbody/simbody/milestones/1", "html_url": "https://github.com/simbody/simbody/milestone/1", "labels_url": "https://api.github.com/repos/simbody/simbody/milestones/1/labels", "id": 910475, "node_id": "MDk6TWlsZXN0b25lOTEwNDc1", "number": 1, "title": "Simbody 4.0", "description": "This milestone collects Issues and Pull Requests that must be dealt with before Simbody 4.0 can be released. This is a prerequisite for OpenSim 4.0.", "creator": {"login": "sherm1", "id": 4088016, "node_id": "MDQ6VXNlcjQwODgwMTY=", "avatar_url": "https://avatars.githubusercontent.com/u/4088016?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sherm1", "html_url": "https://github.com/sherm1", "followers_url": "https://api.github.com/users/sherm1/followers", "following_url": "https://api.github.com/users/sherm1/following{/other_user}", "gists_url": "https://api.github.com/users/sherm1/gists{/gist_id}", "starred_url": "https://api.github.com/users/sherm1/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sherm1/subscriptions", "organizations_url": "https://api.github.com/users/sherm1/orgs", "repos_url": "https://api.github.com/users/sherm1/repos", "events_url": "https://api.github.com/users/sherm1/events{/privacy}", "received_events_url": "https://api.github.com/users/sherm1/received_events", "type": "User", "site_admin": false}, "open_issues": 12, "closed_issues": 13, "state": "open", "created_at": "2014-12-19T18:48:14Z", "updated_at": "2015-12-23T21:15:41Z", "due_on": "2015-06-01T07:00:00Z", "closed_at": null}, "comments": 0, "created_at": "2014-01-23T12:16:03Z", "updated_at": "2015-01-05T19:01:06Z", "closed_at": null, "author_association": "NONE", "active_lock_reason": null, "body": "The problem is the following:\nThe dynamical coefficient of friction is required to be less than statical one. But if the user provides non-correct coefficients such that mu_d>mu_s, \"unknown exception\" is thrown (in Debug mode).\nIt will be useful to add an error message.\nThank you!\n", "reactions": {"url": "https://api.github.com/repos/simbody/simbody/issues/111/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/simbody/simbody/issues/111/timeline", "performed_via_github_app": null}, {"url": "https://api.github.com/repos/simbody/simbody/issues/112", "repository_url": "https://api.github.com/repos/simbody/simbody", "labels_url": "https://api.github.com/repos/simbody/simbody/issues/112/labels{/name}", "comments_url": "https://api.github.com/repos/simbody/simbody/issues/112/comments", "events_url": "https://api.github.com/repos/simbody/simbody/issues/112/events", "html_url": "https://github.com/simbody/simbody/issues/112", "id": 26212791, "node_id": "MDU6SXNzdWUyNjIxMjc5MQ==", "number": 112, "title": "getTotalCentrifugalForces() does not return expected quantity", "user": {"login": "JustinSi", "id": 5614400, "node_id": "MDQ6VXNlcjU2MTQ0MDA=", "avatar_url": "https://avatars.githubusercontent.com/u/5614400?v=4", "gravatar_id": "", "url": "https://api.github.com/users/JustinSi", "html_url": "https://github.com/JustinSi", "followers_url": "https://api.github.com/users/JustinSi/followers", "following_url": "https://api.github.com/users/JustinSi/following{/other_user}", "gists_url": "https://api.github.com/users/JustinSi/gists{/gist_id}", "starred_url": "https://api.github.com/users/JustinSi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/JustinSi/subscriptions", "organizations_url": "https://api.github.com/users/JustinSi/orgs", "repos_url": "https://api.github.com/users/JustinSi/repos", "events_url": "https://api.github.com/users/JustinSi/events{/privacy}", "received_events_url": "https://api.github.com/users/JustinSi/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 52267851, "node_id": "MDU6TGFiZWw1MjI2Nzg1MQ==", "url": "https://api.github.com/repos/simbody/simbody/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": {"login": "sherm1", "id": 4088016, "node_id": "MDQ6VXNlcjQwODgwMTY=", "avatar_url": "https://avatars.githubusercontent.com/u/4088016?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sherm1", "html_url": "https://github.com/sherm1", "followers_url": "https://api.github.com/users/sherm1/followers", "following_url": "https://api.github.com/users/sherm1/following{/other_user}", "gists_url": "https://api.github.com/users/sherm1/gists{/gist_id}", "starred_url": "https://api.github.com/users/sherm1/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sherm1/subscriptions", "organizations_url": "https://api.github.com/users/sherm1/orgs", "repos_url": "https://api.github.com/users/sherm1/repos", "events_url": "https://api.github.com/users/sherm1/events{/privacy}", "received_events_url": "https://api.github.com/users/sherm1/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "sherm1", "id": 4088016, "node_id": "MDQ6VXNlcjQwODgwMTY=", "avatar_url": "https://avatars.githubusercontent.com/u/4088016?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sherm1", "html_url": "https://github.com/sherm1", "followers_url": "https://api.github.com/users/sherm1/followers", "following_url": "https://api.github.com/users/sherm1/following{/other_user}", "gists_url": "https://api.github.com/users/sherm1/gists{/gist_id}", "starred_url": "https://api.github.com/users/sherm1/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sherm1/subscriptions", "organizations_url": "https://api.github.com/users/sherm1/orgs", "repos_url": "https://api.github.com/users/sherm1/repos", "events_url": "https://api.github.com/users/sherm1/events{/privacy}", "received_events_url": "https://api.github.com/users/sherm1/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 4, "created_at": "2014-01-24T01:06:51Z", "updated_at": "2014-02-01T06:54:39Z", "closed_at": "2014-02-01T06:54:39Z", "author_association": "NONE", "active_lock_reason": null, "body": "  \"getTotalCentrifugalForces\" function of SimbodyMatterSubsystem does not return the expected quantity: the total angular velocity dependent forces.      -- by Justin\n", "reactions": {"url": "https://api.github.com/repos/simbody/simbody/issues/112/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/simbody/simbody/issues/112/timeline", "performed_via_github_app": null}, {"url": "https://api.github.com/repos/simbody/simbody/issues/113", "repository_url": "https://api.github.com/repos/simbody/simbody", "labels_url": "https://api.github.com/repos/simbody/simbody/issues/113/labels{/name}", "comments_url": "https://api.github.com/repos/simbody/simbody/issues/113/comments", "events_url": "https://api.github.com/repos/simbody/simbody/issues/113/events", "html_url": "https://github.com/simbody/simbody/issues/113", "id": 26298782, "node_id": "MDU6SXNzdWUyNjI5ODc4Mg==", "number": 113, "title": "Do not export rpath in the SimbodyConfig.cmake file", "user": {"login": "j-rivero", "id": 2098802, "node_id": "MDQ6VXNlcjIwOTg4MDI=", "avatar_url": "https://avatars.githubusercontent.com/u/2098802?v=4", "gravatar_id": "", "url": "https://api.github.com/users/j-rivero", "html_url": "https://github.com/j-rivero", "followers_url": "https://api.github.com/users/j-rivero/followers", "following_url": "https://api.github.com/users/j-rivero/following{/other_user}", "gists_url": "https://api.github.com/users/j-rivero/gists{/gist_id}", "starred_url": "https://api.github.com/users/j-rivero/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/j-rivero/subscriptions", "organizations_url": "https://api.github.com/users/j-rivero/orgs", "repos_url": "https://api.github.com/users/j-rivero/repos", "events_url": "https://api.github.com/users/j-rivero/events{/privacy}", "received_events_url": "https://api.github.com/users/j-rivero/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2014-01-25T18:59:47Z", "updated_at": "2014-01-26T20:28:01Z", "closed_at": "2014-01-26T20:28:01Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "There is no reason to use RPATH for software that uses simbody.\n\n```\ndiff --git a/cmake/SimbodyConfig.cmake.in b/cmake/SimbodyConfig.cmake.in\nindex 9e40443..9e30845 100644\n--- a/cmake/SimbodyConfig.cmake.in\n+++ b/cmake/SimbodyConfig.cmake.in\n@@ -192,5 +192,4 @@ unset(Simbody_STATIC_LIBRARY CACHE)\n unset(Simbody_STATIC_DEBUG_LIBRARY CACHE)\n mark_as_advanced(Simbody_LIBRARIES Simbody_STATIC_LIBRARIES)\n\n-list(APPEND @PKG_NAME@_LDFLAGS -Wl,-rpath,@CMAKE_INSTALL_PREFIX@/@CMAKE_INSTALL\n list(APPEND @PKG_NAME@_LDFLAGS -L@CMAKE_INSTALL_PREFIX@/@CMAKE_INSTALL_LIBDIR@)\n```\n", "reactions": {"url": "https://api.github.com/repos/simbody/simbody/issues/113/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/simbody/simbody/issues/113/timeline", "performed_via_github_app": null}, {"url": "https://api.github.com/repos/simbody/simbody/issues/115", "repository_url": "https://api.github.com/repos/simbody/simbody", "labels_url": "https://api.github.com/repos/simbody/simbody/issues/115/labels{/name}", "comments_url": "https://api.github.com/repos/simbody/simbody/issues/115/comments", "events_url": "https://api.github.com/repos/simbody/simbody/issues/115/events", "html_url": "https://github.com/simbody/simbody/issues/115", "id": 26579906, "node_id": "MDU6SXNzdWUyNjU3OTkwNg==", "number": 115, "title": "PLUS impact algorithm development", "user": {"login": "tkuchida", "id": 4203505, "node_id": "MDQ6VXNlcjQyMDM1MDU=", "avatar_url": "https://avatars.githubusercontent.com/u/4203505?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tkuchida", "html_url": "https://github.com/tkuchida", "followers_url": "https://api.github.com/users/tkuchida/followers", "following_url": "https://api.github.com/users/tkuchida/following{/other_user}", "gists_url": "https://api.github.com/users/tkuchida/gists{/gist_id}", "starred_url": "https://api.github.com/users/tkuchida/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tkuchida/subscriptions", "organizations_url": "https://api.github.com/users/tkuchida/orgs", "repos_url": "https://api.github.com/users/tkuchida/repos", "events_url": "https://api.github.com/users/tkuchida/events{/privacy}", "received_events_url": "https://api.github.com/users/tkuchida/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 52267853, "node_id": "MDU6TGFiZWw1MjI2Nzg1Mw==", "url": "https://api.github.com/repos/simbody/simbody/labels/enhancement", "name": "enhancement", "color": "84b6eb", "default": true, "description": null}, {"id": 62665552, "node_id": "MDU6TGFiZWw2MjY2NTU1Mg==", "url": "https://api.github.com/repos/simbody/simbody/labels/contact", "name": "contact", "color": "eb6420", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": {"login": "tkuchida", "id": 4203505, "node_id": "MDQ6VXNlcjQyMDM1MDU=", "avatar_url": "https://avatars.githubusercontent.com/u/4203505?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tkuchida", "html_url": "https://github.com/tkuchida", "followers_url": "https://api.github.com/users/tkuchida/followers", "following_url": "https://api.github.com/users/tkuchida/following{/other_user}", "gists_url": "https://api.github.com/users/tkuchida/gists{/gist_id}", "starred_url": "https://api.github.com/users/tkuchida/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tkuchida/subscriptions", "organizations_url": "https://api.github.com/users/tkuchida/orgs", "repos_url": "https://api.github.com/users/tkuchida/repos", "events_url": "https://api.github.com/users/tkuchida/events{/privacy}", "received_events_url": "https://api.github.com/users/tkuchida/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "tkuchida", "id": 4203505, "node_id": "MDQ6VXNlcjQyMDM1MDU=", "avatar_url": "https://avatars.githubusercontent.com/u/4203505?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tkuchida", "html_url": "https://github.com/tkuchida", "followers_url": "https://api.github.com/users/tkuchida/followers", "following_url": "https://api.github.com/users/tkuchida/following{/other_user}", "gists_url": "https://api.github.com/users/tkuchida/gists{/gist_id}", "starred_url": "https://api.github.com/users/tkuchida/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tkuchida/subscriptions", "organizations_url": "https://api.github.com/users/tkuchida/orgs", "repos_url": "https://api.github.com/users/tkuchida/repos", "events_url": "https://api.github.com/users/tkuchida/events{/privacy}", "received_events_url": "https://api.github.com/users/tkuchida/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 1, "created_at": "2014-01-30T07:49:56Z", "updated_at": "2014-05-13T18:23:49Z", "closed_at": "2014-05-13T18:14:38Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "Checklist moved here from PR #100\n\n<b>Test \"sandwiching\" behavior</b>\n- [ ] Make the basic impacting unit a UnilateralSphere, of which FreeUnilateralBrick owns 8.\n- [ ] Generalize test case for arbitrary multibody systems by overloading MultibodySystem.\n- [ ] Add a FreeUnilateralSphere mobilized body that owns 1 UnilateralSphere.\n- [ ] Implement global search to identify all sphere-on-ground and sphere-on-sphere impacts.\n- [ ] Generalize formulation to solve for impacts between two spheres.\n- [ ] Verify simulation of two-sphere-snowman being dropped on the ground.\n\n<b>To do</b>\n- [x] Implement <i>successive pruning</i> mode for impact handler.\n- [x] Add BodyWatcher so the camera tracks the brick.\n- [x] Improve algorithm for determining the interval step length.\n- [x] Use unique indices to access Array_ elements.\n- [x] Add pause _before_ closing each visualization window\n- [x] Print total system energy to monitor energy conservation\n- [x] Remove [`minIntervalsPerPhase`](https://github.com/tkuchida/simbody/blob/PLUSImpact/Simbody/tests/adhoc/TestPLUS_SingleBrick.cpp#L86) parameter (limiting [`maxSlidingDirChange`](https://github.com/tkuchida/simbody/blob/PLUSImpact/Simbody/tests/adhoc/TestPLUS_SingleBrick.cpp#L81) is sufficient).\n- [x] Add a mode that compares the exhaustive search and successive pruning results for each interval.\n- [x] Solve only for impulses in least-squares problem to improve efficiency.\n- [x] During restitution, remove equations with no degrees of freedom.\n- [ ] Modify `GM\\~G` computation used by Simbody; create `G'M\\~G`, where `G'` is modified version of `G`.\n- [x] If all sliding directions are acceptable, do not update them (i.e., do not solve the linear system a second time). In fact, if there are no unknown sliding directions, there is no need to confirm that the sliding directions are acceptable.\n- [x] Investigate use of Newton iteration to refine sliding directions.\n- [x] Improve handling of unknown slip directions in `calculateIntervalStepLength()`.\n- [x] Improve efficiency of search strategy used in `calculateIntervalStepLength()`.\n- [ ] Test in more scenarios and with different parameters.\n- [ ] Compare results with compliant contact model.\n- [ ] Add contact handler.\n- [ ] Implement convex optimization\u2013based search strategy for impact handler.\n", "reactions": {"url": "https://api.github.com/repos/simbody/simbody/issues/115/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/simbody/simbody/issues/115/timeline", "performed_via_github_app": null}, {"url": "https://api.github.com/repos/simbody/simbody/issues/125", "repository_url": "https://api.github.com/repos/simbody/simbody", "labels_url": "https://api.github.com/repos/simbody/simbody/issues/125/labels{/name}", "comments_url": "https://api.github.com/repos/simbody/simbody/issues/125/comments", "events_url": "https://api.github.com/repos/simbody/simbody/issues/125/events", "html_url": "https://github.com/simbody/simbody/issues/125", "id": 28308413, "node_id": "MDU6SXNzdWUyODMwODQxMw==", "number": 125, "title": "Unable to run pendulum example when compiling with -std=c++11", "user": {"login": "nham", "id": 546409, "node_id": "MDQ6VXNlcjU0NjQwOQ==", "avatar_url": "https://avatars.githubusercontent.com/u/546409?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nham", "html_url": "https://github.com/nham", "followers_url": "https://api.github.com/users/nham/followers", "following_url": "https://api.github.com/users/nham/following{/other_user}", "gists_url": "https://api.github.com/users/nham/gists{/gist_id}", "starred_url": "https://api.github.com/users/nham/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nham/subscriptions", "organizations_url": "https://api.github.com/users/nham/orgs", "repos_url": "https://api.github.com/users/nham/repos", "events_url": "https://api.github.com/users/nham/events{/privacy}", "received_events_url": "https://api.github.com/users/nham/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 8, "created_at": "2014-02-26T04:44:18Z", "updated_at": "2014-05-15T15:31:56Z", "closed_at": "2014-05-15T15:31:56Z", "author_association": "NONE", "active_lock_reason": null, "body": "I'm running 64-bit Arch Linux, and I've compiled simbody from the latest master code on github. I'm trying to run the pendulum example from the README.\n\nCompiling without `std=c++11` works, and the example runs correctly. For reference I'm using this command:\n\n```\ng++ -Wall -g pendulum.cpp -L/usr/local/lib/ -lSimTKsimbody -lSimTKmath -lSimTKcommon -o pendulum\n```\n\nAdding `std=c++11` also compiles successfully, but when I run it I get a segfault. Here's what I get opening the core dump in gdb:\n\n```\nCore was generated by `./pendulum'.\nProgram terminated with signal SIGSEGV, Segmentation fault.\n#0  0x00007f29d3a8624a in _GLOBAL__sub_I_Scalar.cpp ()\n   from /usr/local/lib/libSimTKcommon.so.3.5\n```\n", "reactions": {"url": "https://api.github.com/repos/simbody/simbody/issues/125/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/simbody/simbody/issues/125/timeline", "performed_via_github_app": null}, {"url": "https://api.github.com/repos/simbody/simbody/issues/128", "repository_url": "https://api.github.com/repos/simbody/simbody", "labels_url": "https://api.github.com/repos/simbody/simbody/issues/128/labels{/name}", "comments_url": "https://api.github.com/repos/simbody/simbody/issues/128/comments", "events_url": "https://api.github.com/repos/simbody/simbody/issues/128/events", "html_url": "https://github.com/simbody/simbody/issues/128", "id": 30355991, "node_id": "MDU6SXNzdWUzMDM1NTk5MQ==", "number": 128, "title": "Compiler warning on ubuntu (gcc)", "user": {"login": "scpeters", "id": 3650755, "node_id": "MDQ6VXNlcjM2NTA3NTU=", "avatar_url": "https://avatars.githubusercontent.com/u/3650755?v=4", "gravatar_id": "", "url": "https://api.github.com/users/scpeters", "html_url": "https://github.com/scpeters", "followers_url": "https://api.github.com/users/scpeters/followers", "following_url": "https://api.github.com/users/scpeters/following{/other_user}", "gists_url": "https://api.github.com/users/scpeters/gists{/gist_id}", "starred_url": "https://api.github.com/users/scpeters/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/scpeters/subscriptions", "organizations_url": "https://api.github.com/users/scpeters/orgs", "repos_url": "https://api.github.com/users/scpeters/repos", "events_url": "https://api.github.com/users/scpeters/events{/privacy}", "received_events_url": "https://api.github.com/users/scpeters/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2014-03-28T00:56:33Z", "updated_at": "2014-03-28T17:39:37Z", "closed_at": "2014-03-28T17:39:37Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "```\n/home/travis/build/simbody/simbody/SimTKmath/tests/adhoc/nlpqlp.cpp: In function \u2018int tp333_(int*)\u2019:\n/home/travis/build/simbody/simbody/SimTKmath/tests/adhoc/nlpqlp.cpp:22240:32: warning: iteration 3u invokes undefined behavior [-Waggressive-loop-optimizations]\n  l4_2.gf[i__ - 1] *= (float)1e3;\n                                ^\n/home/travis/build/simbody/simbody/SimTKmath/tests/adhoc/nlpqlp.cpp:22239:5: note: containing loop\n     for (i__ = 1; i__ <= 8; ++i__) {\n     ^\n```\n\nhttps://travis-ci.org/simbody/simbody/jobs/21647742#L1000-L1006\n", "reactions": {"url": "https://api.github.com/repos/simbody/simbody/issues/128/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/simbody/simbody/issues/128/timeline", "performed_via_github_app": null}, {"url": "https://api.github.com/repos/simbody/simbody/issues/134", "repository_url": "https://api.github.com/repos/simbody/simbody", "labels_url": "https://api.github.com/repos/simbody/simbody/issues/134/labels{/name}", "comments_url": "https://api.github.com/repos/simbody/simbody/issues/134/comments", "events_url": "https://api.github.com/repos/simbody/simbody/issues/134/events", "html_url": "https://github.com/simbody/simbody/issues/134", "id": 30683701, "node_id": "MDU6SXNzdWUzMDY4MzcwMQ==", "number": 134, "title": "Complete quoting for parameters of some CMake commands", "user": {"login": "elfring", "id": 660477, "node_id": "MDQ6VXNlcjY2MDQ3Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/660477?v=4", "gravatar_id": "", "url": "https://api.github.com/users/elfring", "html_url": "https://github.com/elfring", "followers_url": "https://api.github.com/users/elfring/followers", "following_url": "https://api.github.com/users/elfring/following{/other_user}", "gists_url": "https://api.github.com/users/elfring/gists{/gist_id}", "starred_url": "https://api.github.com/users/elfring/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/elfring/subscriptions", "organizations_url": "https://api.github.com/users/elfring/orgs", "repos_url": "https://api.github.com/users/elfring/repos", "events_url": "https://api.github.com/users/elfring/events{/privacy}", "received_events_url": "https://api.github.com/users/elfring/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 54361018, "node_id": "MDU6TGFiZWw1NDM2MTAxOA==", "url": "https://api.github.com/repos/simbody/simbody/labels/build", "name": "build", "color": "bfe5bf", "default": false, "description": null}, {"id": 108217628, "node_id": "MDU6TGFiZWwxMDgyMTc2Mjg=", "url": "https://api.github.com/repos/simbody/simbody/labels/help%20wanted", "name": "help wanted", "color": "009800", "default": true, "description": null}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2014-04-02T12:38:17Z", "updated_at": "2014-12-18T18:10:05Z", "closed_at": null, "author_association": "NONE", "active_lock_reason": null, "body": "Some parameters (like \"[${CMAKE_INSTALL_DOCDIR}/examples/](https://github.com/simbody/simbody/blob/b470c351cf657e904561e22f499721ba70f4d872/Simbody/examples/CMakeLists.txt#L25)\" and \"[${CMAKE_BINARY_DIR}](https://github.com/simbody/simbody/blob/4485af62940bee065052393f321a17f5ac30551b/CMakeLists.txt#L65)\") are passed to CMake commands in your build scripts without enclosing them by quotation marks. I see that these places will result in build difficulties if the contents of the used variables will contain special characters like spaces or semicolons.\n\nI would recommend to apply [advices from a wiki article](http://cmake.org/Wiki/CMake/Language_Syntax#CMake_splits_arguments_unless_you_use_quotation_marks_or_escapes.).\n", "reactions": {"url": "https://api.github.com/repos/simbody/simbody/issues/134/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/simbody/simbody/issues/134/timeline", "performed_via_github_app": null}, {"url": "https://api.github.com/repos/simbody/simbody/issues/135", "repository_url": "https://api.github.com/repos/simbody/simbody", "labels_url": "https://api.github.com/repos/simbody/simbody/issues/135/labels{/name}", "comments_url": "https://api.github.com/repos/simbody/simbody/issues/135/comments", "events_url": "https://api.github.com/repos/simbody/simbody/issues/135/events", "html_url": "https://github.com/simbody/simbody/issues/135", "id": 30959198, "node_id": "MDU6SXNzdWUzMDk1OTE5OA==", "number": 135, "title": "Possible bug in NoSlip1D constraint", "user": {"login": "sherm1", "id": 4088016, "node_id": "MDQ6VXNlcjQwODgwMTY=", "avatar_url": "https://avatars.githubusercontent.com/u/4088016?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sherm1", "html_url": "https://github.com/sherm1", "followers_url": "https://api.github.com/users/sherm1/followers", "following_url": "https://api.github.com/users/sherm1/following{/other_user}", "gists_url": "https://api.github.com/users/sherm1/gists{/gist_id}", "starred_url": "https://api.github.com/users/sherm1/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sherm1/subscriptions", "organizations_url": "https://api.github.com/users/sherm1/orgs", "repos_url": "https://api.github.com/users/sherm1/repos", "events_url": "https://api.github.com/users/sherm1/events{/privacy}", "received_events_url": "https://api.github.com/users/sherm1/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 52759775, "node_id": "MDU6TGFiZWw1Mjc1OTc3NQ==", "url": "https://api.github.com/repos/simbody/simbody/labels/constraint", "name": "constraint", "color": "d4c5f9", "default": false, "description": null}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2014-04-07T05:36:18Z", "updated_at": "2014-06-19T22:59:36Z", "closed_at": null, "author_association": "MEMBER", "active_lock_reason": null, "body": "I am suspicious of the acceleration error equation for NoSlip1D, which you can see [here](https://github.com/simbody/simbody/blob/master/Simbody/src/ConstraintImpl.h#L2566).\nCompare that with the similar-looking relative acceleration calculation in PointInPlane [here](https://github.com/simbody/simbody/blob/master/Simbody/src/ConstraintImpl.h#L1423).\n\nIs there a factor of 2 missing in the Coriolis term for NoSlip1D? Or does that somehow cancel out due to the Case body? \n\nI recently re-derived the equations for point contact with stiction and the factor of 2 is correct there. The equations for NoSlip1D should be rederived also to make sure they are correct.\n\nIf the equation is wrong, fix it and then check whether that fixes Ajay's RattleBack_ReverseEllipsoid example which failed to conserve energy with NoSlip1D constraints active. \n", "reactions": {"url": "https://api.github.com/repos/simbody/simbody/issues/135/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/simbody/simbody/issues/135/timeline", "performed_via_github_app": null}, {"url": "https://api.github.com/repos/simbody/simbody/issues/138", "repository_url": "https://api.github.com/repos/simbody/simbody", "labels_url": "https://api.github.com/repos/simbody/simbody/issues/138/labels{/name}", "comments_url": "https://api.github.com/repos/simbody/simbody/issues/138/comments", "events_url": "https://api.github.com/repos/simbody/simbody/issues/138/events", "html_url": "https://github.com/simbody/simbody/issues/138", "id": 32473686, "node_id": "MDU6SXNzdWUzMjQ3MzY4Ng==", "number": 138, "title": "Cannot get number of mobilities from MobilizedBody without the state.", "user": {"login": "aseth1", "id": 6494122, "node_id": "MDQ6VXNlcjY0OTQxMjI=", "avatar_url": "https://avatars.githubusercontent.com/u/6494122?v=4", "gravatar_id": "", "url": "https://api.github.com/users/aseth1", "html_url": "https://github.com/aseth1", "followers_url": "https://api.github.com/users/aseth1/followers", "following_url": "https://api.github.com/users/aseth1/following{/other_user}", "gists_url": "https://api.github.com/users/aseth1/gists{/gist_id}", "starred_url": "https://api.github.com/users/aseth1/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/aseth1/subscriptions", "organizations_url": "https://api.github.com/users/aseth1/orgs", "repos_url": "https://api.github.com/users/aseth1/repos", "events_url": "https://api.github.com/users/aseth1/events{/privacy}", "received_events_url": "https://api.github.com/users/aseth1/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 52267853, "node_id": "MDU6TGFiZWw1MjI2Nzg1Mw==", "url": "https://api.github.com/repos/simbody/simbody/labels/enhancement", "name": "enhancement", "color": "84b6eb", "default": true, "description": null}, {"id": 121484439, "node_id": "MDU6TGFiZWwxMjE0ODQ0Mzk=", "url": "https://api.github.com/repos/simbody/simbody/labels/OpenSim", "name": "OpenSim", "color": "006b75", "default": false, "description": null}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2014-04-29T18:47:41Z", "updated_at": "2014-09-04T18:13:27Z", "closed_at": null, "author_association": "NONE", "active_lock_reason": null, "body": "The number of mobilities enabled by a concrete MobilizedBody is fixed (or determined at construction in the case of the FunctionBased MobilizedBody). One should be able to access the number of mobilities of the MobilizedBody without having to realize Topology.\n", "reactions": {"url": "https://api.github.com/repos/simbody/simbody/issues/138/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/simbody/simbody/issues/138/timeline", "performed_via_github_app": null}, {"url": "https://api.github.com/repos/simbody/simbody/issues/139", "repository_url": "https://api.github.com/repos/simbody/simbody", "labels_url": "https://api.github.com/repos/simbody/simbody/issues/139/labels{/name}", "comments_url": "https://api.github.com/repos/simbody/simbody/issues/139/comments", "events_url": "https://api.github.com/repos/simbody/simbody/issues/139/events", "html_url": "https://github.com/simbody/simbody/issues/139", "id": 32916033, "node_id": "MDU6SXNzdWUzMjkxNjAzMw==", "number": 139, "title": "Define OVERRIDE_11 and FINAL_11 when using gcc or clang.", "user": {"login": "chrisdembia", "id": 846001, "node_id": "MDQ6VXNlcjg0NjAwMQ==", "avatar_url": "https://avatars.githubusercontent.com/u/846001?v=4", "gravatar_id": "", "url": "https://api.github.com/users/chrisdembia", "html_url": "https://github.com/chrisdembia", "followers_url": "https://api.github.com/users/chrisdembia/followers", "following_url": "https://api.github.com/users/chrisdembia/following{/other_user}", "gists_url": "https://api.github.com/users/chrisdembia/gists{/gist_id}", "starred_url": "https://api.github.com/users/chrisdembia/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/chrisdembia/subscriptions", "organizations_url": "https://api.github.com/users/chrisdembia/orgs", "repos_url": "https://api.github.com/users/chrisdembia/repos", "events_url": "https://api.github.com/users/chrisdembia/events{/privacy}", "received_events_url": "https://api.github.com/users/chrisdembia/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2014-05-06T17:50:03Z", "updated_at": "2014-05-07T03:09:22Z", "closed_at": "2014-05-07T03:09:22Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "Silly me, I thought these were being defined if I used `-std=c++11`. I just checked common.h, though, and I see that if not on windows, these macros are defined as empty. Since we have the `SIMBODY_STANDARD_11` flag, we can use this to control if `OVERRIDE_11` and `FINAL_11` are set to `override` and `final`.\n", "reactions": {"url": "https://api.github.com/repos/simbody/simbody/issues/139/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/simbody/simbody/issues/139/timeline", "performed_via_github_app": null}, {"url": "https://api.github.com/repos/simbody/simbody/issues/141", "repository_url": "https://api.github.com/repos/simbody/simbody", "labels_url": "https://api.github.com/repos/simbody/simbody/issues/141/labels{/name}", "comments_url": "https://api.github.com/repos/simbody/simbody/issues/141/comments", "events_url": "https://api.github.com/repos/simbody/simbody/issues/141/events", "html_url": "https://github.com/simbody/simbody/issues/141", "id": 32959458, "node_id": "MDU6SXNzdWUzMjk1OTQ1OA==", "number": 141, "title": "Provide a way for client projects to check if Simbody was built as C++11.", "user": {"login": "chrisdembia", "id": 846001, "node_id": "MDQ6VXNlcjg0NjAwMQ==", "avatar_url": "https://avatars.githubusercontent.com/u/846001?v=4", "gravatar_id": "", "url": "https://api.github.com/users/chrisdembia", "html_url": "https://github.com/chrisdembia", "followers_url": "https://api.github.com/users/chrisdembia/followers", "following_url": "https://api.github.com/users/chrisdembia/following{/other_user}", "gists_url": "https://api.github.com/users/chrisdembia/gists{/gist_id}", "starred_url": "https://api.github.com/users/chrisdembia/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/chrisdembia/subscriptions", "organizations_url": "https://api.github.com/users/chrisdembia/orgs", "repos_url": "https://api.github.com/users/chrisdembia/repos", "events_url": "https://api.github.com/users/chrisdembia/events{/privacy}", "received_events_url": "https://api.github.com/users/chrisdembia/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2014-05-07T06:45:01Z", "updated_at": "2014-05-07T16:30:10Z", "closed_at": "2014-05-07T16:30:10Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "This is only relevant for UNIX systems. I'm mainly thinking about OpenSim. OpenSim trunk must be built with C++11, which means that the corresponding Simbody must also be built as C++11. It would be nice if OpenSim had a way to check if the Simbody installation being used was built with C++11. This is only relevant because it is currently possible to build Simbody as _not_ C++11.\n\nThis could also help to avoid situations like that in #125.\n\nAny time I've helped someone build OpenSim, this has come up (@carmichaelong, @sohapouya).\n\nMaybe this isn't so important though, considering that Simbody 3.5 and up using C++11 by default.\n", "reactions": {"url": "https://api.github.com/repos/simbody/simbody/issues/141/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/simbody/simbody/issues/141/timeline", "performed_via_github_app": null}, {"url": "https://api.github.com/repos/simbody/simbody/issues/145", "repository_url": "https://api.github.com/repos/simbody/simbody", "labels_url": "https://api.github.com/repos/simbody/simbody/issues/145/labels{/name}", "comments_url": "https://api.github.com/repos/simbody/simbody/issues/145/comments", "events_url": "https://api.github.com/repos/simbody/simbody/issues/145/events", "html_url": "https://github.com/simbody/simbody/issues/145", "id": 33544761, "node_id": "MDU6SXNzdWUzMzU0NDc2MQ==", "number": 145, "title": "README.md should have pendulum gif", "user": {"login": "sherm1", "id": 4088016, "node_id": "MDQ6VXNlcjQwODgwMTY=", "avatar_url": "https://avatars.githubusercontent.com/u/4088016?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sherm1", "html_url": "https://github.com/sherm1", "followers_url": "https://api.github.com/users/sherm1/followers", "following_url": "https://api.github.com/users/sherm1/following{/other_user}", "gists_url": "https://api.github.com/users/sherm1/gists{/gist_id}", "starred_url": "https://api.github.com/users/sherm1/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sherm1/subscriptions", "organizations_url": "https://api.github.com/users/sherm1/orgs", "repos_url": "https://api.github.com/users/sherm1/repos", "events_url": "https://api.github.com/users/sherm1/events{/privacy}", "received_events_url": "https://api.github.com/users/sherm1/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": {"login": "chrisdembia", "id": 846001, "node_id": "MDQ6VXNlcjg0NjAwMQ==", "avatar_url": "https://avatars.githubusercontent.com/u/846001?v=4", "gravatar_id": "", "url": "https://api.github.com/users/chrisdembia", "html_url": "https://github.com/chrisdembia", "followers_url": "https://api.github.com/users/chrisdembia/followers", "following_url": "https://api.github.com/users/chrisdembia/following{/other_user}", "gists_url": "https://api.github.com/users/chrisdembia/gists{/gist_id}", "starred_url": "https://api.github.com/users/chrisdembia/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/chrisdembia/subscriptions", "organizations_url": "https://api.github.com/users/chrisdembia/orgs", "repos_url": "https://api.github.com/users/chrisdembia/repos", "events_url": "https://api.github.com/users/chrisdembia/events{/privacy}", "received_events_url": "https://api.github.com/users/chrisdembia/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "chrisdembia", "id": 846001, "node_id": "MDQ6VXNlcjg0NjAwMQ==", "avatar_url": "https://avatars.githubusercontent.com/u/846001?v=4", "gravatar_id": "", "url": "https://api.github.com/users/chrisdembia", "html_url": "https://github.com/chrisdembia", "followers_url": "https://api.github.com/users/chrisdembia/followers", "following_url": "https://api.github.com/users/chrisdembia/following{/other_user}", "gists_url": "https://api.github.com/users/chrisdembia/gists{/gist_id}", "starred_url": "https://api.github.com/users/chrisdembia/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/chrisdembia/subscriptions", "organizations_url": "https://api.github.com/users/chrisdembia/orgs", "repos_url": "https://api.github.com/users/chrisdembia/repos", "events_url": "https://api.github.com/users/chrisdembia/events{/privacy}", "received_events_url": "https://api.github.com/users/chrisdembia/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 3, "created_at": "2014-05-15T00:00:20Z", "updated_at": "2014-06-12T22:28:10Z", "closed_at": "2014-06-12T22:28:10Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "Currently there is a beautiful 1000-body gif at the beginning of `README.md` thanks to @chrisdembia. That is followed by a complete Simbody example showing how to specify a two-body pendulum. It would be very nice to add a gif showing the resulting visualization.\n\nI tried making one on Windows but my gif-making skills are minimal and the results were ugly.\n", "reactions": {"url": "https://api.github.com/repos/simbody/simbody/issues/145/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/simbody/simbody/issues/145/timeline", "performed_via_github_app": null}, {"url": "https://api.github.com/repos/simbody/simbody/issues/149", "repository_url": "https://api.github.com/repos/simbody/simbody", "labels_url": "https://api.github.com/repos/simbody/simbody/issues/149/labels{/name}", "comments_url": "https://api.github.com/repos/simbody/simbody/issues/149/comments", "events_url": "https://api.github.com/repos/simbody/simbody/issues/149/events", "html_url": "https://github.com/simbody/simbody/issues/149", "id": 33610585, "node_id": "MDU6SXNzdWUzMzYxMDU4NQ==", "number": 149, "title": "Modify lib path on GNU/Linux?", "user": {"login": "chrisdembia", "id": 846001, "node_id": "MDQ6VXNlcjg0NjAwMQ==", "avatar_url": "https://avatars.githubusercontent.com/u/846001?v=4", "gravatar_id": "", "url": "https://api.github.com/users/chrisdembia", "html_url": "https://github.com/chrisdembia", "followers_url": "https://api.github.com/users/chrisdembia/followers", "following_url": "https://api.github.com/users/chrisdembia/following{/other_user}", "gists_url": "https://api.github.com/users/chrisdembia/gists{/gist_id}", "starred_url": "https://api.github.com/users/chrisdembia/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/chrisdembia/subscriptions", "organizations_url": "https://api.github.com/users/chrisdembia/orgs", "repos_url": "https://api.github.com/users/chrisdembia/repos", "events_url": "https://api.github.com/users/chrisdembia/events{/privacy}", "received_events_url": "https://api.github.com/users/chrisdembia/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2014-05-15T18:14:12Z", "updated_at": "2014-05-20T02:23:53Z", "closed_at": "2014-05-20T02:23:53Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "@j-rivero ! I have a question about GNUInstallDirs. Currently, on Linux, with a vanilla cmake install into /usr/local/, the libraries are placed in /usr/local/lib/<arch>. However, /usr/local/lib/<arch> is not in /etc/ld.so.conf.\n\nIt definitely makes sense to use the <arch> directory if installing to /usr. However, what do you think about:\n\n```\nif(\"${CMAKE_INSTALL_PREFIX}\" STREQUAL \"/usr\")\n  # append <arch> to lib dir\nelse()\n  # don't.\nendif()\n```\n\n?\n\nThis would allow users to not need to edit their LD_LIBRARY_PATH for a vanilla cmake install, which I think would be quite nice (/usr/local/lib is in /etc/ld.so.conf).\n", "reactions": {"url": "https://api.github.com/repos/simbody/simbody/issues/149/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/simbody/simbody/issues/149/timeline", "performed_via_github_app": null}, {"url": "https://api.github.com/repos/simbody/simbody/issues/150", "repository_url": "https://api.github.com/repos/simbody/simbody", "labels_url": "https://api.github.com/repos/simbody/simbody/issues/150/labels{/name}", "comments_url": "https://api.github.com/repos/simbody/simbody/issues/150/comments", "events_url": "https://api.github.com/repos/simbody/simbody/issues/150/events", "html_url": "https://github.com/simbody/simbody/issues/150", "id": 33637143, "node_id": "MDU6SXNzdWUzMzYzNzE0Mw==", "number": 150, "title": "Should we still encourage users to install to /usr/local/simbody?", "user": {"login": "chrisdembia", "id": 846001, "node_id": "MDQ6VXNlcjg0NjAwMQ==", "avatar_url": "https://avatars.githubusercontent.com/u/846001?v=4", "gravatar_id": "", "url": "https://api.github.com/users/chrisdembia", "html_url": "https://github.com/chrisdembia", "followers_url": "https://api.github.com/users/chrisdembia/followers", "following_url": "https://api.github.com/users/chrisdembia/following{/other_user}", "gists_url": "https://api.github.com/users/chrisdembia/gists{/gist_id}", "starred_url": "https://api.github.com/users/chrisdembia/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/chrisdembia/subscriptions", "organizations_url": "https://api.github.com/users/chrisdembia/orgs", "repos_url": "https://api.github.com/users/chrisdembia/repos", "events_url": "https://api.github.com/users/chrisdembia/events{/privacy}", "received_events_url": "https://api.github.com/users/chrisdembia/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 13, "created_at": "2014-05-16T00:16:11Z", "updated_at": "2014-12-15T02:32:52Z", "closed_at": "2014-12-15T02:32:52Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "Maybe I just have bad memory, but how come `/usr/local/simbody` exists in the CMakeLists file?\n\n```\nIF(${CMAKE_C_COMPILER} MATCHES \"cc\" OR ${CMAKE_CXX_COMPILER_ID} MATCHES \"Clang\")\n    IF(NOT CMAKE_INSTALL_PREFIX)\n        SET(CMAKE_INSTALL_PREFIX \"/usr/local/simbody\" \n            CACHE PATH \"Install directory\")\n    ENDIF(NOT CMAKE_INSTALL_PREFIX)\n\nELSE()\n...\n```\n\nIn practice, CMAKE_INSTALL_PREFIX isn't set to /usr/local/simbody by default. Can this snippet be removed?\n\nIf so, this affects this may affect old build/install instructions.\n", "reactions": {"url": "https://api.github.com/repos/simbody/simbody/issues/150/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/simbody/simbody/issues/150/timeline", "performed_via_github_app": null}, {"url": "https://api.github.com/repos/simbody/simbody/issues/154", "repository_url": "https://api.github.com/repos/simbody/simbody", "labels_url": "https://api.github.com/repos/simbody/simbody/issues/154/labels{/name}", "comments_url": "https://api.github.com/repos/simbody/simbody/issues/154/comments", "events_url": "https://api.github.com/repos/simbody/simbody/issues/154/events", "html_url": "https://github.com/simbody/simbody/issues/154", "id": 34674780, "node_id": "MDU6SXNzdWUzNDY3NDc4MA==", "number": 154, "title": "MultibodyGraphMaker doesn't allow welded-on massless body", "user": {"login": "sherm1", "id": 4088016, "node_id": "MDQ6VXNlcjQwODgwMTY=", "avatar_url": "https://avatars.githubusercontent.com/u/4088016?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sherm1", "html_url": "https://github.com/sherm1", "followers_url": "https://api.github.com/users/sherm1/followers", "following_url": "https://api.github.com/users/sherm1/following{/other_user}", "gists_url": "https://api.github.com/users/sherm1/gists{/gist_id}", "starred_url": "https://api.github.com/users/sherm1/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sherm1/subscriptions", "organizations_url": "https://api.github.com/users/sherm1/orgs", "repos_url": "https://api.github.com/users/sherm1/repos", "events_url": "https://api.github.com/users/sherm1/events{/privacy}", "received_events_url": "https://api.github.com/users/sherm1/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 52267851, "node_id": "MDU6TGFiZWw1MjI2Nzg1MQ==", "url": "https://api.github.com/repos/simbody/simbody/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": {"login": "sherm1", "id": 4088016, "node_id": "MDQ6VXNlcjQwODgwMTY=", "avatar_url": "https://avatars.githubusercontent.com/u/4088016?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sherm1", "html_url": "https://github.com/sherm1", "followers_url": "https://api.github.com/users/sherm1/followers", "following_url": "https://api.github.com/users/sherm1/following{/other_user}", "gists_url": "https://api.github.com/users/sherm1/gists{/gist_id}", "starred_url": "https://api.github.com/users/sherm1/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sherm1/subscriptions", "organizations_url": "https://api.github.com/users/sherm1/orgs", "repos_url": "https://api.github.com/users/sherm1/repos", "events_url": "https://api.github.com/users/sherm1/events{/privacy}", "received_events_url": "https://api.github.com/users/sherm1/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "sherm1", "id": 4088016, "node_id": "MDQ6VXNlcjQwODgwMTY=", "avatar_url": "https://avatars.githubusercontent.com/u/4088016?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sherm1", "html_url": "https://github.com/sherm1", "followers_url": "https://api.github.com/users/sherm1/followers", "following_url": "https://api.github.com/users/sherm1/following{/other_user}", "gists_url": "https://api.github.com/users/sherm1/gists{/gist_id}", "starred_url": "https://api.github.com/users/sherm1/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sherm1/subscriptions", "organizations_url": "https://api.github.com/users/sherm1/orgs", "repos_url": "https://api.github.com/users/sherm1/repos", "events_url": "https://api.github.com/users/sherm1/events{/privacy}", "received_events_url": "https://api.github.com/users/sherm1/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 1, "created_at": "2014-05-30T19:38:43Z", "updated_at": "2014-05-30T19:48:32Z", "closed_at": "2014-05-30T19:48:32Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "MultibodyGraphMaker goes to great pain to avoid producing a graph in which a terminal body is massless, and throws an exception if it fails. However, @aseth1 pointed out that massless bodies that are welded to their parents should be allowed, and in fact those are commonly used in OpenSim.\n\nMGM should treat a massless body whose joint is a weld the same as it would treat a massful body.\n", "reactions": {"url": "https://api.github.com/repos/simbody/simbody/issues/154/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/simbody/simbody/issues/154/timeline", "performed_via_github_app": null}, {"url": "https://api.github.com/repos/simbody/simbody/issues/155", "repository_url": "https://api.github.com/repos/simbody/simbody", "labels_url": "https://api.github.com/repos/simbody/simbody/issues/155/labels{/name}", "comments_url": "https://api.github.com/repos/simbody/simbody/issues/155/comments", "events_url": "https://api.github.com/repos/simbody/simbody/issues/155/events", "html_url": "https://github.com/simbody/simbody/issues/155", "id": 35326522, "node_id": "MDU6SXNzdWUzNTMyNjUyMg==", "number": 155, "title": "Visualizer-simulator pipes should be open only at one end", "user": {"login": "sherm1", "id": 4088016, "node_id": "MDQ6VXNlcjQwODgwMTY=", "avatar_url": "https://avatars.githubusercontent.com/u/4088016?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sherm1", "html_url": "https://github.com/sherm1", "followers_url": "https://api.github.com/users/sherm1/followers", "following_url": "https://api.github.com/users/sherm1/following{/other_user}", "gists_url": "https://api.github.com/users/sherm1/gists{/gist_id}", "starred_url": "https://api.github.com/users/sherm1/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sherm1/subscriptions", "organizations_url": "https://api.github.com/users/sherm1/orgs", "repos_url": "https://api.github.com/users/sherm1/repos", "events_url": "https://api.github.com/users/sherm1/events{/privacy}", "received_events_url": "https://api.github.com/users/sherm1/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 52267851, "node_id": "MDU6TGFiZWw1MjI2Nzg1MQ==", "url": "https://api.github.com/repos/simbody/simbody/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}, {"id": 52759897, "node_id": "MDU6TGFiZWw1Mjc1OTg5Nw==", "url": "https://api.github.com/repos/simbody/simbody/labels/visualization", "name": "visualization", "color": "bfd4f2", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2014-06-09T21:29:01Z", "updated_at": "2014-06-09T22:02:59Z", "closed_at": "2014-06-09T22:02:59Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "Simbody creates two pipes, sim2viz and viz2sim for communication to/from the visualizer. Only one end of each pipe should remain open in each of the two processes; currently both sides are left open.\n\nThis _might_ be causing a problem @sohapouya encountered on her Linux machine, which looked like noise coming through the sim2viz pipe.\n", "reactions": {"url": "https://api.github.com/repos/simbody/simbody/issues/155/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/simbody/simbody/issues/155/timeline", "performed_via_github_app": null}, {"url": "https://api.github.com/repos/simbody/simbody/issues/157", "repository_url": "https://api.github.com/repos/simbody/simbody", "labels_url": "https://api.github.com/repos/simbody/simbody/issues/157/labels{/name}", "comments_url": "https://api.github.com/repos/simbody/simbody/issues/157/comments", "events_url": "https://api.github.com/repos/simbody/simbody/issues/157/events", "html_url": "https://github.com/simbody/simbody/issues/157", "id": 35403090, "node_id": "MDU6SXNzdWUzNTQwMzA5MA==", "number": 157, "title": "Annoying debug message: DBG: YANKING!!! (face X)", "user": {"login": "scpeters", "id": 3650755, "node_id": "MDQ6VXNlcjM2NTA3NTU=", "avatar_url": "https://avatars.githubusercontent.com/u/3650755?v=4", "gravatar_id": "", "url": "https://api.github.com/users/scpeters", "html_url": "https://github.com/scpeters", "followers_url": "https://api.github.com/users/scpeters/followers", "following_url": "https://api.github.com/users/scpeters/following{/other_user}", "gists_url": "https://api.github.com/users/scpeters/gists{/gist_id}", "starred_url": "https://api.github.com/users/scpeters/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/scpeters/subscriptions", "organizations_url": "https://api.github.com/users/scpeters/orgs", "repos_url": "https://api.github.com/users/scpeters/repos", "events_url": "https://api.github.com/users/scpeters/events{/privacy}", "received_events_url": "https://api.github.com/users/scpeters/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 15, "created_at": "2014-06-10T17:00:36Z", "updated_at": "2014-06-13T02:54:14Z", "closed_at": "2014-06-13T02:54:14Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "There is a console message in `Simbody/src/CompliantContactSubsystem.cpp` that has the potential to dominate all console output when compliant contact starts to behave strangely (copied from [gazebo jenkins testing](http://build.osrfoundation.org/job/gazebo-gazebo_3.0-devel-trusty-amd64-gpu-nvidia/2/consoleFull)):\n\n```\n...\n105: DBG: YANKING!!! (face 403)\n105: DBG: YANKING!!! (face 404)\n105: DBG: YANKING!!! (face 405)\n105: DBG: YANKING!!! (face 406)\n105: DBG: YANKING!!! (face 407)\n105: DBG: YANKING!!! (face 408)\n105: DBG: YANKING!!! (face 409)\n105: DBG: YANKING!!! (face 410)\n105: DBG: YANKING!!! (face 411)\n...\n```\n\nThis single message increases the console log from about 2 MB to over 20 MB.\n\nI mentioned this to @sherm1 once before, and he said that this message only displays when the code is compiled with debug settings. That is true, but it appears that the Ubuntu debs that are hosted at packages.osrfoundation.org do not have the `NDEBUG` symbol defined.\n\n@j-rivero perhaps we can discuss which compilation flags we should use for the debs that we host?\n", "reactions": {"url": "https://api.github.com/repos/simbody/simbody/issues/157/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/simbody/simbody/issues/157/timeline", "performed_via_github_app": null}, {"url": "https://api.github.com/repos/simbody/simbody/issues/158", "repository_url": "https://api.github.com/repos/simbody/simbody", "labels_url": "https://api.github.com/repos/simbody/simbody/issues/158/labels{/name}", "comments_url": "https://api.github.com/repos/simbody/simbody/issues/158/comments", "events_url": "https://api.github.com/repos/simbody/simbody/issues/158/events", "html_url": "https://github.com/simbody/simbody/issues/158", "id": 35437343, "node_id": "MDU6SXNzdWUzNTQzNzM0Mw==", "number": 158, "title": "Parallelize Force calculations", "user": {"login": "chrisdembia", "id": 846001, "node_id": "MDQ6VXNlcjg0NjAwMQ==", "avatar_url": "https://avatars.githubusercontent.com/u/846001?v=4", "gravatar_id": "", "url": "https://api.github.com/users/chrisdembia", "html_url": "https://github.com/chrisdembia", "followers_url": "https://api.github.com/users/chrisdembia/followers", "following_url": "https://api.github.com/users/chrisdembia/following{/other_user}", "gists_url": "https://api.github.com/users/chrisdembia/gists{/gist_id}", "starred_url": "https://api.github.com/users/chrisdembia/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/chrisdembia/subscriptions", "organizations_url": "https://api.github.com/users/chrisdembia/orgs", "repos_url": "https://api.github.com/users/chrisdembia/repos", "events_url": "https://api.github.com/users/chrisdembia/events{/privacy}", "received_events_url": "https://api.github.com/users/chrisdembia/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 52267853, "node_id": "MDU6TGFiZWw1MjI2Nzg1Mw==", "url": "https://api.github.com/repos/simbody/simbody/labels/enhancement", "name": "enhancement", "color": "84b6eb", "default": true, "description": null}, {"id": 110136914, "node_id": "MDU6TGFiZWwxMTAxMzY5MTQ=", "url": "https://api.github.com/repos/simbody/simbody/labels/speed", "name": "speed", "color": "f7c6c7", "default": false, "description": null}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2014-06-10T23:43:45Z", "updated_at": "2014-12-18T18:09:13Z", "closed_at": null, "author_association": "MEMBER", "active_lock_reason": null, "body": "@nallana, can you open a pull request to merge your parallel work queue?\n", "reactions": {"url": "https://api.github.com/repos/simbody/simbody/issues/158/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/simbody/simbody/issues/158/timeline", "performed_via_github_app": null}, {"url": "https://api.github.com/repos/simbody/simbody/issues/162", "repository_url": "https://api.github.com/repos/simbody/simbody", "labels_url": "https://api.github.com/repos/simbody/simbody/issues/162/labels{/name}", "comments_url": "https://api.github.com/repos/simbody/simbody/issues/162/comments", "events_url": "https://api.github.com/repos/simbody/simbody/issues/162/events", "html_url": "https://github.com/simbody/simbody/issues/162", "id": 35641310, "node_id": "MDU6SXNzdWUzNTY0MTMxMA==", "number": 162, "title": "Different constraints needed for assembly than for execution, esp. Weld", "user": {"login": "sherm1", "id": 4088016, "node_id": "MDQ6VXNlcjQwODgwMTY=", "avatar_url": "https://avatars.githubusercontent.com/u/4088016?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sherm1", "html_url": "https://github.com/sherm1", "followers_url": "https://api.github.com/users/sherm1/followers", "following_url": "https://api.github.com/users/sherm1/following{/other_user}", "gists_url": "https://api.github.com/users/sherm1/gists{/gist_id}", "starred_url": "https://api.github.com/users/sherm1/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sherm1/subscriptions", "organizations_url": "https://api.github.com/users/sherm1/orgs", "repos_url": "https://api.github.com/users/sherm1/repos", "events_url": "https://api.github.com/users/sherm1/events{/privacy}", "received_events_url": "https://api.github.com/users/sherm1/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 52267853, "node_id": "MDU6TGFiZWw1MjI2Nzg1Mw==", "url": "https://api.github.com/repos/simbody/simbody/labels/enhancement", "name": "enhancement", "color": "84b6eb", "default": true, "description": null}, {"id": 52759775, "node_id": "MDU6TGFiZWw1Mjc1OTc3NQ==", "url": "https://api.github.com/repos/simbody/simbody/labels/constraint", "name": "constraint", "color": "d4c5f9", "default": false, "description": null}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2014-06-13T03:06:12Z", "updated_at": "2014-06-13T09:07:36Z", "closed_at": null, "author_association": "MEMBER", "active_lock_reason": null, "body": "The constraint equations that are best during a simulation (constraint always nearly satisfied) are not always sufficient for use during assembly (constraint violation can be very large). This is most acute for Weld constraints, where the three orientation constraints can be satisfied by a 180 degree orientation change. To avoid this requires users to make sure that the starting configuration prior to assembly is at least \"right side up\". That's harder in practice than you might think.\n\nInstead, all constraints should have the ability to detect that assembly is being performed and then use a different set of equations when the constraint is far from assembled. The mechanism I have in mind would be to add a Model-stage boolean variable (like the existing `useEulerAngles` one). Hard-to-assemble constraints would look at that before determining what equations to use (maybe using the ordinary ones once the constraint gets close to being satisfied). The Assembler would set this flag while working, then clear it for a final polishing at the end.\n", "reactions": {"url": "https://api.github.com/repos/simbody/simbody/issues/162/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/simbody/simbody/issues/162/timeline", "performed_via_github_app": null}, {"url": "https://api.github.com/repos/simbody/simbody/issues/163", "repository_url": "https://api.github.com/repos/simbody/simbody", "labels_url": "https://api.github.com/repos/simbody/simbody/issues/163/labels{/name}", "comments_url": "https://api.github.com/repos/simbody/simbody/issues/163/comments", "events_url": "https://api.github.com/repos/simbody/simbody/issues/163/events", "html_url": "https://github.com/simbody/simbody/issues/163", "id": 35643898, "node_id": "MDU6SXNzdWUzNTY0Mzg5OA==", "number": 163, "title": "Resolve clang & c++11 test failures ", "user": {"login": "chrisdembia", "id": 846001, "node_id": "MDQ6VXNlcjg0NjAwMQ==", "avatar_url": "https://avatars.githubusercontent.com/u/846001?v=4", "gravatar_id": "", "url": "https://api.github.com/users/chrisdembia", "html_url": "https://github.com/chrisdembia", "followers_url": "https://api.github.com/users/chrisdembia/followers", "following_url": "https://api.github.com/users/chrisdembia/following{/other_user}", "gists_url": "https://api.github.com/users/chrisdembia/gists{/gist_id}", "starred_url": "https://api.github.com/users/chrisdembia/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/chrisdembia/subscriptions", "organizations_url": "https://api.github.com/users/chrisdembia/orgs", "repos_url": "https://api.github.com/users/chrisdembia/repos", "events_url": "https://api.github.com/users/chrisdembia/events{/privacy}", "received_events_url": "https://api.github.com/users/chrisdembia/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 27, "created_at": "2014-06-13T04:32:24Z", "updated_at": "2014-06-16T15:38:50Z", "closed_at": "2014-06-16T15:38:50Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "On Travis, with clang and c++11, BNTTest and TestScalar fail: https://travis-ci.org/chrisdembia/simbody/jobs/27447580.\n\nThey don't fail on my Ubuntu machine (when using clang and c++11).\n", "reactions": {"url": "https://api.github.com/repos/simbody/simbody/issues/163/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/simbody/simbody/issues/163/timeline", "performed_via_github_app": null}, {"url": "https://api.github.com/repos/simbody/simbody/issues/164", "repository_url": "https://api.github.com/repos/simbody/simbody", "labels_url": "https://api.github.com/repos/simbody/simbody/issues/164/labels{/name}", "comments_url": "https://api.github.com/repos/simbody/simbody/issues/164/comments", "events_url": "https://api.github.com/repos/simbody/simbody/issues/164/events", "html_url": "https://github.com/simbody/simbody/issues/164", "id": 35644694, "node_id": "MDU6SXNzdWUzNTY0NDY5NA==", "number": 164, "title": "Assembler says it failed but it actually succeeded", "user": {"login": "sherm1", "id": 4088016, "node_id": "MDQ6VXNlcjQwODgwMTY=", "avatar_url": "https://avatars.githubusercontent.com/u/4088016?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sherm1", "html_url": "https://github.com/sherm1", "followers_url": "https://api.github.com/users/sherm1/followers", "following_url": "https://api.github.com/users/sherm1/following{/other_user}", "gists_url": "https://api.github.com/users/sherm1/gists{/gist_id}", "starred_url": "https://api.github.com/users/sherm1/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sherm1/subscriptions", "organizations_url": "https://api.github.com/users/sherm1/orgs", "repos_url": "https://api.github.com/users/sherm1/repos", "events_url": "https://api.github.com/users/sherm1/events{/privacy}", "received_events_url": "https://api.github.com/users/sherm1/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 52267851, "node_id": "MDU6TGFiZWw1MjI2Nzg1MQ==", "url": "https://api.github.com/repos/simbody/simbody/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": {"login": "sherm1", "id": 4088016, "node_id": "MDQ6VXNlcjQwODgwMTY=", "avatar_url": "https://avatars.githubusercontent.com/u/4088016?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sherm1", "html_url": "https://github.com/sherm1", "followers_url": "https://api.github.com/users/sherm1/followers", "following_url": "https://api.github.com/users/sherm1/following{/other_user}", "gists_url": "https://api.github.com/users/sherm1/gists{/gist_id}", "starred_url": "https://api.github.com/users/sherm1/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sherm1/subscriptions", "organizations_url": "https://api.github.com/users/sherm1/orgs", "repos_url": "https://api.github.com/users/sherm1/repos", "events_url": "https://api.github.com/users/sherm1/events{/privacy}", "received_events_url": "https://api.github.com/users/sherm1/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "sherm1", "id": 4088016, "node_id": "MDQ6VXNlcjQwODgwMTY=", "avatar_url": "https://avatars.githubusercontent.com/u/4088016?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sherm1", "html_url": "https://github.com/sherm1", "followers_url": "https://api.github.com/users/sherm1/followers", "following_url": "https://api.github.com/users/sherm1/following{/other_user}", "gists_url": "https://api.github.com/users/sherm1/gists{/gist_id}", "starred_url": "https://api.github.com/users/sherm1/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sherm1/subscriptions", "organizations_url": "https://api.github.com/users/sherm1/orgs", "repos_url": "https://api.github.com/users/sherm1/repos", "events_url": "https://api.github.com/users/sherm1/events{/privacy}", "received_events_url": "https://api.github.com/users/sherm1/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 7, "created_at": "2014-06-13T05:03:31Z", "updated_at": "2014-06-17T23:20:21Z", "closed_at": "2014-06-17T23:20:21Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "@aymanhab reported that OpenSim users have been complaining about messages like this one:\n\n```\nSimTK Exception thrown at Assembler.cpp:843:\n17:   Method Assembler::assemble() failed because:\n17: Optimizer failed with message: SimTK Exception thrown at InteriorPointOptimizer.cpp:261:\n17:   Optimizer failed: Ipopt: Restoration failed (status -2)\n17: Assembly error tolerance achieved: 3.75553754761171e-12 required: 1e-10.\n```\n\nThe assembler says it failed, but the required tolerance was achieved.\n\nThe assembler should ignore IpOpt failures like this -- although IpOpt wasn't happy for some reason, we should be very happy that it found a good solution.\n\n@aseth1 and @chrisdembia may be interested also.\n", "reactions": {"url": "https://api.github.com/repos/simbody/simbody/issues/164/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/simbody/simbody/issues/164/timeline", "performed_via_github_app": null}, {"url": "https://api.github.com/repos/simbody/simbody/issues/167", "repository_url": "https://api.github.com/repos/simbody/simbody", "labels_url": "https://api.github.com/repos/simbody/simbody/issues/167/labels{/name}", "comments_url": "https://api.github.com/repos/simbody/simbody/issues/167/comments", "events_url": "https://api.github.com/repos/simbody/simbody/issues/167/events", "html_url": "https://github.com/simbody/simbody/issues/167", "id": 35941815, "node_id": "MDU6SXNzdWUzNTk0MTgxNQ==", "number": 167, "title": "Assembly makes an already-assembled system worse", "user": {"login": "sherm1", "id": 4088016, "node_id": "MDQ6VXNlcjQwODgwMTY=", "avatar_url": "https://avatars.githubusercontent.com/u/4088016?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sherm1", "html_url": "https://github.com/sherm1", "followers_url": "https://api.github.com/users/sherm1/followers", "following_url": "https://api.github.com/users/sherm1/following{/other_user}", "gists_url": "https://api.github.com/users/sherm1/gists{/gist_id}", "starred_url": "https://api.github.com/users/sherm1/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sherm1/subscriptions", "organizations_url": "https://api.github.com/users/sherm1/orgs", "repos_url": "https://api.github.com/users/sherm1/repos", "events_url": "https://api.github.com/users/sherm1/events{/privacy}", "received_events_url": "https://api.github.com/users/sherm1/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 52267851, "node_id": "MDU6TGFiZWw1MjI2Nzg1MQ==", "url": "https://api.github.com/repos/simbody/simbody/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}, {"id": 52759775, "node_id": "MDU6TGFiZWw1Mjc1OTc3NQ==", "url": "https://api.github.com/repos/simbody/simbody/labels/constraint", "name": "constraint", "color": "d4c5f9", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": {"login": "sherm1", "id": 4088016, "node_id": "MDQ6VXNlcjQwODgwMTY=", "avatar_url": "https://avatars.githubusercontent.com/u/4088016?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sherm1", "html_url": "https://github.com/sherm1", "followers_url": "https://api.github.com/users/sherm1/followers", "following_url": "https://api.github.com/users/sherm1/following{/other_user}", "gists_url": "https://api.github.com/users/sherm1/gists{/gist_id}", "starred_url": "https://api.github.com/users/sherm1/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sherm1/subscriptions", "organizations_url": "https://api.github.com/users/sherm1/orgs", "repos_url": "https://api.github.com/users/sherm1/repos", "events_url": "https://api.github.com/users/sherm1/events{/privacy}", "received_events_url": "https://api.github.com/users/sherm1/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "sherm1", "id": 4088016, "node_id": "MDQ6VXNlcjQwODgwMTY=", "avatar_url": "https://avatars.githubusercontent.com/u/4088016?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sherm1", "html_url": "https://github.com/sherm1", "followers_url": "https://api.github.com/users/sherm1/followers", "following_url": "https://api.github.com/users/sherm1/following{/other_user}", "gists_url": "https://api.github.com/users/sherm1/gists{/gist_id}", "starred_url": "https://api.github.com/users/sherm1/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sherm1/subscriptions", "organizations_url": "https://api.github.com/users/sherm1/orgs", "repos_url": "https://api.github.com/users/sherm1/repos", "events_url": "https://api.github.com/users/sherm1/events{/privacy}", "received_events_url": "https://api.github.com/users/sherm1/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 7, "created_at": "2014-06-17T23:26:03Z", "updated_at": "2014-06-19T20:37:36Z", "closed_at": "2014-06-19T20:37:36Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "@aseth1 complained that he started with a state that was very well assembled (err=1e-12 ish, cost=0), assembled it, and got a worse answer (something like err=1e-9 cost=1e-8, still within tolerance of 1e-7). \n\nAlthough perhaps logically defensible, this is unpleasant behavior and the assembler should follow the Hippocratic oath of \"do no harm\". \n\nNote: this may be tricky when there is a cost function. If the cost function is zero then it is clear that it can't be improved (the assembler's cost (goal) function is always nonnegative). However, if it is even the slightest bit non-zero, it is reasonable to loosen the constraints (staying within tolerance) if that can reduce the cost.\n", "reactions": {"url": "https://api.github.com/repos/simbody/simbody/issues/167/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/simbody/simbody/issues/167/timeline", "performed_via_github_app": null}, {"url": "https://api.github.com/repos/simbody/simbody/issues/171", "repository_url": "https://api.github.com/repos/simbody/simbody", "labels_url": "https://api.github.com/repos/simbody/simbody/issues/171/labels{/name}", "comments_url": "https://api.github.com/repos/simbody/simbody/issues/171/comments", "events_url": "https://api.github.com/repos/simbody/simbody/issues/171/events", "html_url": "https://github.com/simbody/simbody/issues/171", "id": 36128103, "node_id": "MDU6SXNzdWUzNjEyODEwMw==", "number": 171, "title": "Need a Ball joint damper for Gazebo", "user": {"login": "sherm1", "id": 4088016, "node_id": "MDQ6VXNlcjQwODgwMTY=", "avatar_url": "https://avatars.githubusercontent.com/u/4088016?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sherm1", "html_url": "https://github.com/sherm1", "followers_url": "https://api.github.com/users/sherm1/followers", "following_url": "https://api.github.com/users/sherm1/following{/other_user}", "gists_url": "https://api.github.com/users/sherm1/gists{/gist_id}", "starred_url": "https://api.github.com/users/sherm1/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sherm1/subscriptions", "organizations_url": "https://api.github.com/users/sherm1/orgs", "repos_url": "https://api.github.com/users/sherm1/repos", "events_url": "https://api.github.com/users/sherm1/events{/privacy}", "received_events_url": "https://api.github.com/users/sherm1/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 52267853, "node_id": "MDU6TGFiZWw1MjI2Nzg1Mw==", "url": "https://api.github.com/repos/simbody/simbody/labels/enhancement", "name": "enhancement", "color": "84b6eb", "default": true, "description": null}, {"id": 108217628, "node_id": "MDU6TGFiZWwxMDgyMTc2Mjg=", "url": "https://api.github.com/repos/simbody/simbody/labels/help%20wanted", "name": "help wanted", "color": "009800", "default": true, "description": null}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2014-06-19T23:18:59Z", "updated_at": "2014-06-19T23:18:59Z", "closed_at": null, "author_association": "MEMBER", "active_lock_reason": null, "body": "Gazebo provides an option to put a damper on any joint. That is easy to map to the existing simbody Force::MobilityLinearDamper for joints with axes. For a ball joint, we need a force element that operates on a Ball mobilizer using a single damping parameter to generate a torque that opposes the Ball joint's angular velocity.\n\nAlso, there should be a body-to-body version of this that takes body A and body B and generates a torque on each body that opposes their relative angular velocity. Actually the mobilizer version could just ask the mobilizer for the two bodies and then use the body-to-body damper. And that would work on any mobilizer; wouldn't have to be a Ball mobilizer.\n\nQ: do we even need the mobilizer version? Of can we just use the body-to-body one? Doesn't seem hard for the user to grab the parent and child bodies, and the same force element would work for a ball mobilizer or ball constraint.\n", "reactions": {"url": "https://api.github.com/repos/simbody/simbody/issues/171/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/simbody/simbody/issues/171/timeline", "performed_via_github_app": null}, {"url": "https://api.github.com/repos/simbody/simbody/issues/172", "repository_url": "https://api.github.com/repos/simbody/simbody", "labels_url": "https://api.github.com/repos/simbody/simbody/issues/172/labels{/name}", "comments_url": "https://api.github.com/repos/simbody/simbody/issues/172/comments", "events_url": "https://api.github.com/repos/simbody/simbody/issues/172/events", "html_url": "https://github.com/simbody/simbody/issues/172", "id": 36128285, "node_id": "MDU6SXNzdWUzNjEyODI4NQ==", "number": 172, "title": "Simbody User Guide has outdated installation instructions", "user": {"login": "sherm1", "id": 4088016, "node_id": "MDQ6VXNlcjQwODgwMTY=", "avatar_url": "https://avatars.githubusercontent.com/u/4088016?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sherm1", "html_url": "https://github.com/sherm1", "followers_url": "https://api.github.com/users/sherm1/followers", "following_url": "https://api.github.com/users/sherm1/following{/other_user}", "gists_url": "https://api.github.com/users/sherm1/gists{/gist_id}", "starred_url": "https://api.github.com/users/sherm1/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sherm1/subscriptions", "organizations_url": "https://api.github.com/users/sherm1/orgs", "repos_url": "https://api.github.com/users/sherm1/repos", "events_url": "https://api.github.com/users/sherm1/events{/privacy}", "received_events_url": "https://api.github.com/users/sherm1/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 52267851, "node_id": "MDU6TGFiZWw1MjI2Nzg1MQ==", "url": "https://api.github.com/repos/simbody/simbody/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}, {"id": 59408209, "node_id": "MDU6TGFiZWw1OTQwODIwOQ==", "url": "https://api.github.com/repos/simbody/simbody/labels/documentation", "name": "documentation", "color": "bfdadc", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2014-06-19T23:22:30Z", "updated_at": "2014-12-01T03:53:08Z", "closed_at": "2014-12-01T03:53:08Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "Since Chris reworked README.md to provide installation instructions, the User Guide should probably just refer to it. That way it won't get out of date again.\n\nCurrently it has detailed installation instructions that were correct some time in the remote past.\n", "reactions": {"url": "https://api.github.com/repos/simbody/simbody/issues/172/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/simbody/simbody/issues/172/timeline", "performed_via_github_app": null}, {"url": "https://api.github.com/repos/simbody/simbody/issues/173", "repository_url": "https://api.github.com/repos/simbody/simbody", "labels_url": "https://api.github.com/repos/simbody/simbody/issues/173/labels{/name}", "comments_url": "https://api.github.com/repos/simbody/simbody/issues/173/comments", "events_url": "https://api.github.com/repos/simbody/simbody/issues/173/events", "html_url": "https://github.com/simbody/simbody/issues/173", "id": 36210029, "node_id": "MDU6SXNzdWUzNjIxMDAyOQ==", "number": 173, "title": "regression test failing on Travis with clang 3.4", "user": {"login": "sherm1", "id": 4088016, "node_id": "MDQ6VXNlcjQwODgwMTY=", "avatar_url": "https://avatars.githubusercontent.com/u/4088016?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sherm1", "html_url": "https://github.com/sherm1", "followers_url": "https://api.github.com/users/sherm1/followers", "following_url": "https://api.github.com/users/sherm1/following{/other_user}", "gists_url": "https://api.github.com/users/sherm1/gists{/gist_id}", "starred_url": "https://api.github.com/users/sherm1/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sherm1/subscriptions", "organizations_url": "https://api.github.com/users/sherm1/orgs", "repos_url": "https://api.github.com/users/sherm1/repos", "events_url": "https://api.github.com/users/sherm1/events{/privacy}", "received_events_url": "https://api.github.com/users/sherm1/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 54361018, "node_id": "MDU6TGFiZWw1NDM2MTAxOA==", "url": "https://api.github.com/repos/simbody/simbody/labels/build", "name": "build", "color": "bfe5bf", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 10, "created_at": "2014-06-20T23:17:43Z", "updated_at": "2014-06-23T18:15:27Z", "closed_at": "2014-06-23T18:15:27Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "I recently renamed and slightly modified the Simbody regression test `GazeboReactionForceWithAppliedForceCompliant`. It is now failing on Travis for both of the clang 3.4 compilations (with or without std=c++11). It succeeds on both of the gcc builds, and on Windows, and on my Ubuntu 12.04 VM using clang 3.5.\n\nNow that we are getting test output on failure (thanks, @chrisdembia!), I can see that the clang runs are producing significantly wrong answers for this test. (The c++03 and 11 runs match each other though.) This isn't a matter of excessively-strict tolerances in the test; the answers are really quite different. This makes me suspect the clang compiler, and we already know there are some problems with clang 3.4.\n\nChris, do you think it would be possible and worthwhile to install clang 3.5 prior to the Travis build the way you did for gcc 4.8? \n\nP.S. Here is a link to one of the clang failures (job 349.2): \nhttps://travis-ci.org/simbody/simbody/jobs/28080454#L1390\n", "reactions": {"url": "https://api.github.com/repos/simbody/simbody/issues/173/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/simbody/simbody/issues/173/timeline", "performed_via_github_app": null}, {"url": "https://api.github.com/repos/simbody/simbody/issues/174", "repository_url": "https://api.github.com/repos/simbody/simbody", "labels_url": "https://api.github.com/repos/simbody/simbody/issues/174/labels{/name}", "comments_url": "https://api.github.com/repos/simbody/simbody/issues/174/comments", "events_url": "https://api.github.com/repos/simbody/simbody/issues/174/events", "html_url": "https://github.com/simbody/simbody/issues/174", "id": 36213472, "node_id": "MDU6SXNzdWUzNjIxMzQ3Mg==", "number": 174, "title": "Some ContactGeometry classes are missing calcSupportPoint() implementations", "user": {"login": "sherm1", "id": 4088016, "node_id": "MDQ6VXNlcjQwODgwMTY=", "avatar_url": "https://avatars.githubusercontent.com/u/4088016?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sherm1", "html_url": "https://github.com/sherm1", "followers_url": "https://api.github.com/users/sherm1/followers", "following_url": "https://api.github.com/users/sherm1/following{/other_user}", "gists_url": "https://api.github.com/users/sherm1/gists{/gist_id}", "starred_url": "https://api.github.com/users/sherm1/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sherm1/subscriptions", "organizations_url": "https://api.github.com/users/sherm1/orgs", "repos_url": "https://api.github.com/users/sherm1/repos", "events_url": "https://api.github.com/users/sherm1/events{/privacy}", "received_events_url": "https://api.github.com/users/sherm1/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 52267851, "node_id": "MDU6TGFiZWw1MjI2Nzg1MQ==", "url": "https://api.github.com/repos/simbody/simbody/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}, {"id": 62665552, "node_id": "MDU6TGFiZWw2MjY2NTU1Mg==", "url": "https://api.github.com/repos/simbody/simbody/labels/contact", "name": "contact", "color": "eb6420", "default": false, "description": null}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2014-06-21T01:11:48Z", "updated_at": "2014-06-21T01:34:25Z", "closed_at": null, "author_association": "MEMBER", "active_lock_reason": null, "body": "@hsu and @scpeters at OSRF were trying to make axis aligned bounding boxes around Simbody ContactGeometry objects, by calling calcSupportPoint() six times. They received the following message for one of the shapes:\n\n```\nterminate called after throwing an instance of\n'SimTK::Exception::UnimplementedVirtualMethod'\n  what():  SimTK Exception thrown at ContactGeometryImpl.h:105:\n  The base class ContactGeometryImpl dummy implementation of \n  method calcSupportPoint()() was invoked because a derived \n  class did not provide an implementation.\n```\n\nI'm not sure what the shape is but I see neither HalfSpace nor TriangleMesh implement calcSupportPoint(). \n\nAll the ContactGeometry objects should implement the method, even if they just do it by using the bounding sphere they already maintain. A tighter implementation could be added later if needed without requiring any changes to calling code.\n\nSee Gazebo PR: https://bitbucket.org/osrf/gazebo/pull-request/1119/add-code-to-set-simbodycollision/diff\n", "reactions": {"url": "https://api.github.com/repos/simbody/simbody/issues/174/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/simbody/simbody/issues/174/timeline", "performed_via_github_app": null}, {"url": "https://api.github.com/repos/simbody/simbody/issues/175", "repository_url": "https://api.github.com/repos/simbody/simbody", "labels_url": "https://api.github.com/repos/simbody/simbody/issues/175/labels{/name}", "comments_url": "https://api.github.com/repos/simbody/simbody/issues/175/comments", "events_url": "https://api.github.com/repos/simbody/simbody/issues/175/events", "html_url": "https://github.com/simbody/simbody/issues/175", "id": 36383258, "node_id": "MDU6SXNzdWUzNjM4MzI1OA==", "number": 175, "title": "Ipopt fails when running concurrently in multiple threads ", "user": {"login": "cpizzolato", "id": 7061843, "node_id": "MDQ6VXNlcjcwNjE4NDM=", "avatar_url": "https://avatars.githubusercontent.com/u/7061843?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cpizzolato", "html_url": "https://github.com/cpizzolato", "followers_url": "https://api.github.com/users/cpizzolato/followers", "following_url": "https://api.github.com/users/cpizzolato/following{/other_user}", "gists_url": "https://api.github.com/users/cpizzolato/gists{/gist_id}", "starred_url": "https://api.github.com/users/cpizzolato/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cpizzolato/subscriptions", "organizations_url": "https://api.github.com/users/cpizzolato/orgs", "repos_url": "https://api.github.com/users/cpizzolato/repos", "events_url": "https://api.github.com/users/cpizzolato/events{/privacy}", "received_events_url": "https://api.github.com/users/cpizzolato/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 52267851, "node_id": "MDU6TGFiZWw1MjI2Nzg1MQ==", "url": "https://api.github.com/repos/simbody/simbody/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2014-06-24T13:27:13Z", "updated_at": "2017-09-30T06:12:51Z", "closed_at": "2017-09-30T06:12:51Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "I've already posted this on the forum on SimTK, but then I realised it would make more sense here.\n\nI'm trying to run multiple instances of OpenSim::InverseKinematicsSolver on different threads, but Simbody throws the following error:\n\n```\n.*** Error in `./voslParallel': free(): invalid pointer: 0x00007fea108c98c0 ***\nAborted (core dumped)\n```\n\nchecking with GDB I get \n\n```\n.*** Error in `/home/ceinms/CEINMS/Builds/vosl/src/voslParallel': double free or corruption (out): 0x00007fffd88bf090 ***\n\nProgram received signal SIGABRT, Aborted.\n[Switching to Thread 0x7ffff0c0e700 (LWP 64447)]\n0x00007ffff4fc9f79 in __GI_raise (sig=sig@entry=6) at ../nptl/sysdeps/unix/sysv/linux/raise.c:56\n56   ../nptl/sysdeps/unix/sysv/linux/raise.c: No such file or directory.\n```\n\nbacktrace\n\n```\n(gdb) backtrace \n#0  0x00007ffff4fc9f79 in __GI_raise (sig=sig@entry=6) at ../nptl/sysdeps/unix/sysv/linux/raise.c:56\n#1  0x00007ffff4fcd388 in __GI_abort () at abort.c:89\n#2  0x00007ffff50071d4 in __libc_message (do_abort=do_abort@entry=1, fmt=fmt@entry=0x7ffff5115a10 \"*** Error in `%s': %s: 0x%s ***\\n\") at ../sysdeps/posix/libc_fatal.c:175\n#3  0x00007ffff50134ae in malloc_printerr (ptr=<optimized out>, str=0x7ffff5115b40 \"double free or corruption (out)\", action=1) at malloc.c:4996\n#4  _int_free (av=<optimized out>, p=<optimized out>, have_lock=0) at malloc.c:3840\n#5  0x00007ffff486a658 in Ipopt::LapackSolverInterface::Factorization(int const*, int const*, bool, int) () from /opt/OpenSim/lib/libSimTKmath.so.3.3\n#6  0x00007ffff486aada in Ipopt::LapackSolverInterface::MultiSolve(bool, int const*, int const*, int, double*, bool, int) () from /opt/OpenSim/lib/libSimTKmath.so.3.3\n#7  0x00007ffff4816c8b in Ipopt::TSymLinearSolver::MultiSolve(Ipopt::SymMatrix const&, std::vector<Ipopt::SmartPtr<Ipopt::Vector const>, std::allocator<Ipopt::SmartPtr<Ipopt::Vector const> > >&, std::vector<Ipopt::SmartPtr<Ipopt::Vector>, std::allocator<Ipopt::SmartPtr<Ipopt::Vector> > >&, bool, int) () from /opt/OpenSim/lib/libSimTKmath.so.3.3\n#8  0x00007ffff48991ee in Ipopt::StdAugSystemSolver::MultiSolve(Ipopt::SymMatrix const*, double, Ipopt::Vector const*, double, Ipopt::Vector const*, double, Ipopt::Matrix const*, Ipopt::Vector const*, double, Ipopt::Matrix const*, Ipopt::Vector const*, double, std::vector<Ipopt::SmartPtr<Ipopt::Vector const>, std::allocator<Ipopt::SmartPtr<Ipopt::Vector const> > >&, std::vector<Ipopt::SmartPtr<Ipopt::Vector const>, std::allocator<Ipopt::SmartPtr<Ipopt::Vector const> > >&, std::vector<Ipopt::SmartPtr<Ipopt::Vector const>, std::allocator<Ipopt::SmartPtr<Ipopt::Vector const> > >&, std::vector<Ipopt::SmartPtr<Ipopt::Vector const>, std::allocator<Ipopt::SmartPtr<Ipopt::Vector const> > >&, std::vector<Ipopt::SmartPtr<Ipopt::Vector>, std::allocator<Ipopt::SmartPtr<Ipopt::Vector> > >&, std::vector<Ipopt::SmartPtr<Ipopt::Vector>, std::allocator<Ipopt::SmartPtr<Ipopt::Vector> > >&, std::vector<Ipopt::SmartPtr<Ipopt::Vector>, std::allocator<Ipopt::SmartPtr<Ipopt::Vector> > >&, std::vector<Ipopt::SmartPtr<Ipopt::Vector>, std::allocator<Ipopt::SmartPtr<Ipopt::Vector> > >&, bool, int) () from /opt/OpenSim/lib/libSimTKmath.so.3.3\n#9  0x00007ffff489b36a in Ipopt::AugSystemSolver::Solve(Ipopt::SymMatrix const*, double, Ipopt::Vector const*, double, Ipopt::Vector const*, double, Ipopt::Matrix const*, Ipopt::Vector const*, double, Ipopt::Matrix const*, Ipopt::Vector const*, double, Ipopt::Vector const&, Ipopt::Vector const&, Ipopt::Vector const&, Ipopt::Vector const&, Ipopt::Vector&, Ipopt::Vector&, Ipopt::Vector&, Ipopt::Vector&, bool, int) () from /opt/OpenSim/lib/libSimTKmath.so.3.3\n#10 0x00007ffff492eeed in Ipopt::LowRankAugSystemSolver::Solve(Ipopt::SymMatrix const*, double, Ipopt::Vector const*, double, Ipopt::Vector const*, double, Ipopt::Matrix const*, Ipopt::Vector const*, double, Ipopt::Matrix const*, Ipopt::Vector const*, double, Ipopt::Vector const&, Ipopt::Vector const&, Ipopt::Vector const&, Ipopt::Vector const&, Ipopt::Vector&, Ipopt::Vector&, Ipopt::Vector&, Ipopt::Vector&, bool, int) () from /opt/OpenSim/lib/libSimTKmath.so.3.3\n#11 0x00007ffff4812180 in Ipopt::LeastSquareMultipliers::CalculateMultipliers(Ipopt::Vector&, Ipopt::Vector&) () from /opt/OpenSim/lib/libSimTKmath.so.3.3\n#12 0x00007ffff49030e4 in Ipopt::IpoptAlgorithm::AcceptTrialPoint() () from /opt/OpenSim/lib/libSimTKmath.so.3.3\n#13 0x00007ffff4903c9a in Ipopt::IpoptAlgorithm::Optimize() () from /opt/OpenSim/lib/libSimTKmath.so.3.3\n#14 0x00007ffff490f553 in Ipopt::IpoptApplication::call_optimize() () from /opt/OpenSim/lib/libSimTKmath.so.3.3\n#15 0x00007ffff4916c86 in Ipopt::IpoptApplication::OptimizeNLP(Ipopt::SmartPtr<Ipopt::NLP> const&, Ipopt::SmartPtr<Ipopt::AlgorithmBuilder>) ()\n   from /opt/OpenSim/lib/libSimTKmath.so.3.3\n#16 0x00007ffff491701d in Ipopt::IpoptApplication::OptimizeTNLP(Ipopt::SmartPtr<Ipopt::TNLP> const&) () from /opt/OpenSim/lib/libSimTKmath.so.3.3\n#17 0x00007ffff48a7896 in IpoptSolve () from /opt/OpenSim/lib/libSimTKmath.so.3.3\n#18 0x00007ffff49637ee in SimTK::InteriorPointOptimizer::optimize(SimTK::Vector_<double>&) () from /opt/OpenSim/lib/libSimTKmath.so.3.3\n#19 0x00007ffff6381dc0 in SimTK::Assembler::assemble() () from /opt/OpenSim/lib/libSimTKsimbody.so.3.3\n#20 0x00007ffff79401b6 in OpenSim::AssemblySolver::assemble(SimTK::State&) () from /opt/OpenSim/lib/libosimSimulation.so\n#21 0x000000000041dc1f in VOSL::IKSolverParallel::operator()() ()\n#22 0x00007ffff583ebf0 in ?? () from /usr/lib/x86_64-linux-gnu/libstdc++.so.6\n#23 0x00007ffff5361182 in start_thread (arg=0x7ffff0c0e700) at pthread_create.c:312\n#24 0x00007ffff508e30d in clone () at ../sysdeps/unix/sysv/linux/x86_64/clone.S:111\n```\n\nThe OS is Ubuntu Linux 14.04 x86-64, and I am using OpenSim 3.2, Simbody 3.3.1, compiled with g++4.8.2.\n\nI've checked for issues or changelog regarding Ipopt, but I haven't found anything related to this problem. Did anyone have a similar experience using multiple threads with Simbody? \n", "reactions": {"url": "https://api.github.com/repos/simbody/simbody/issues/175/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/simbody/simbody/issues/175/timeline", "performed_via_github_app": null}, {"url": "https://api.github.com/repos/simbody/simbody/issues/177", "repository_url": "https://api.github.com/repos/simbody/simbody", "labels_url": "https://api.github.com/repos/simbody/simbody/issues/177/labels{/name}", "comments_url": "https://api.github.com/repos/simbody/simbody/issues/177/comments", "events_url": "https://api.github.com/repos/simbody/simbody/issues/177/events", "html_url": "https://github.com/simbody/simbody/issues/177", "id": 36620725, "node_id": "MDU6SXNzdWUzNjYyMDcyNQ==", "number": 177, "title": "Lapack bug causes fatal DLASD4 \"parameter -1 had illegal value\" message", "user": {"login": "sherm1", "id": 4088016, "node_id": "MDQ6VXNlcjQwODgwMTY=", "avatar_url": "https://avatars.githubusercontent.com/u/4088016?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sherm1", "html_url": "https://github.com/sherm1", "followers_url": "https://api.github.com/users/sherm1/followers", "following_url": "https://api.github.com/users/sherm1/following{/other_user}", "gists_url": "https://api.github.com/users/sherm1/gists{/gist_id}", "starred_url": "https://api.github.com/users/sherm1/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sherm1/subscriptions", "organizations_url": "https://api.github.com/users/sherm1/orgs", "repos_url": "https://api.github.com/users/sherm1/repos", "events_url": "https://api.github.com/users/sherm1/events{/privacy}", "received_events_url": "https://api.github.com/users/sherm1/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 52267851, "node_id": "MDU6TGFiZWw1MjI2Nzg1MQ==", "url": "https://api.github.com/repos/simbody/simbody/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": {"login": "JustinSi", "id": 5614400, "node_id": "MDQ6VXNlcjU2MTQ0MDA=", "avatar_url": "https://avatars.githubusercontent.com/u/5614400?v=4", "gravatar_id": "", "url": "https://api.github.com/users/JustinSi", "html_url": "https://github.com/JustinSi", "followers_url": "https://api.github.com/users/JustinSi/followers", "following_url": "https://api.github.com/users/JustinSi/following{/other_user}", "gists_url": "https://api.github.com/users/JustinSi/gists{/gist_id}", "starred_url": "https://api.github.com/users/JustinSi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/JustinSi/subscriptions", "organizations_url": "https://api.github.com/users/JustinSi/orgs", "repos_url": "https://api.github.com/users/JustinSi/repos", "events_url": "https://api.github.com/users/JustinSi/events{/privacy}", "received_events_url": "https://api.github.com/users/JustinSi/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "JustinSi", "id": 5614400, "node_id": "MDQ6VXNlcjU2MTQ0MDA=", "avatar_url": "https://avatars.githubusercontent.com/u/5614400?v=4", "gravatar_id": "", "url": "https://api.github.com/users/JustinSi", "html_url": "https://github.com/JustinSi", "followers_url": "https://api.github.com/users/JustinSi/followers", "following_url": "https://api.github.com/users/JustinSi/following{/other_user}", "gists_url": "https://api.github.com/users/JustinSi/gists{/gist_id}", "starred_url": "https://api.github.com/users/JustinSi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/JustinSi/subscriptions", "organizations_url": "https://api.github.com/users/JustinSi/orgs", "repos_url": "https://api.github.com/users/JustinSi/repos", "events_url": "https://api.github.com/users/JustinSi/events{/privacy}", "received_events_url": "https://api.github.com/users/JustinSi/received_events", "type": "User", "site_admin": false}], "milestone": {"url": "https://api.github.com/repos/simbody/simbody/milestones/1", "html_url": "https://github.com/simbody/simbody/milestone/1", "labels_url": "https://api.github.com/repos/simbody/simbody/milestones/1/labels", "id": 910475, "node_id": "MDk6TWlsZXN0b25lOTEwNDc1", "number": 1, "title": "Simbody 4.0", "description": "This milestone collects Issues and Pull Requests that must be dealt with before Simbody 4.0 can be released. This is a prerequisite for OpenSim 4.0.", "creator": {"login": "sherm1", "id": 4088016, "node_id": "MDQ6VXNlcjQwODgwMTY=", "avatar_url": "https://avatars.githubusercontent.com/u/4088016?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sherm1", "html_url": "https://github.com/sherm1", "followers_url": "https://api.github.com/users/sherm1/followers", "following_url": "https://api.github.com/users/sherm1/following{/other_user}", "gists_url": "https://api.github.com/users/sherm1/gists{/gist_id}", "starred_url": "https://api.github.com/users/sherm1/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sherm1/subscriptions", "organizations_url": "https://api.github.com/users/sherm1/orgs", "repos_url": "https://api.github.com/users/sherm1/repos", "events_url": "https://api.github.com/users/sherm1/events{/privacy}", "received_events_url": "https://api.github.com/users/sherm1/received_events", "type": "User", "site_admin": false}, "open_issues": 12, "closed_issues": 13, "state": "open", "created_at": "2014-12-19T18:48:14Z", "updated_at": "2015-12-23T21:15:41Z", "due_on": "2015-06-01T07:00:00Z", "closed_at": null}, "comments": 4, "created_at": "2014-06-26T22:20:58Z", "updated_at": "2015-05-16T00:14:16Z", "closed_at": "2015-05-16T00:14:16Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "@JustinSi and other OpenSim users reported getting the message\n`On entry to DLASD4 parameter number -1 had an illegal value`\nwhile doing a static optimization using IpOpt. This message is reported by Lapack's XERBLA error reporter which then kills the executable.\n\nThis is due to a bug present in Lapack 3.4.2 (which ships with Simbody) and maybe later versions also. The bug is in DLASD8, which calls DLASD4 and then handles the INFO=1 error return incorrectly (see line 281 in the 3.4.2 version of DLASD8). That error indicates that DLASD4 failed to converge and should have been reported as an INFO=1 return to DLASD8's caller. It should _not_ have been passed to XERBLA.\n\nThis is unlikely to be the original source of the problem; it is just a bug in error handling. The SVD algorithm is a very reliable algorithm that works on very badly conditioned matrices. That makes me think there is something seriously wrong with the Matrix going in, like it contains a NaN. This might be IpOpt\u2019s fault or could be a problem with the objective or constraints returning bad values at some point during the optimization.\n\nUnless this has been fixed in a later version of Lapack, we will need to patch DLASD8 ourselves and build new 32 & 64 bit libraries. Justin, do you want to investigate to see if this has been fixed in Lapack 3.5 and if not build a new library? \n\ncc/ @aseth1, @aymanhab\n", "reactions": {"url": "https://api.github.com/repos/simbody/simbody/issues/177/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/simbody/simbody/issues/177/timeline", "performed_via_github_app": null}, {"url": "https://api.github.com/repos/simbody/simbody/issues/178", "repository_url": "https://api.github.com/repos/simbody/simbody", "labels_url": "https://api.github.com/repos/simbody/simbody/issues/178/labels{/name}", "comments_url": "https://api.github.com/repos/simbody/simbody/issues/178/comments", "events_url": "https://api.github.com/repos/simbody/simbody/issues/178/events", "html_url": "https://github.com/simbody/simbody/issues/178", "id": 36708819, "node_id": "MDU6SXNzdWUzNjcwODgxOQ==", "number": 178, "title": "Get rid of Ancestor bodies for constraint calculations", "user": {"login": "sherm1", "id": 4088016, "node_id": "MDQ6VXNlcjQwODgwMTY=", "avatar_url": "https://avatars.githubusercontent.com/u/4088016?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sherm1", "html_url": "https://github.com/sherm1", "followers_url": "https://api.github.com/users/sherm1/followers", "following_url": "https://api.github.com/users/sherm1/following{/other_user}", "gists_url": "https://api.github.com/users/sherm1/gists{/gist_id}", "starred_url": "https://api.github.com/users/sherm1/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sherm1/subscriptions", "organizations_url": "https://api.github.com/users/sherm1/orgs", "repos_url": "https://api.github.com/users/sherm1/repos", "events_url": "https://api.github.com/users/sherm1/events{/privacy}", "received_events_url": "https://api.github.com/users/sherm1/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 52759775, "node_id": "MDU6TGFiZWw1Mjc1OTc3NQ==", "url": "https://api.github.com/repos/simbody/simbody/labels/constraint", "name": "constraint", "color": "d4c5f9", "default": false, "description": null}, {"id": 110136914, "node_id": "MDU6TGFiZWwxMTAxMzY5MTQ=", "url": "https://api.github.com/repos/simbody/simbody/labels/speed", "name": "speed", "color": "f7c6c7", "default": false, "description": null}], "state": "open", "locked": false, "assignee": {"login": "sherm1", "id": 4088016, "node_id": "MDQ6VXNlcjQwODgwMTY=", "avatar_url": "https://avatars.githubusercontent.com/u/4088016?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sherm1", "html_url": "https://github.com/sherm1", "followers_url": "https://api.github.com/users/sherm1/followers", "following_url": "https://api.github.com/users/sherm1/following{/other_user}", "gists_url": "https://api.github.com/users/sherm1/gists{/gist_id}", "starred_url": "https://api.github.com/users/sherm1/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sherm1/subscriptions", "organizations_url": "https://api.github.com/users/sherm1/orgs", "repos_url": "https://api.github.com/users/sherm1/repos", "events_url": "https://api.github.com/users/sherm1/events{/privacy}", "received_events_url": "https://api.github.com/users/sherm1/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "sherm1", "id": 4088016, "node_id": "MDQ6VXNlcjQwODgwMTY=", "avatar_url": "https://avatars.githubusercontent.com/u/4088016?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sherm1", "html_url": "https://github.com/sherm1", "followers_url": "https://api.github.com/users/sherm1/followers", "following_url": "https://api.github.com/users/sherm1/following{/other_user}", "gists_url": "https://api.github.com/users/sherm1/gists{/gist_id}", "starred_url": "https://api.github.com/users/sherm1/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sherm1/subscriptions", "organizations_url": "https://api.github.com/users/sherm1/orgs", "repos_url": "https://api.github.com/users/sherm1/repos", "events_url": "https://api.github.com/users/sherm1/events{/privacy}", "received_events_url": "https://api.github.com/users/sherm1/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 0, "created_at": "2014-06-27T22:24:48Z", "updated_at": "2014-07-07T19:10:26Z", "closed_at": null, "author_association": "MEMBER", "active_lock_reason": null, "body": "Constraints act on a subset of bodies. Tracing each of those bodies through its parent along the path towards Ground (G), the first body that is present on all the paths is called the \"Ancestor\" (A) body for that constraint. A might turn out to be G, but often it is another body. \n\nCurrently all constraint calculations are done relative to A. The idea was to minimize roundoff error for small topological loops that are far from G in the tree. When A!=G, this requires computing new Transforms for A and each of the constrained bodies. That is an expensive operation (I've profiled it) and I now think it was not necessary. The code would be simpler and faster if the calculations were simply performed in G.\n\nSo the tasks here are\n- [ ] Make Ground the ancestor for all constraints for purposes of calculation.\n- [ ] Eliminate all the dead code associated with A!=G, including the specialized methods in `ConstraintImpl` and the cache entries holding the A-relative computations.\n- [ ] Continue to determine A for each constraint for purposes of sparse calculations; none of the mobilities between G and A can affect the constraint errors.\n- [ ] Verify speedup.\n- [ ] Test carefully.\n\nThis should not require any changes to the Constraint implementations. Although those are written relative to A, they don't know which body that is and should work fine if A==G.\n", "reactions": {"url": "https://api.github.com/repos/simbody/simbody/issues/178/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/simbody/simbody/issues/178/timeline", "performed_via_github_app": null}, {"url": "https://api.github.com/repos/simbody/simbody/issues/179", "repository_url": "https://api.github.com/repos/simbody/simbody", "labels_url": "https://api.github.com/repos/simbody/simbody/issues/179/labels{/name}", "comments_url": "https://api.github.com/repos/simbody/simbody/issues/179/comments", "events_url": "https://api.github.com/repos/simbody/simbody/issues/179/events", "html_url": "https://github.com/simbody/simbody/issues/179", "id": 36710471, "node_id": "MDU6SXNzdWUzNjcxMDQ3MQ==", "number": 179, "title": "Allow designation of position and velocity constraints as \"linear\"", "user": {"login": "sherm1", "id": 4088016, "node_id": "MDQ6VXNlcjQwODgwMTY=", "avatar_url": "https://avatars.githubusercontent.com/u/4088016?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sherm1", "html_url": "https://github.com/sherm1", "followers_url": "https://api.github.com/users/sherm1/followers", "following_url": "https://api.github.com/users/sherm1/following{/other_user}", "gists_url": "https://api.github.com/users/sherm1/gists{/gist_id}", "starred_url": "https://api.github.com/users/sherm1/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sherm1/subscriptions", "organizations_url": "https://api.github.com/users/sherm1/orgs", "repos_url": "https://api.github.com/users/sherm1/repos", "events_url": "https://api.github.com/users/sherm1/events{/privacy}", "received_events_url": "https://api.github.com/users/sherm1/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 52267853, "node_id": "MDU6TGFiZWw1MjI2Nzg1Mw==", "url": "https://api.github.com/repos/simbody/simbody/labels/enhancement", "name": "enhancement", "color": "84b6eb", "default": true, "description": null}, {"id": 52759775, "node_id": "MDU6TGFiZWw1Mjc1OTc3NQ==", "url": "https://api.github.com/repos/simbody/simbody/labels/constraint", "name": "constraint", "color": "d4c5f9", "default": false, "description": null}, {"id": 62665552, "node_id": "MDU6TGFiZWw2MjY2NTU1Mg==", "url": "https://api.github.com/repos/simbody/simbody/labels/contact", "name": "contact", "color": "eb6420", "default": false, "description": null}, {"id": 110136914, "node_id": "MDU6TGFiZWwxMTAxMzY5MTQ=", "url": "https://api.github.com/repos/simbody/simbody/labels/speed", "name": "speed", "color": "f7c6c7", "default": false, "description": null}], "state": "open", "locked": false, "assignee": {"login": "sherm1", "id": 4088016, "node_id": "MDQ6VXNlcjQwODgwMTY=", "avatar_url": "https://avatars.githubusercontent.com/u/4088016?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sherm1", "html_url": "https://github.com/sherm1", "followers_url": "https://api.github.com/users/sherm1/followers", "following_url": "https://api.github.com/users/sherm1/following{/other_user}", "gists_url": "https://api.github.com/users/sherm1/gists{/gist_id}", "starred_url": "https://api.github.com/users/sherm1/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sherm1/subscriptions", "organizations_url": "https://api.github.com/users/sherm1/orgs", "repos_url": "https://api.github.com/users/sherm1/repos", "events_url": "https://api.github.com/users/sherm1/events{/privacy}", "received_events_url": "https://api.github.com/users/sherm1/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "sherm1", "id": 4088016, "node_id": "MDQ6VXNlcjQwODgwMTY=", "avatar_url": "https://avatars.githubusercontent.com/u/4088016?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sherm1", "html_url": "https://github.com/sherm1", "followers_url": "https://api.github.com/users/sherm1/followers", "following_url": "https://api.github.com/users/sherm1/following{/other_user}", "gists_url": "https://api.github.com/users/sherm1/gists{/gist_id}", "starred_url": "https://api.github.com/users/sherm1/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sherm1/subscriptions", "organizations_url": "https://api.github.com/users/sherm1/orgs", "repos_url": "https://api.github.com/users/sherm1/repos", "events_url": "https://api.github.com/users/sherm1/events{/privacy}", "received_events_url": "https://api.github.com/users/sherm1/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 0, "created_at": "2014-06-27T22:59:17Z", "updated_at": "2014-07-07T19:09:59Z", "closed_at": null, "author_association": "MEMBER", "active_lock_reason": null, "body": "Simbody allows position (holonomic) and velocity (nonholonomic) constraints to be nonlinear, and assumes that they are. It is common for velocity constraints to be linear (friction is a common example), however, and we could improve performance for linear ones if we knew. Some position constraints are also linear (mobility couplers, for example) but that is much less likely and it is less clear how to exploit them.\n\nThe primary performance improvement here is to use the velocity-level constraint error method to effect multiplication by the constraint Jacobian G when the constraint is linear, rather than using the much more expensive acceleration-level constraint error method. I have profiled constraint-heavy simulations and they spend a _lot_ of their time in acceleration-level error methods calculating G*v when they could be using the velocity-level methods at a fraction of the cost.\n\nThere are several tasks here:\n- [ ] Add a Constraint API allowing designation of velocity constraints as linear. It is fine to require that _all_ the velocity constraint equations generated by a given `Constraint` must be linear if they are marked so.\n- [ ] Assuming it is easy, also allow designation of position constraints as linear.\n- [ ] Modify the code that multiplies by the constraint Jacobian G to take advantage of linear velocity constraints. Look for variants of that code in case it occurs more than once.\n- [ ] Verify the performance gain.\n- [ ] Test to make sure no answers have changed.\n", "reactions": {"url": "https://api.github.com/repos/simbody/simbody/issues/179/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/simbody/simbody/issues/179/timeline", "performed_via_github_app": null}, {"url": "https://api.github.com/repos/simbody/simbody/issues/181", "repository_url": "https://api.github.com/repos/simbody/simbody", "labels_url": "https://api.github.com/repos/simbody/simbody/issues/181/labels{/name}", "comments_url": "https://api.github.com/repos/simbody/simbody/issues/181/comments", "events_url": "https://api.github.com/repos/simbody/simbody/issues/181/events", "html_url": "https://github.com/simbody/simbody/issues/181", "id": 37037079, "node_id": "MDU6SXNzdWUzNzAzNzA3OQ==", "number": 181, "title": "In Xcode lots of Simbody warnings occur", "user": {"login": "sherm1", "id": 4088016, "node_id": "MDQ6VXNlcjQwODgwMTY=", "avatar_url": "https://avatars.githubusercontent.com/u/4088016?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sherm1", "html_url": "https://github.com/sherm1", "followers_url": "https://api.github.com/users/sherm1/followers", "following_url": "https://api.github.com/users/sherm1/following{/other_user}", "gists_url": "https://api.github.com/users/sherm1/gists{/gist_id}", "starred_url": "https://api.github.com/users/sherm1/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sherm1/subscriptions", "organizations_url": "https://api.github.com/users/sherm1/orgs", "repos_url": "https://api.github.com/users/sherm1/repos", "events_url": "https://api.github.com/users/sherm1/events{/privacy}", "received_events_url": "https://api.github.com/users/sherm1/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 54361018, "node_id": "MDU6TGFiZWw1NDM2MTAxOA==", "url": "https://api.github.com/repos/simbody/simbody/labels/build", "name": "build", "color": "bfe5bf", "default": false, "description": null}, {"id": 108217628, "node_id": "MDU6TGFiZWwxMDgyMTc2Mjg=", "url": "https://api.github.com/repos/simbody/simbody/labels/help%20wanted", "name": "help wanted", "color": "009800", "default": true, "description": null}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 10, "created_at": "2014-07-03T00:22:21Z", "updated_at": "2014-07-29T19:01:22Z", "closed_at": null, "author_association": "MEMBER", "active_lock_reason": null, "body": "Xcode defaults to `-Wmost` which reveals lots of warnings that we hadn't noticed earlier. Most of them are unused variables. These should be fixed.\n\nSome of these are actually used in Debug builds, but not in Release, so fixing them may require making the declarations conditional using \n\n```\n#ifndef NDEBUG\n// Debug-only declarations go here\n#endif\n```\n\nIn the case of warnings about unused formal parameters in methods, the warning can be eliminated by listing only the argument type without a name. However, for methods in the API that may ruin the doxygen documentation, so be sure to check for that consequence. I think the quality of the doxygen is more important, but try to figure out a way to avoid the warning while keeping the nice docs.\n", "reactions": {"url": "https://api.github.com/repos/simbody/simbody/issues/181/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/simbody/simbody/issues/181/timeline", "performed_via_github_app": null}, {"url": "https://api.github.com/repos/simbody/simbody/issues/183", "repository_url": "https://api.github.com/repos/simbody/simbody", "labels_url": "https://api.github.com/repos/simbody/simbody/issues/183/labels{/name}", "comments_url": "https://api.github.com/repos/simbody/simbody/issues/183/comments", "events_url": "https://api.github.com/repos/simbody/simbody/issues/183/events", "html_url": "https://github.com/simbody/simbody/issues/183", "id": 37293321, "node_id": "MDU6SXNzdWUzNzI5MzMyMQ==", "number": 183, "title": "Rotation class documentation needs improvement", "user": {"login": "sherm1", "id": 4088016, "node_id": "MDQ6VXNlcjQwODgwMTY=", "avatar_url": "https://avatars.githubusercontent.com/u/4088016?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sherm1", "html_url": "https://github.com/sherm1", "followers_url": "https://api.github.com/users/sherm1/followers", "following_url": "https://api.github.com/users/sherm1/following{/other_user}", "gists_url": "https://api.github.com/users/sherm1/gists{/gist_id}", "starred_url": "https://api.github.com/users/sherm1/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sherm1/subscriptions", "organizations_url": "https://api.github.com/users/sherm1/orgs", "repos_url": "https://api.github.com/users/sherm1/repos", "events_url": "https://api.github.com/users/sherm1/events{/privacy}", "received_events_url": "https://api.github.com/users/sherm1/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 59408209, "node_id": "MDU6TGFiZWw1OTQwODIwOQ==", "url": "https://api.github.com/repos/simbody/simbody/labels/documentation", "name": "documentation", "color": "bfdadc", "default": true, "description": null}, {"id": 108217628, "node_id": "MDU6TGFiZWwxMDgyMTc2Mjg=", "url": "https://api.github.com/repos/simbody/simbody/labels/help%20wanted", "name": "help wanted", "color": "009800", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2014-07-07T17:57:58Z", "updated_at": "2014-11-10T21:12:43Z", "closed_at": "2014-11-10T21:12:43Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "The `Rotation` class has a large number of useful methods but the Doxygen documentation is not well-organized. The methods need to be grouped sensibly using Doxygen's `@name` grouping feature. I see that some grouping was attempted (since there are `@{` and `@}` markers in `Rotation.h` but these currently have no effect since the required `@name` group headings are missing.\n", "reactions": {"url": "https://api.github.com/repos/simbody/simbody/issues/183/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/simbody/simbody/issues/183/timeline", "performed_via_github_app": null}, {"url": "https://api.github.com/repos/simbody/simbody/issues/184", "repository_url": "https://api.github.com/repos/simbody/simbody", "labels_url": "https://api.github.com/repos/simbody/simbody/issues/184/labels{/name}", "comments_url": "https://api.github.com/repos/simbody/simbody/issues/184/comments", "events_url": "https://api.github.com/repos/simbody/simbody/issues/184/events", "html_url": "https://github.com/simbody/simbody/issues/184", "id": 37296972, "node_id": "MDU6SXNzdWUzNzI5Njk3Mg==", "number": 184, "title": "string property parsing", "user": {"login": "JustinSi", "id": 5614400, "node_id": "MDQ6VXNlcjU2MTQ0MDA=", "avatar_url": "https://avatars.githubusercontent.com/u/5614400?v=4", "gravatar_id": "", "url": "https://api.github.com/users/JustinSi", "html_url": "https://github.com/JustinSi", "followers_url": "https://api.github.com/users/JustinSi/followers", "following_url": "https://api.github.com/users/JustinSi/following{/other_user}", "gists_url": "https://api.github.com/users/JustinSi/gists{/gist_id}", "starred_url": "https://api.github.com/users/JustinSi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/JustinSi/subscriptions", "organizations_url": "https://api.github.com/users/JustinSi/orgs", "repos_url": "https://api.github.com/users/JustinSi/repos", "events_url": "https://api.github.com/users/JustinSi/events{/privacy}", "received_events_url": "https://api.github.com/users/JustinSi/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2014-07-07T18:36:25Z", "updated_at": "2014-07-07T18:46:06Z", "closed_at": "2014-07-07T18:46:06Z", "author_association": "NONE", "active_lock_reason": null, "body": " A string-valued Property is currently always parsed as though it were a blank-separated list. So when the Property value list is only allowed to have 1 element, it stops at the first space.  \n\n Actually what we generally expect is that the Property parser should ignore whitespace and just treat the whole property value as a single string. \n\nWe should also distinguish the Property value \"list of strings\" from the case \"one string containing spaces\".\n", "reactions": {"url": "https://api.github.com/repos/simbody/simbody/issues/184/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/simbody/simbody/issues/184/timeline", "performed_via_github_app": null}, {"url": "https://api.github.com/repos/simbody/simbody/issues/185", "repository_url": "https://api.github.com/repos/simbody/simbody", "labels_url": "https://api.github.com/repos/simbody/simbody/issues/185/labels{/name}", "comments_url": "https://api.github.com/repos/simbody/simbody/issues/185/comments", "events_url": "https://api.github.com/repos/simbody/simbody/issues/185/events", "html_url": "https://github.com/simbody/simbody/issues/185", "id": 37300008, "node_id": "MDU6SXNzdWUzNzMwMDAwOA==", "number": 185, "title": "Need separate PositionKinematics and VelocityKinematics stages", "user": {"login": "sherm1", "id": 4088016, "node_id": "MDQ6VXNlcjQwODgwMTY=", "avatar_url": "https://avatars.githubusercontent.com/u/4088016?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sherm1", "html_url": "https://github.com/sherm1", "followers_url": "https://api.github.com/users/sherm1/followers", "following_url": "https://api.github.com/users/sherm1/following{/other_user}", "gists_url": "https://api.github.com/users/sherm1/gists{/gist_id}", "starred_url": "https://api.github.com/users/sherm1/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sherm1/subscriptions", "organizations_url": "https://api.github.com/users/sherm1/orgs", "repos_url": "https://api.github.com/users/sherm1/repos", "events_url": "https://api.github.com/users/sherm1/events{/privacy}", "received_events_url": "https://api.github.com/users/sherm1/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 52267853, "node_id": "MDU6TGFiZWw1MjI2Nzg1Mw==", "url": "https://api.github.com/repos/simbody/simbody/labels/enhancement", "name": "enhancement", "color": "84b6eb", "default": true, "description": null}, {"id": 52759775, "node_id": "MDU6TGFiZWw1Mjc1OTc3NQ==", "url": "https://api.github.com/repos/simbody/simbody/labels/constraint", "name": "constraint", "color": "d4c5f9", "default": false, "description": null}, {"id": 57297924, "node_id": "MDU6TGFiZWw1NzI5NzkyNA==", "url": "https://api.github.com/repos/simbody/simbody/labels/state", "name": "state", "color": "fbca04", "default": false, "description": null}, {"id": 62665552, "node_id": "MDU6TGFiZWw2MjY2NTU1Mg==", "url": "https://api.github.com/repos/simbody/simbody/labels/contact", "name": "contact", "color": "eb6420", "default": false, "description": null}, {"id": 110136914, "node_id": "MDU6TGFiZWwxMTAxMzY5MTQ=", "url": "https://api.github.com/repos/simbody/simbody/labels/speed", "name": "speed", "color": "f7c6c7", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": {"login": "sherm1", "id": 4088016, "node_id": "MDQ6VXNlcjQwODgwMTY=", "avatar_url": "https://avatars.githubusercontent.com/u/4088016?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sherm1", "html_url": "https://github.com/sherm1", "followers_url": "https://api.github.com/users/sherm1/followers", "following_url": "https://api.github.com/users/sherm1/following{/other_user}", "gists_url": "https://api.github.com/users/sherm1/gists{/gist_id}", "starred_url": "https://api.github.com/users/sherm1/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sherm1/subscriptions", "organizations_url": "https://api.github.com/users/sherm1/orgs", "repos_url": "https://api.github.com/users/sherm1/repos", "events_url": "https://api.github.com/users/sherm1/events{/privacy}", "received_events_url": "https://api.github.com/users/sherm1/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "sherm1", "id": 4088016, "node_id": "MDQ6VXNlcjQwODgwMTY=", "avatar_url": "https://avatars.githubusercontent.com/u/4088016?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sherm1", "html_url": "https://github.com/sherm1", "followers_url": "https://api.github.com/users/sherm1/followers", "following_url": "https://api.github.com/users/sherm1/following{/other_user}", "gists_url": "https://api.github.com/users/sherm1/gists{/gist_id}", "starred_url": "https://api.github.com/users/sherm1/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sherm1/subscriptions", "organizations_url": "https://api.github.com/users/sherm1/orgs", "repos_url": "https://api.github.com/users/sherm1/repos", "events_url": "https://api.github.com/users/sherm1/events{/privacy}", "received_events_url": "https://api.github.com/users/sherm1/received_events", "type": "User", "site_admin": false}], "milestone": {"url": "https://api.github.com/repos/simbody/simbody/milestones/1", "html_url": "https://github.com/simbody/simbody/milestone/1", "labels_url": "https://api.github.com/repos/simbody/simbody/milestones/1/labels", "id": 910475, "node_id": "MDk6TWlsZXN0b25lOTEwNDc1", "number": 1, "title": "Simbody 4.0", "description": "This milestone collects Issues and Pull Requests that must be dealt with before Simbody 4.0 can be released. This is a prerequisite for OpenSim 4.0.", "creator": {"login": "sherm1", "id": 4088016, "node_id": "MDQ6VXNlcjQwODgwMTY=", "avatar_url": "https://avatars.githubusercontent.com/u/4088016?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sherm1", "html_url": "https://github.com/sherm1", "followers_url": "https://api.github.com/users/sherm1/followers", "following_url": "https://api.github.com/users/sherm1/following{/other_user}", "gists_url": "https://api.github.com/users/sherm1/gists{/gist_id}", "starred_url": "https://api.github.com/users/sherm1/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sherm1/subscriptions", "organizations_url": "https://api.github.com/users/sherm1/orgs", "repos_url": "https://api.github.com/users/sherm1/repos", "events_url": "https://api.github.com/users/sherm1/events{/privacy}", "received_events_url": "https://api.github.com/users/sherm1/received_events", "type": "User", "site_admin": false}, "open_issues": 12, "closed_issues": 13, "state": "open", "created_at": "2014-12-19T18:48:14Z", "updated_at": "2015-12-23T21:15:41Z", "due_on": "2015-06-01T07:00:00Z", "closed_at": null}, "comments": 0, "created_at": "2014-07-07T19:08:48Z", "updated_at": "2015-08-25T00:31:53Z", "closed_at": "2015-08-25T00:31:52Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "Currently Simbody's computation `Stage` granularity lumps all position-dependent quantities together in `Stage::Position`, and all velocity-dependent quantities together in `Stage::Velocity`. It would be useful to separate out the kinematic quantities because they are dependent only on generalized coordinates q (position kinematics) and generalized speeds u (velocity kinematics). They do not depend on time or the presence or absence of `Constraint`s or `Motion`s, and hence the calculations should not be invalidated when time advances or when constraints are added or removed. On the other hand, other Position-level quantities like constraint & motion errors and witness functions can depend on time also.\n\nThis will provide a significant speedup when using a semi-explicit or semi-implicit method where time and velocities are updated prior to updating positions. Currently the time update invalidates the position kinematics unnecessarily. This will also permit efficient changes to the set of constraints.\n\nOne tricky consequence of this change is that it breaks the strict ordering of stages if `Stage::Time` is left where it is. It may be better to think of time as a special case so that later-stage cache entries can say whether they are invalidated by time changes without imposing a strict ordering.\n\nSee also issue #188; these need to be addressed together.\n", "reactions": {"url": "https://api.github.com/repos/simbody/simbody/issues/185/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/simbody/simbody/issues/185/timeline", "performed_via_github_app": null}, {"url": "https://api.github.com/repos/simbody/simbody/issues/186", "repository_url": "https://api.github.com/repos/simbody/simbody", "labels_url": "https://api.github.com/repos/simbody/simbody/issues/186/labels{/name}", "comments_url": "https://api.github.com/repos/simbody/simbody/issues/186/comments", "events_url": "https://api.github.com/repos/simbody/simbody/issues/186/events", "html_url": "https://github.com/simbody/simbody/issues/186", "id": 37396712, "node_id": "MDU6SXNzdWUzNzM5NjcxMg==", "number": 186, "title": "Xcode is not getting the right flags from CMake", "user": {"login": "sherm1", "id": 4088016, "node_id": "MDQ6VXNlcjQwODgwMTY=", "avatar_url": "https://avatars.githubusercontent.com/u/4088016?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sherm1", "html_url": "https://github.com/sherm1", "followers_url": "https://api.github.com/users/sherm1/followers", "following_url": "https://api.github.com/users/sherm1/following{/other_user}", "gists_url": "https://api.github.com/users/sherm1/gists{/gist_id}", "starred_url": "https://api.github.com/users/sherm1/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sherm1/subscriptions", "organizations_url": "https://api.github.com/users/sherm1/orgs", "repos_url": "https://api.github.com/users/sherm1/repos", "events_url": "https://api.github.com/users/sherm1/events{/privacy}", "received_events_url": "https://api.github.com/users/sherm1/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 52267853, "node_id": "MDU6TGFiZWw1MjI2Nzg1Mw==", "url": "https://api.github.com/repos/simbody/simbody/labels/enhancement", "name": "enhancement", "color": "84b6eb", "default": true, "description": null}, {"id": 54361018, "node_id": "MDU6TGFiZWw1NDM2MTAxOA==", "url": "https://api.github.com/repos/simbody/simbody/labels/build", "name": "build", "color": "bfe5bf", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": {"login": "apoorvar", "id": 7460161, "node_id": "MDQ6VXNlcjc0NjAxNjE=", "avatar_url": "https://avatars.githubusercontent.com/u/7460161?v=4", "gravatar_id": "", "url": "https://api.github.com/users/apoorvar", "html_url": "https://github.com/apoorvar", "followers_url": "https://api.github.com/users/apoorvar/followers", "following_url": "https://api.github.com/users/apoorvar/following{/other_user}", "gists_url": "https://api.github.com/users/apoorvar/gists{/gist_id}", "starred_url": "https://api.github.com/users/apoorvar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/apoorvar/subscriptions", "organizations_url": "https://api.github.com/users/apoorvar/orgs", "repos_url": "https://api.github.com/users/apoorvar/repos", "events_url": "https://api.github.com/users/apoorvar/events{/privacy}", "received_events_url": "https://api.github.com/users/apoorvar/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "apoorvar", "id": 7460161, "node_id": "MDQ6VXNlcjc0NjAxNjE=", "avatar_url": "https://avatars.githubusercontent.com/u/7460161?v=4", "gravatar_id": "", "url": "https://api.github.com/users/apoorvar", "html_url": "https://github.com/apoorvar", "followers_url": "https://api.github.com/users/apoorvar/followers", "following_url": "https://api.github.com/users/apoorvar/following{/other_user}", "gists_url": "https://api.github.com/users/apoorvar/gists{/gist_id}", "starred_url": "https://api.github.com/users/apoorvar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/apoorvar/subscriptions", "organizations_url": "https://api.github.com/users/apoorvar/orgs", "repos_url": "https://api.github.com/users/apoorvar/repos", "events_url": "https://api.github.com/users/apoorvar/events{/privacy}", "received_events_url": "https://api.github.com/users/apoorvar/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 9, "created_at": "2014-07-08T18:04:06Z", "updated_at": "2014-07-16T03:31:35Z", "closed_at": "2014-07-16T03:31:35Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "Currently it is possible to use Simbody's CMake set up to generate an Xcode project that will successfully build (tested on OSX 10.8/9 and Xcode 5.0/5.1). However, there are some things wrong with the resulting Xcode project. It doesn't pick up the debug and optimization flags that are set in `CMakeLists.txt`.\n\nWe need to figure out the right CMake incantations to get the flags passed through, and to facilitation switching among Debug/Release/RelWithDebInfo configurations withing Xcode. Apoorva volunteered!\n\nSee also opensim-org/opensim-core#91.\n", "reactions": {"url": "https://api.github.com/repos/simbody/simbody/issues/186/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/simbody/simbody/issues/186/timeline", "performed_via_github_app": null}, {"url": "https://api.github.com/repos/simbody/simbody/issues/187", "repository_url": "https://api.github.com/repos/simbody/simbody", "labels_url": "https://api.github.com/repos/simbody/simbody/issues/187/labels{/name}", "comments_url": "https://api.github.com/repos/simbody/simbody/issues/187/comments", "events_url": "https://api.github.com/repos/simbody/simbody/issues/187/events", "html_url": "https://github.com/simbody/simbody/issues/187", "id": 37402566, "node_id": "MDU6SXNzdWUzNzQwMjU2Ng==", "number": 187, "title": "reserved identifier violation", "user": {"login": "elfring", "id": 660477, "node_id": "MDQ6VXNlcjY2MDQ3Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/660477?v=4", "gravatar_id": "", "url": "https://api.github.com/users/elfring", "html_url": "https://github.com/elfring", "followers_url": "https://api.github.com/users/elfring/followers", "following_url": "https://api.github.com/users/elfring/following{/other_user}", "gists_url": "https://api.github.com/users/elfring/gists{/gist_id}", "starred_url": "https://api.github.com/users/elfring/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/elfring/subscriptions", "organizations_url": "https://api.github.com/users/elfring/orgs", "repos_url": "https://api.github.com/users/elfring/repos", "events_url": "https://api.github.com/users/elfring/events{/privacy}", "received_events_url": "https://api.github.com/users/elfring/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 52267851, "node_id": "MDU6TGFiZWw1MjI2Nzg1MQ==", "url": "https://api.github.com/repos/simbody/simbody/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2014-07-08T19:05:27Z", "updated_at": "2014-12-18T18:08:02Z", "closed_at": null, "author_association": "NONE", "active_lock_reason": null, "body": "I would like to point out that identifiers like \"[`__IPRETURNCODES_HPP__`](https://github.com/simbody/simbody/blob/0f00f2a035271508271f1c5006a49422d21688b7/SimTKmath/Optimizers/src/IpOpt/IpReturnCodes.hpp#L11)\" and \"[`_CPDIRECT_IMPL_H`](https://github.com/simbody/simbody/blob/0f00f2a035271508271f1c5006a49422d21688b7/SimTKmath/Integrators/src/CPodes/sundials/src/cpodes/cpodes_direct_impl.h#L17)\" [do not fit](https://www.securecoding.cert.org/confluence/display/cplusplus/DCL32-CPP.+Do+not+declare+or+define+a+reserved+identifier#DCL32-CPP.Donotdeclareordefineareservedidentifier-NoncompliantCodeExample%28HeaderGuard%29) to the expected naming convention of the C++ language standard.\nWould you like to adjust your selection for unique names?\n", "reactions": {"url": "https://api.github.com/repos/simbody/simbody/issues/187/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/simbody/simbody/issues/187/timeline", "performed_via_github_app": null}, {"url": "https://api.github.com/repos/simbody/simbody/issues/188", "repository_url": "https://api.github.com/repos/simbody/simbody", "labels_url": "https://api.github.com/repos/simbody/simbody/issues/188/labels{/name}", "comments_url": "https://api.github.com/repos/simbody/simbody/issues/188/comments", "events_url": "https://api.github.com/repos/simbody/simbody/issues/188/events", "html_url": "https://github.com/simbody/simbody/issues/188", "id": 37421085, "node_id": "MDU6SXNzdWUzNzQyMTA4NQ==", "number": 188, "title": "tree kinematics cache entries not invalidated properly", "user": {"login": "sherm1", "id": 4088016, "node_id": "MDQ6VXNlcjQwODgwMTY=", "avatar_url": "https://avatars.githubusercontent.com/u/4088016?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sherm1", "html_url": "https://github.com/sherm1", "followers_url": "https://api.github.com/users/sherm1/followers", "following_url": "https://api.github.com/users/sherm1/following{/other_user}", "gists_url": "https://api.github.com/users/sherm1/gists{/gist_id}", "starred_url": "https://api.github.com/users/sherm1/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sherm1/subscriptions", "organizations_url": "https://api.github.com/users/sherm1/orgs", "repos_url": "https://api.github.com/users/sherm1/repos", "events_url": "https://api.github.com/users/sherm1/events{/privacy}", "received_events_url": "https://api.github.com/users/sherm1/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 52267851, "node_id": "MDU6TGFiZWw1MjI2Nzg1MQ==", "url": "https://api.github.com/repos/simbody/simbody/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}, {"id": 57297924, "node_id": "MDU6TGFiZWw1NzI5NzkyNA==", "url": "https://api.github.com/repos/simbody/simbody/labels/state", "name": "state", "color": "fbca04", "default": false, "description": null}, {"id": 62665552, "node_id": "MDU6TGFiZWw2MjY2NTU1Mg==", "url": "https://api.github.com/repos/simbody/simbody/labels/contact", "name": "contact", "color": "eb6420", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": {"login": "sherm1", "id": 4088016, "node_id": "MDQ6VXNlcjQwODgwMTY=", "avatar_url": "https://avatars.githubusercontent.com/u/4088016?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sherm1", "html_url": "https://github.com/sherm1", "followers_url": "https://api.github.com/users/sherm1/followers", "following_url": "https://api.github.com/users/sherm1/following{/other_user}", "gists_url": "https://api.github.com/users/sherm1/gists{/gist_id}", "starred_url": "https://api.github.com/users/sherm1/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sherm1/subscriptions", "organizations_url": "https://api.github.com/users/sherm1/orgs", "repos_url": "https://api.github.com/users/sherm1/repos", "events_url": "https://api.github.com/users/sherm1/events{/privacy}", "received_events_url": "https://api.github.com/users/sherm1/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "sherm1", "id": 4088016, "node_id": "MDQ6VXNlcjQwODgwMTY=", "avatar_url": "https://avatars.githubusercontent.com/u/4088016?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sherm1", "html_url": "https://github.com/sherm1", "followers_url": "https://api.github.com/users/sherm1/followers", "following_url": "https://api.github.com/users/sherm1/following{/other_user}", "gists_url": "https://api.github.com/users/sherm1/gists{/gist_id}", "starred_url": "https://api.github.com/users/sherm1/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sherm1/subscriptions", "organizations_url": "https://api.github.com/users/sherm1/orgs", "repos_url": "https://api.github.com/users/sherm1/repos", "events_url": "https://api.github.com/users/sherm1/events{/privacy}", "received_events_url": "https://api.github.com/users/sherm1/received_events", "type": "User", "site_admin": false}], "milestone": {"url": "https://api.github.com/repos/simbody/simbody/milestones/1", "html_url": "https://github.com/simbody/simbody/milestone/1", "labels_url": "https://api.github.com/repos/simbody/simbody/milestones/1/labels", "id": 910475, "node_id": "MDk6TWlsZXN0b25lOTEwNDc1", "number": 1, "title": "Simbody 4.0", "description": "This milestone collects Issues and Pull Requests that must be dealt with before Simbody 4.0 can be released. This is a prerequisite for OpenSim 4.0.", "creator": {"login": "sherm1", "id": 4088016, "node_id": "MDQ6VXNlcjQwODgwMTY=", "avatar_url": "https://avatars.githubusercontent.com/u/4088016?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sherm1", "html_url": "https://github.com/sherm1", "followers_url": "https://api.github.com/users/sherm1/followers", "following_url": "https://api.github.com/users/sherm1/following{/other_user}", "gists_url": "https://api.github.com/users/sherm1/gists{/gist_id}", "starred_url": "https://api.github.com/users/sherm1/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sherm1/subscriptions", "organizations_url": "https://api.github.com/users/sherm1/orgs", "repos_url": "https://api.github.com/users/sherm1/repos", "events_url": "https://api.github.com/users/sherm1/events{/privacy}", "received_events_url": "https://api.github.com/users/sherm1/received_events", "type": "User", "site_admin": false}, "open_issues": 12, "closed_issues": 13, "state": "open", "created_at": "2014-12-19T18:48:14Z", "updated_at": "2015-12-23T21:15:41Z", "due_on": "2015-06-01T07:00:00Z", "closed_at": null}, "comments": 0, "created_at": "2014-07-08T23:21:56Z", "updated_at": "2015-08-25T00:31:53Z", "closed_at": "2015-08-25T00:31:53Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "Simbody uses lazy cache entries to hold the kinematics-only computations at `Stage::Position` (q-dependent) and `Stage::Velocity` (u-dependent). You can see [here](https://github.com/simbody/simbody/blob/master/Simbody/src/SimbodyMatterSubsystemRep.cpp#L388) and [here](https://github.com/simbody/simbody/blob/master/Simbody/src/SimbodyMatterSubsystemRep.cpp#L420) that they are invalidated only when the next earlier stage is invalidated (that is, `Stage::Time` for the tree position cache and `Stage::Position` for the tree velocity cache. They should _also_ get invalidated whenever a q or u (resp.) changes.\n\nThe reason this hasn't caused trouble is that `realizePosition()` and `realizeVelocity()` unconditionally recalculate the tree cache entries; they really should only recalculate if needed but that would only work if these guys were getting invalidated correctly.\n\nSee also issue #185; these need to be addressed together.\n", "reactions": {"url": "https://api.github.com/repos/simbody/simbody/issues/188/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/simbody/simbody/issues/188/timeline", "performed_via_github_app": null}, {"url": "https://api.github.com/repos/simbody/simbody/issues/195", "repository_url": "https://api.github.com/repos/simbody/simbody", "labels_url": "https://api.github.com/repos/simbody/simbody/issues/195/labels{/name}", "comments_url": "https://api.github.com/repos/simbody/simbody/issues/195/comments", "events_url": "https://api.github.com/repos/simbody/simbody/issues/195/events", "html_url": "https://github.com/simbody/simbody/issues/195", "id": 37939406, "node_id": "MDU6SXNzdWUzNzkzOTQwNg==", "number": 195, "title": "Using Xcode, cannot build in Debug", "user": {"login": "chrisdembia", "id": 846001, "node_id": "MDQ6VXNlcjg0NjAwMQ==", "avatar_url": "https://avatars.githubusercontent.com/u/846001?v=4", "gravatar_id": "", "url": "https://api.github.com/users/chrisdembia", "html_url": "https://github.com/chrisdembia", "followers_url": "https://api.github.com/users/chrisdembia/followers", "following_url": "https://api.github.com/users/chrisdembia/following{/other_user}", "gists_url": "https://api.github.com/users/chrisdembia/gists{/gist_id}", "starred_url": "https://api.github.com/users/chrisdembia/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/chrisdembia/subscriptions", "organizations_url": "https://api.github.com/users/chrisdembia/orgs", "repos_url": "https://api.github.com/users/chrisdembia/repos", "events_url": "https://api.github.com/users/chrisdembia/events{/privacy}", "received_events_url": "https://api.github.com/users/chrisdembia/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 10, "created_at": "2014-07-16T00:30:49Z", "updated_at": "2014-07-22T16:54:35Z", "closed_at": "2014-07-22T16:54:35Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "Basically, Simbody uses CMAKE_BUILD_TYPE to change the name of targets if the build is a Debug build. However, Xcode doesn't use CMAKE_BUILD_TYPE.\n\nFixing this could entail a fairly large change. http://stackoverflow.com/questions/6561754/cmake-changing-name-of-visual-studio-and-xcode-exectuables-depending-on-config. Basically, instead of changing the name of targets when building as debug, we would change the name of the resulting library (OUTPUT_NAME). The name of the targets would not change depending on build type.\n\nWe can use [CMAKE_DEBUG_POSTFIX](http://www.cmake.org/cmake/help/v3.0/variable/CMAKE_CONFIG_POSTFIX.html?highlight=postfix)\n\nI don't know if this has implications for `TARGET_LINK_LIBRARY` lines, which have things like `debug SimTKcommon_d optimized SimTKcommon`. In this case, is `SimTKcommon_d the name of a library (in which using OUTPUT_NAME would be fine) or the name of a target (in which case we would still need to change the name of a target when building as debug)?\n", "reactions": {"url": "https://api.github.com/repos/simbody/simbody/issues/195/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/simbody/simbody/issues/195/timeline", "performed_via_github_app": null}, {"url": "https://api.github.com/repos/simbody/simbody/issues/198", "repository_url": "https://api.github.com/repos/simbody/simbody", "labels_url": "https://api.github.com/repos/simbody/simbody/issues/198/labels{/name}", "comments_url": "https://api.github.com/repos/simbody/simbody/issues/198/comments", "events_url": "https://api.github.com/repos/simbody/simbody/issues/198/events", "html_url": "https://github.com/simbody/simbody/issues/198", "id": 38134111, "node_id": "MDU6SXNzdWUzODEzNDExMQ==", "number": 198, "title": "Bug in TriangleMesh face-splitting algorithm", "user": {"login": "sherm1", "id": 4088016, "node_id": "MDQ6VXNlcjQwODgwMTY=", "avatar_url": "https://avatars.githubusercontent.com/u/4088016?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sherm1", "html_url": "https://github.com/sherm1", "followers_url": "https://api.github.com/users/sherm1/followers", "following_url": "https://api.github.com/users/sherm1/following{/other_user}", "gists_url": "https://api.github.com/users/sherm1/gists{/gist_id}", "starred_url": "https://api.github.com/users/sherm1/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sherm1/subscriptions", "organizations_url": "https://api.github.com/users/sherm1/orgs", "repos_url": "https://api.github.com/users/sherm1/repos", "events_url": "https://api.github.com/users/sherm1/events{/privacy}", "received_events_url": "https://api.github.com/users/sherm1/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 52267851, "node_id": "MDU6TGFiZWw1MjI2Nzg1MQ==", "url": "https://api.github.com/repos/simbody/simbody/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}, {"id": 62665552, "node_id": "MDU6TGFiZWw2MjY2NTU1Mg==", "url": "https://api.github.com/repos/simbody/simbody/labels/contact", "name": "contact", "color": "eb6420", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": {"login": "sherm1", "id": 4088016, "node_id": "MDQ6VXNlcjQwODgwMTY=", "avatar_url": "https://avatars.githubusercontent.com/u/4088016?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sherm1", "html_url": "https://github.com/sherm1", "followers_url": "https://api.github.com/users/sherm1/followers", "following_url": "https://api.github.com/users/sherm1/following{/other_user}", "gists_url": "https://api.github.com/users/sherm1/gists{/gist_id}", "starred_url": "https://api.github.com/users/sherm1/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sherm1/subscriptions", "organizations_url": "https://api.github.com/users/sherm1/orgs", "repos_url": "https://api.github.com/users/sherm1/repos", "events_url": "https://api.github.com/users/sherm1/events{/privacy}", "received_events_url": "https://api.github.com/users/sherm1/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "sherm1", "id": 4088016, "node_id": "MDQ6VXNlcjQwODgwMTY=", "avatar_url": "https://avatars.githubusercontent.com/u/4088016?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sherm1", "html_url": "https://github.com/sherm1", "followers_url": "https://api.github.com/users/sherm1/followers", "following_url": "https://api.github.com/users/sherm1/following{/other_user}", "gists_url": "https://api.github.com/users/sherm1/gists{/gist_id}", "starred_url": "https://api.github.com/users/sherm1/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sherm1/subscriptions", "organizations_url": "https://api.github.com/users/sherm1/orgs", "repos_url": "https://api.github.com/users/sherm1/repos", "events_url": "https://api.github.com/users/sherm1/events{/privacy}", "received_events_url": "https://api.github.com/users/sherm1/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 1, "created_at": "2014-07-17T22:47:37Z", "updated_at": "2014-07-18T04:17:49Z", "closed_at": "2014-07-18T04:17:49Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "(Reported by Alexandra Zobova; see Simbody [forum post](https://simtk.org/forums/viewtopic.php?f=47&t=4672).)\n\nFor elastic foundation contact meshes, all faces must be triangles. Simbody automatically triangulates meshes that have polygonal faces using two algorithms: if a face has four edges, split it along a diagonal to create two faces. If more than four, add a center vertex and then triangulate radially. Alexandra reported a bug in the latter algorithm and also in the algorithm that converts a PolygonalMesh to a DecorativeMesh. The rest is from Alexandra's forum post:\n\n> I explored the ContactGeometry_TriangleMesh.cpp file, and I think the problem is in the constructor\n> \n> ```\n> ContactGeometry::TriangleMesh::Impl::Impl\n>    (const PolygonalMesh& mesh, bool smooth) \n> :   ContactGeometryImpl(), smooth(smooth) \n> {   // Create the mesh, triangulating faces as necessary.\n> ```\n> \n> in the part of code when the function triangulates the face that have more than 4 vertices. In the example I've shown in previous post two faces have 5 vertices. So  'numVert' == 5; 'i' is the number of the face under consideration\n> \n> ```\n>            Vec3 center(0);\n>             for (int j = 0; j < numVert; j++)\n>                 center += vertexPositions[mesh.getFaceVertex(i, j)];\n>             center /= numVert;\n>             vertexPositions.push_back(center);\n>             int newIndex = vertexPositions.size()-1;\n>             for (int j = 0; j < numVert-1; j++) {\n>                 faceIndices.push_back(mesh.getFaceVertex(i, j));\n>                 faceIndices.push_back(mesh.getFaceVertex(i, j+1));\n>                 faceIndices.push_back(newIndex);\n>             }\n> ```\n> \n> In this code in the last cycle I receive only 4 triangles (j=0,1,2,3), and I should receive 5. I've added the code \n> \n> ```\n>    //code by Zobova\n>       int j=4;\n>                 faceIndices.push_back(mesh.getFaceVertex(i, j));\n>                 faceIndices.push_back(mesh.getFaceVertex(i, 0));\n>                 faceIndices.push_back(newIndex);\n> ```\n> \n> and now everything works! No error, no exception! Also it seems that there is the same bug in the function that creates DecorativeMesh from a PolygonalMesh, because there is a hole in the place of fifth triangle in visualization. I solved it by creating new DecorativeMesh from TriangleMesh.\n", "reactions": {"url": "https://api.github.com/repos/simbody/simbody/issues/198/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/simbody/simbody/issues/198/timeline", "performed_via_github_app": null}, {"url": "https://api.github.com/repos/simbody/simbody/issues/205", "repository_url": "https://api.github.com/repos/simbody/simbody", "labels_url": "https://api.github.com/repos/simbody/simbody/issues/205/labels{/name}", "comments_url": "https://api.github.com/repos/simbody/simbody/issues/205/comments", "events_url": "https://api.github.com/repos/simbody/simbody/issues/205/events", "html_url": "https://github.com/simbody/simbody/issues/205", "id": 38808610, "node_id": "MDU6SXNzdWUzODgwODYxMA==", "number": 205, "title": "Implement improved PLUS formulation", "user": {"login": "tkuchida", "id": 4203505, "node_id": "MDQ6VXNlcjQyMDM1MDU=", "avatar_url": "https://avatars.githubusercontent.com/u/4203505?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tkuchida", "html_url": "https://github.com/tkuchida", "followers_url": "https://api.github.com/users/tkuchida/followers", "following_url": "https://api.github.com/users/tkuchida/following{/other_user}", "gists_url": "https://api.github.com/users/tkuchida/gists{/gist_id}", "starred_url": "https://api.github.com/users/tkuchida/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tkuchida/subscriptions", "organizations_url": "https://api.github.com/users/tkuchida/orgs", "repos_url": "https://api.github.com/users/tkuchida/repos", "events_url": "https://api.github.com/users/tkuchida/events{/privacy}", "received_events_url": "https://api.github.com/users/tkuchida/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 52267853, "node_id": "MDU6TGFiZWw1MjI2Nzg1Mw==", "url": "https://api.github.com/repos/simbody/simbody/labels/enhancement", "name": "enhancement", "color": "84b6eb", "default": true, "description": null}, {"id": 62665552, "node_id": "MDU6TGFiZWw2MjY2NTU1Mg==", "url": "https://api.github.com/repos/simbody/simbody/labels/contact", "name": "contact", "color": "eb6420", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": {"login": "tkuchida", "id": 4203505, "node_id": "MDQ6VXNlcjQyMDM1MDU=", "avatar_url": "https://avatars.githubusercontent.com/u/4203505?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tkuchida", "html_url": "https://github.com/tkuchida", "followers_url": "https://api.github.com/users/tkuchida/followers", "following_url": "https://api.github.com/users/tkuchida/following{/other_user}", "gists_url": "https://api.github.com/users/tkuchida/gists{/gist_id}", "starred_url": "https://api.github.com/users/tkuchida/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tkuchida/subscriptions", "organizations_url": "https://api.github.com/users/tkuchida/orgs", "repos_url": "https://api.github.com/users/tkuchida/repos", "events_url": "https://api.github.com/users/tkuchida/events{/privacy}", "received_events_url": "https://api.github.com/users/tkuchida/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "tkuchida", "id": 4203505, "node_id": "MDQ6VXNlcjQyMDM1MDU=", "avatar_url": "https://avatars.githubusercontent.com/u/4203505?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tkuchida", "html_url": "https://github.com/tkuchida", "followers_url": "https://api.github.com/users/tkuchida/followers", "following_url": "https://api.github.com/users/tkuchida/following{/other_user}", "gists_url": "https://api.github.com/users/tkuchida/gists{/gist_id}", "starred_url": "https://api.github.com/users/tkuchida/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tkuchida/subscriptions", "organizations_url": "https://api.github.com/users/tkuchida/orgs", "repos_url": "https://api.github.com/users/tkuchida/repos", "events_url": "https://api.github.com/users/tkuchida/events{/privacy}", "received_events_url": "https://api.github.com/users/tkuchida/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 1, "created_at": "2014-07-26T06:44:14Z", "updated_at": "2014-11-10T21:40:46Z", "closed_at": "2014-11-10T21:40:46Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "Though PLUS is not bad,\nThe notion was had\nTo improve the method a bit;\nThe math has been learned\nAnd Sherm has confirmed,\nSo all that's left now is to code it.\n", "reactions": {"url": "https://api.github.com/repos/simbody/simbody/issues/205/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/simbody/simbody/issues/205/timeline", "performed_via_github_app": null}, {"url": "https://api.github.com/repos/simbody/simbody/issues/206", "repository_url": "https://api.github.com/repos/simbody/simbody", "labels_url": "https://api.github.com/repos/simbody/simbody/issues/206/labels{/name}", "comments_url": "https://api.github.com/repos/simbody/simbody/issues/206/comments", "events_url": "https://api.github.com/repos/simbody/simbody/issues/206/events", "html_url": "https://github.com/simbody/simbody/issues/206", "id": 38850034, "node_id": "MDU6SXNzdWUzODg1MDAzNA==", "number": 206, "title": "Visualizer::setMode() does not return a Visualizer&, contrary to documentation.", "user": {"login": "chrisdembia", "id": 846001, "node_id": "MDQ6VXNlcjg0NjAwMQ==", "avatar_url": "https://avatars.githubusercontent.com/u/846001?v=4", "gravatar_id": "", "url": "https://api.github.com/users/chrisdembia", "html_url": "https://github.com/chrisdembia", "followers_url": "https://api.github.com/users/chrisdembia/followers", "following_url": "https://api.github.com/users/chrisdembia/following{/other_user}", "gists_url": "https://api.github.com/users/chrisdembia/gists{/gist_id}", "starred_url": "https://api.github.com/users/chrisdembia/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/chrisdembia/subscriptions", "organizations_url": "https://api.github.com/users/chrisdembia/orgs", "repos_url": "https://api.github.com/users/chrisdembia/repos", "events_url": "https://api.github.com/users/chrisdembia/events{/privacy}", "received_events_url": "https://api.github.com/users/chrisdembia/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2014-07-27T20:40:38Z", "updated_at": "2014-07-27T22:47:44Z", "closed_at": "2014-07-27T22:47:44Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "See https://github.com/simbody/simbody/blob/master/Simbody/Visualizer/include/simbody/internal/Visualizer.h#L385\n", "reactions": {"url": "https://api.github.com/repos/simbody/simbody/issues/206/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/simbody/simbody/issues/206/timeline", "performed_via_github_app": null}, {"url": "https://api.github.com/repos/simbody/simbody/issues/208", "repository_url": "https://api.github.com/repos/simbody/simbody", "labels_url": "https://api.github.com/repos/simbody/simbody/issues/208/labels{/name}", "comments_url": "https://api.github.com/repos/simbody/simbody/issues/208/comments", "events_url": "https://api.github.com/repos/simbody/simbody/issues/208/events", "html_url": "https://github.com/simbody/simbody/issues/208", "id": 38860747, "node_id": "MDU6SXNzdWUzODg2MDc0Nw==", "number": 208, "title": "Operational space example", "user": {"login": "chrisdembia", "id": 846001, "node_id": "MDQ6VXNlcjg0NjAwMQ==", "avatar_url": "https://avatars.githubusercontent.com/u/846001?v=4", "gravatar_id": "", "url": "https://api.github.com/users/chrisdembia", "html_url": "https://github.com/chrisdembia", "followers_url": "https://api.github.com/users/chrisdembia/followers", "following_url": "https://api.github.com/users/chrisdembia/following{/other_user}", "gists_url": "https://api.github.com/users/chrisdembia/gists{/gist_id}", "starred_url": "https://api.github.com/users/chrisdembia/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/chrisdembia/subscriptions", "organizations_url": "https://api.github.com/users/chrisdembia/orgs", "repos_url": "https://api.github.com/users/chrisdembia/repos", "events_url": "https://api.github.com/users/chrisdembia/events{/privacy}", "received_events_url": "https://api.github.com/users/chrisdembia/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2014-07-28T04:24:17Z", "updated_at": "2014-11-23T20:26:50Z", "closed_at": "2014-11-23T20:26:50Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "@sherm1 can you point me to any code where you compute `A = (G M^-1 G^T)^-1` for contact? I think I remember you saying that you don't compute this explicitly, so maybe there isn't code.\n\n@sohapouya is interested in this task space example as well.\n", "reactions": {"url": "https://api.github.com/repos/simbody/simbody/issues/208/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/simbody/simbody/issues/208/timeline", "performed_via_github_app": null}, {"url": "https://api.github.com/repos/simbody/simbody/issues/212", "repository_url": "https://api.github.com/repos/simbody/simbody", "labels_url": "https://api.github.com/repos/simbody/simbody/issues/212/labels{/name}", "comments_url": "https://api.github.com/repos/simbody/simbody/issues/212/comments", "events_url": "https://api.github.com/repos/simbody/simbody/issues/212/events", "html_url": "https://github.com/simbody/simbody/issues/212", "id": 39023387, "node_id": "MDU6SXNzdWUzOTAyMzM4Nw==", "number": 212, "title": "Hidden overloaded virtual functions in FactorLU", "user": {"login": "chrisdembia", "id": 846001, "node_id": "MDQ6VXNlcjg0NjAwMQ==", "avatar_url": "https://avatars.githubusercontent.com/u/846001?v=4", "gravatar_id": "", "url": "https://api.github.com/users/chrisdembia", "html_url": "https://github.com/chrisdembia", "followers_url": "https://api.github.com/users/chrisdembia/followers", "following_url": "https://api.github.com/users/chrisdembia/following{/other_user}", "gists_url": "https://api.github.com/users/chrisdembia/gists{/gist_id}", "starred_url": "https://api.github.com/users/chrisdembia/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/chrisdembia/subscriptions", "organizations_url": "https://api.github.com/users/chrisdembia/orgs", "repos_url": "https://api.github.com/users/chrisdembia/repos", "events_url": "https://api.github.com/users/chrisdembia/events{/privacy}", "received_events_url": "https://api.github.com/users/chrisdembia/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 52267851, "node_id": "MDU6TGFiZWw1MjI2Nzg1MQ==", "url": "https://api.github.com/repos/simbody/simbody/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2014-07-29T19:01:22Z", "updated_at": "2019-08-29T05:35:06Z", "closed_at": null, "author_association": "MEMBER", "active_lock_reason": null, "body": "This is part of #181.\n\nThere are hidden overloaded virtual functions in FactorLU, which seems like a pretty important thing to fix.\n\n```\n/home/fitze/repos/simbody/simbody/SimTKmath/LinearAlgebra/src/FactorRep.h:161:17: note: hidden overloaded virtual function\n      'SimTK::FactorLURepBase::getErrorBounds' declared here: type mismatch at 1st parameter ('const Vector_<double> &' vs\n      'Vector_<double> &')\n   virtual void getErrorBounds( const Vector_<double>& err, Vector_<float>& berr ){\n                ^\n```\n", "reactions": {"url": "https://api.github.com/repos/simbody/simbody/issues/212/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/simbody/simbody/issues/212/timeline", "performed_via_github_app": null}, {"url": "https://api.github.com/repos/simbody/simbody/issues/213", "repository_url": "https://api.github.com/repos/simbody/simbody", "labels_url": "https://api.github.com/repos/simbody/simbody/issues/213/labels{/name}", "comments_url": "https://api.github.com/repos/simbody/simbody/issues/213/comments", "events_url": "https://api.github.com/repos/simbody/simbody/issues/213/events", "html_url": "https://github.com/simbody/simbody/issues/213", "id": 39328889, "node_id": "MDU6SXNzdWUzOTMyODg4OQ==", "number": 213, "title": "Missing doxygen for matmul", "user": {"login": "tkuchida", "id": 4203505, "node_id": "MDQ6VXNlcjQyMDM1MDU=", "avatar_url": "https://avatars.githubusercontent.com/u/4203505?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tkuchida", "html_url": "https://github.com/tkuchida", "followers_url": "https://api.github.com/users/tkuchida/followers", "following_url": "https://api.github.com/users/tkuchida/following{/other_user}", "gists_url": "https://api.github.com/users/tkuchida/gists{/gist_id}", "starred_url": "https://api.github.com/users/tkuchida/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tkuchida/subscriptions", "organizations_url": "https://api.github.com/users/tkuchida/orgs", "repos_url": "https://api.github.com/users/tkuchida/repos", "events_url": "https://api.github.com/users/tkuchida/events{/privacy}", "received_events_url": "https://api.github.com/users/tkuchida/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2014-08-01T21:24:59Z", "updated_at": "2014-11-06T02:29:35Z", "closed_at": "2014-11-06T02:29:35Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "[The doxygen for `matmul()`](https://simtk.org/api_docs/simbody/api_docs32/Simbody/html/classSimTK_1_1MatrixBase.html#a59b2ce8fdcd597b92b2339b324e8a632) isn't very helpful. There are comments in the source [here](https://github.com/simbody/simbody/blob/master/SimTKcommon/BigMatrix/include/SimTKcommon/internal/MatrixBase.h#L649), but they aren't doxygenated. Any reason for this?\n", "reactions": {"url": "https://api.github.com/repos/simbody/simbody/issues/213/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/simbody/simbody/issues/213/timeline", "performed_via_github_app": null}, {"url": "https://api.github.com/repos/simbody/simbody/issues/214", "repository_url": "https://api.github.com/repos/simbody/simbody", "labels_url": "https://api.github.com/repos/simbody/simbody/issues/214/labels{/name}", "comments_url": "https://api.github.com/repos/simbody/simbody/issues/214/comments", "events_url": "https://api.github.com/repos/simbody/simbody/issues/214/events", "html_url": "https://github.com/simbody/simbody/issues/214", "id": 39471546, "node_id": "MDU6SXNzdWUzOTQ3MTU0Ng==", "number": 214, "title": "visualizer ignores rotation for 3d model text", "user": {"login": "sherm1", "id": 4088016, "node_id": "MDQ6VXNlcjQwODgwMTY=", "avatar_url": "https://avatars.githubusercontent.com/u/4088016?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sherm1", "html_url": "https://github.com/sherm1", "followers_url": "https://api.github.com/users/sherm1/followers", "following_url": "https://api.github.com/users/sherm1/following{/other_user}", "gists_url": "https://api.github.com/users/sherm1/gists{/gist_id}", "starred_url": "https://api.github.com/users/sherm1/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sherm1/subscriptions", "organizations_url": "https://api.github.com/users/sherm1/orgs", "repos_url": "https://api.github.com/users/sherm1/repos", "events_url": "https://api.github.com/users/sherm1/events{/privacy}", "received_events_url": "https://api.github.com/users/sherm1/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 52267851, "node_id": "MDU6TGFiZWw1MjI2Nzg1MQ==", "url": "https://api.github.com/repos/simbody/simbody/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}, {"id": 52759897, "node_id": "MDU6TGFiZWw1Mjc1OTg5Nw==", "url": "https://api.github.com/repos/simbody/simbody/labels/visualization", "name": "visualization", "color": "bfd4f2", "default": false, "description": null}, {"id": 59408209, "node_id": "MDU6TGFiZWw1OTQwODIwOQ==", "url": "https://api.github.com/repos/simbody/simbody/labels/documentation", "name": "documentation", "color": "bfdadc", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": {"login": "sherm1", "id": 4088016, "node_id": "MDQ6VXNlcjQwODgwMTY=", "avatar_url": "https://avatars.githubusercontent.com/u/4088016?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sherm1", "html_url": "https://github.com/sherm1", "followers_url": "https://api.github.com/users/sherm1/followers", "following_url": "https://api.github.com/users/sherm1/following{/other_user}", "gists_url": "https://api.github.com/users/sherm1/gists{/gist_id}", "starred_url": "https://api.github.com/users/sherm1/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sherm1/subscriptions", "organizations_url": "https://api.github.com/users/sherm1/orgs", "repos_url": "https://api.github.com/users/sherm1/repos", "events_url": "https://api.github.com/users/sherm1/events{/privacy}", "received_events_url": "https://api.github.com/users/sherm1/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "sherm1", "id": 4088016, "node_id": "MDQ6VXNlcjQwODgwMTY=", "avatar_url": "https://avatars.githubusercontent.com/u/4088016?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sherm1", "html_url": "https://github.com/sherm1", "followers_url": "https://api.github.com/users/sherm1/followers", "following_url": "https://api.github.com/users/sherm1/following{/other_user}", "gists_url": "https://api.github.com/users/sherm1/gists{/gist_id}", "starred_url": "https://api.github.com/users/sherm1/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sherm1/subscriptions", "organizations_url": "https://api.github.com/users/sherm1/orgs", "repos_url": "https://api.github.com/users/sherm1/repos", "events_url": "https://api.github.com/users/sherm1/events{/privacy}", "received_events_url": "https://api.github.com/users/sherm1/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 0, "created_at": "2014-08-04T23:30:13Z", "updated_at": "2014-08-05T00:59:43Z", "closed_at": "2014-08-05T00:59:43Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "The default for text in the visualizer is camera-facing, in which case the text rotation is determined by the camera orientation. That works fine. There is an option `setFaceCamera(false)` in which case the text orientation is determined by the model instead. But the text orientation does not obey the orientation supplied with the DecorativeText object, either using `setTransform()` or the DecorativeGeometry placement. Instead it always faces the model's Ground Z direction.\n\nAlso, the doxygen for `setFaceCamera()` has the effects of true and false backwards.\n", "reactions": {"url": "https://api.github.com/repos/simbody/simbody/issues/214/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/simbody/simbody/issues/214/timeline", "performed_via_github_app": null}, {"url": "https://api.github.com/repos/simbody/simbody/issues/216", "repository_url": "https://api.github.com/repos/simbody/simbody", "labels_url": "https://api.github.com/repos/simbody/simbody/issues/216/labels{/name}", "comments_url": "https://api.github.com/repos/simbody/simbody/issues/216/comments", "events_url": "https://api.github.com/repos/simbody/simbody/issues/216/events", "html_url": "https://github.com/simbody/simbody/issues/216", "id": 39674959, "node_id": "MDU6SXNzdWUzOTY3NDk1OQ==", "number": 216, "title": "Old Simbody 2.2 doxygen is still posted and findable by Google; should remove", "user": {"login": "moorepants", "id": 276007, "node_id": "MDQ6VXNlcjI3NjAwNw==", "avatar_url": "https://avatars.githubusercontent.com/u/276007?v=4", "gravatar_id": "", "url": "https://api.github.com/users/moorepants", "html_url": "https://github.com/moorepants", "followers_url": "https://api.github.com/users/moorepants/followers", "following_url": "https://api.github.com/users/moorepants/following{/other_user}", "gists_url": "https://api.github.com/users/moorepants/gists{/gist_id}", "starred_url": "https://api.github.com/users/moorepants/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/moorepants/subscriptions", "organizations_url": "https://api.github.com/users/moorepants/orgs", "repos_url": "https://api.github.com/users/moorepants/repos", "events_url": "https://api.github.com/users/moorepants/events{/privacy}", "received_events_url": "https://api.github.com/users/moorepants/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 59408209, "node_id": "MDU6TGFiZWw1OTQwODIwOQ==", "url": "https://api.github.com/repos/simbody/simbody/labels/documentation", "name": "documentation", "color": "bfdadc", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 10, "created_at": "2014-08-06T22:57:00Z", "updated_at": "2014-09-04T18:02:00Z", "closed_at": "2014-09-04T18:02:00Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "https://simtk.org/api_docs/simbody/api_docs22/Simbody/html/index.html\n\nSee the last lines on this page.\n", "reactions": {"url": "https://api.github.com/repos/simbody/simbody/issues/216/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/simbody/simbody/issues/216/timeline", "performed_via_github_app": null}, {"url": "https://api.github.com/repos/simbody/simbody/issues/217", "repository_url": "https://api.github.com/repos/simbody/simbody", "labels_url": "https://api.github.com/repos/simbody/simbody/issues/217/labels{/name}", "comments_url": "https://api.github.com/repos/simbody/simbody/issues/217/comments", "events_url": "https://api.github.com/repos/simbody/simbody/issues/217/events", "html_url": "https://github.com/simbody/simbody/issues/217", "id": 39771115, "node_id": "MDU6SXNzdWUzOTc3MTExNQ==", "number": 217, "title": "Positive integral can go negative after event isolation", "user": {"login": "carmichaelong", "id": 7455790, "node_id": "MDQ6VXNlcjc0NTU3OTA=", "avatar_url": "https://avatars.githubusercontent.com/u/7455790?v=4", "gravatar_id": "", "url": "https://api.github.com/users/carmichaelong", "html_url": "https://github.com/carmichaelong", "followers_url": "https://api.github.com/users/carmichaelong/followers", "following_url": "https://api.github.com/users/carmichaelong/following{/other_user}", "gists_url": "https://api.github.com/users/carmichaelong/gists{/gist_id}", "starred_url": "https://api.github.com/users/carmichaelong/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/carmichaelong/subscriptions", "organizations_url": "https://api.github.com/users/carmichaelong/orgs", "repos_url": "https://api.github.com/users/carmichaelong/repos", "events_url": "https://api.github.com/users/carmichaelong/events{/privacy}", "received_events_url": "https://api.github.com/users/carmichaelong/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 52267851, "node_id": "MDU6TGFiZWw1MjI2Nzg1MQ==", "url": "https://api.github.com/repos/simbody/simbody/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2014-08-07T21:37:42Z", "updated_at": "2014-12-18T18:07:23Z", "closed_at": null, "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Integrating a probe that measures slip error which is always a positive quantity. Integrated value was sometimes negative. @sherm1 and I looked at this together. He thinks it's due to cubic interpolation during event isolation (if it had been linear interpolation, it wouldn't have this behavior).\n\nSherm should investigate to see if this is what's happening and consider how not to use interpolation in the final trajectory. (Back up and take a short step?)\n\nNote: we tried setAllowInterpolation(false) and that had no effect on the event isolation. One option to fix this would be for event isolation to obey this flag.\n\ncc/ @chrisdembia \n", "reactions": {"url": "https://api.github.com/repos/simbody/simbody/issues/217/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/simbody/simbody/issues/217/timeline", "performed_via_github_app": null}, {"url": "https://api.github.com/repos/simbody/simbody/issues/219", "repository_url": "https://api.github.com/repos/simbody/simbody", "labels_url": "https://api.github.com/repos/simbody/simbody/issues/219/labels{/name}", "comments_url": "https://api.github.com/repos/simbody/simbody/issues/219/comments", "events_url": "https://api.github.com/repos/simbody/simbody/issues/219/events", "html_url": "https://github.com/simbody/simbody/issues/219", "id": 39836181, "node_id": "MDU6SXNzdWUzOTgzNjE4MQ==", "number": 219, "title": "compliant contact: fix Hunt & Crossley power bookkeeping for \"yanking\"", "user": {"login": "sherm1", "id": 4088016, "node_id": "MDQ6VXNlcjQwODgwMTY=", "avatar_url": "https://avatars.githubusercontent.com/u/4088016?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sherm1", "html_url": "https://github.com/sherm1", "followers_url": "https://api.github.com/users/sherm1/followers", "following_url": "https://api.github.com/users/sherm1/following{/other_user}", "gists_url": "https://api.github.com/users/sherm1/gists{/gist_id}", "starred_url": "https://api.github.com/users/sherm1/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sherm1/subscriptions", "organizations_url": "https://api.github.com/users/sherm1/orgs", "repos_url": "https://api.github.com/users/sherm1/repos", "events_url": "https://api.github.com/users/sherm1/events{/privacy}", "received_events_url": "https://api.github.com/users/sherm1/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 52267851, "node_id": "MDU6TGFiZWw1MjI2Nzg1MQ==", "url": "https://api.github.com/repos/simbody/simbody/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}, {"id": 62665552, "node_id": "MDU6TGFiZWw2MjY2NTU1Mg==", "url": "https://api.github.com/repos/simbody/simbody/labels/contact", "name": "contact", "color": "eb6420", "default": false, "description": null}], "state": "open", "locked": false, "assignee": {"login": "sherm1", "id": 4088016, "node_id": "MDQ6VXNlcjQwODgwMTY=", "avatar_url": "https://avatars.githubusercontent.com/u/4088016?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sherm1", "html_url": "https://github.com/sherm1", "followers_url": "https://api.github.com/users/sherm1/followers", "following_url": "https://api.github.com/users/sherm1/following{/other_user}", "gists_url": "https://api.github.com/users/sherm1/gists{/gist_id}", "starred_url": "https://api.github.com/users/sherm1/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sherm1/subscriptions", "organizations_url": "https://api.github.com/users/sherm1/orgs", "repos_url": "https://api.github.com/users/sherm1/repos", "events_url": "https://api.github.com/users/sherm1/events{/privacy}", "received_events_url": "https://api.github.com/users/sherm1/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "sherm1", "id": 4088016, "node_id": "MDQ6VXNlcjQwODgwMTY=", "avatar_url": "https://avatars.githubusercontent.com/u/4088016?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sherm1", "html_url": "https://github.com/sherm1", "followers_url": "https://api.github.com/users/sherm1/followers", "following_url": "https://api.github.com/users/sherm1/following{/other_user}", "gists_url": "https://api.github.com/users/sherm1/gists{/gist_id}", "starred_url": "https://api.github.com/users/sherm1/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sherm1/subscriptions", "organizations_url": "https://api.github.com/users/sherm1/orgs", "repos_url": "https://api.github.com/users/sherm1/repos", "events_url": "https://api.github.com/users/sherm1/events{/privacy}", "received_events_url": "https://api.github.com/users/sherm1/received_events", "type": "User", "site_admin": false}], "milestone": {"url": "https://api.github.com/repos/simbody/simbody/milestones/1", "html_url": "https://github.com/simbody/simbody/milestone/1", "labels_url": "https://api.github.com/repos/simbody/simbody/milestones/1/labels", "id": 910475, "node_id": "MDk6TWlsZXN0b25lOTEwNDc1", "number": 1, "title": "Simbody 4.0", "description": "This milestone collects Issues and Pull Requests that must be dealt with before Simbody 4.0 can be released. This is a prerequisite for OpenSim 4.0.", "creator": {"login": "sherm1", "id": 4088016, "node_id": "MDQ6VXNlcjQwODgwMTY=", "avatar_url": "https://avatars.githubusercontent.com/u/4088016?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sherm1", "html_url": "https://github.com/sherm1", "followers_url": "https://api.github.com/users/sherm1/followers", "following_url": "https://api.github.com/users/sherm1/following{/other_user}", "gists_url": "https://api.github.com/users/sherm1/gists{/gist_id}", "starred_url": "https://api.github.com/users/sherm1/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sherm1/subscriptions", "organizations_url": "https://api.github.com/users/sherm1/orgs", "repos_url": "https://api.github.com/users/sherm1/repos", "events_url": "https://api.github.com/users/sherm1/events{/privacy}", "received_events_url": "https://api.github.com/users/sherm1/received_events", "type": "User", "site_admin": false}, "open_issues": 12, "closed_issues": 13, "state": "open", "created_at": "2014-12-19T18:48:14Z", "updated_at": "2015-12-23T21:15:41Z", "due_on": "2015-06-01T07:00:00Z", "closed_at": null}, "comments": 0, "created_at": "2014-08-08T15:52:30Z", "updated_at": "2015-01-05T18:58:37Z", "closed_at": null, "author_association": "MEMBER", "active_lock_reason": null, "body": "Thanks to @mjhmilla (Matt Millard), we can avoid losing track of lost energy when a dissipative contact is \"yanked\" out of contact before all the potential energy has been recovered. See the [brick-halfspace penalty force](https://github.com/simbody/simbody/blob/master/Simbody/src/CompliantContactSubsystem.cpp#L1281) for an example.\n\nThe other compliant force generators should be modified also, and the various pieces of documentation that apologize for the loss should be removed.\n", "reactions": {"url": "https://api.github.com/repos/simbody/simbody/issues/219/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/simbody/simbody/issues/219/timeline", "performed_via_github_app": null}, {"url": "https://api.github.com/repos/simbody/simbody/issues/220", "repository_url": "https://api.github.com/repos/simbody/simbody", "labels_url": "https://api.github.com/repos/simbody/simbody/issues/220/labels{/name}", "comments_url": "https://api.github.com/repos/simbody/simbody/issues/220/comments", "events_url": "https://api.github.com/repos/simbody/simbody/issues/220/events", "html_url": "https://github.com/simbody/simbody/issues/220", "id": 39836338, "node_id": "MDU6SXNzdWUzOTgzNjMzOA==", "number": 220, "title": "brick contact: verify that the brick geometry supports all required functions", "user": {"login": "sherm1", "id": 4088016, "node_id": "MDQ6VXNlcjQwODgwMTY=", "avatar_url": "https://avatars.githubusercontent.com/u/4088016?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sherm1", "html_url": "https://github.com/sherm1", "followers_url": "https://api.github.com/users/sherm1/followers", "following_url": "https://api.github.com/users/sherm1/following{/other_user}", "gists_url": "https://api.github.com/users/sherm1/gists{/gist_id}", "starred_url": "https://api.github.com/users/sherm1/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sherm1/subscriptions", "organizations_url": "https://api.github.com/users/sherm1/orgs", "repos_url": "https://api.github.com/users/sherm1/repos", "events_url": "https://api.github.com/users/sherm1/events{/privacy}", "received_events_url": "https://api.github.com/users/sherm1/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 52267853, "node_id": "MDU6TGFiZWw1MjI2Nzg1Mw==", "url": "https://api.github.com/repos/simbody/simbody/labels/enhancement", "name": "enhancement", "color": "84b6eb", "default": true, "description": null}, {"id": 62665552, "node_id": "MDU6TGFiZWw2MjY2NTU1Mg==", "url": "https://api.github.com/repos/simbody/simbody/labels/contact", "name": "contact", "color": "eb6420", "default": false, "description": null}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2014-08-08T15:54:00Z", "updated_at": "2014-08-08T15:54:00Z", "closed_at": null, "author_association": "MEMBER", "active_lock_reason": null, "body": "ContactGeometry::Brick needs to be checked to see that it is implementing all needed methods, such as ray-brick intersection.\n", "reactions": {"url": "https://api.github.com/repos/simbody/simbody/issues/220/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/simbody/simbody/issues/220/timeline", "performed_via_github_app": null}, {"url": "https://api.github.com/repos/simbody/simbody/issues/221", "repository_url": "https://api.github.com/repos/simbody/simbody", "labels_url": "https://api.github.com/repos/simbody/simbody/issues/221/labels{/name}", "comments_url": "https://api.github.com/repos/simbody/simbody/issues/221/comments", "events_url": "https://api.github.com/repos/simbody/simbody/issues/221/events", "html_url": "https://github.com/simbody/simbody/issues/221", "id": 39874647, "node_id": "MDU6SXNzdWUzOTg3NDY0Nw==", "number": 221, "title": "Simbody should provide a velocity-initialization solver", "user": {"login": "sherm1", "id": 4088016, "node_id": "MDQ6VXNlcjQwODgwMTY=", "avatar_url": "https://avatars.githubusercontent.com/u/4088016?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sherm1", "html_url": "https://github.com/sherm1", "followers_url": "https://api.github.com/users/sherm1/followers", "following_url": "https://api.github.com/users/sherm1/following{/other_user}", "gists_url": "https://api.github.com/users/sherm1/gists{/gist_id}", "starred_url": "https://api.github.com/users/sherm1/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sherm1/subscriptions", "organizations_url": "https://api.github.com/users/sherm1/orgs", "repos_url": "https://api.github.com/users/sherm1/repos", "events_url": "https://api.github.com/users/sherm1/events{/privacy}", "received_events_url": "https://api.github.com/users/sherm1/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 52267853, "node_id": "MDU6TGFiZWw1MjI2Nzg1Mw==", "url": "https://api.github.com/repos/simbody/simbody/labels/enhancement", "name": "enhancement", "color": "84b6eb", "default": true, "description": null}, {"id": 52759775, "node_id": "MDU6TGFiZWw1Mjc1OTc3NQ==", "url": "https://api.github.com/repos/simbody/simbody/labels/constraint", "name": "constraint", "color": "d4c5f9", "default": false, "description": null}, {"id": 108217628, "node_id": "MDU6TGFiZWwxMDgyMTc2Mjg=", "url": "https://api.github.com/repos/simbody/simbody/labels/help%20wanted", "name": "help wanted", "color": "009800", "default": true, "description": null}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2014-08-09T00:58:43Z", "updated_at": "2014-08-09T00:59:08Z", "closed_at": null, "author_association": "MEMBER", "active_lock_reason": null, "body": "Simbody has a pretty awesome (if I do say so myself) solver for setting the initial generalized coordinates to be consistent with constraints and a variety of user-specified conditions like marker positions. This [`Assembler` Study](https://simtk.org/api_docs/simbody/api_docs33/Simbody/html/classSimTK_1_1Assembler.html#details) is used both for initial assembly and for repeated \"tracking\" as occurs in inverse kinematics.\n\nThere should be something analogous for setting initial velocities and tracking known velocities. This could be a separate class, or it might be nice to make it an option to `Assembler`. That could be good since it is necessary to resolve position errors first, then velocity errors. It could also share a lot of the `Assembler` infrastructure, which is substantial.\n", "reactions": {"url": "https://api.github.com/repos/simbody/simbody/issues/221/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/simbody/simbody/issues/221/timeline", "performed_via_github_app": null}, {"url": "https://api.github.com/repos/simbody/simbody/issues/225", "repository_url": "https://api.github.com/repos/simbody/simbody", "labels_url": "https://api.github.com/repos/simbody/simbody/issues/225/labels{/name}", "comments_url": "https://api.github.com/repos/simbody/simbody/issues/225/comments", "events_url": "https://api.github.com/repos/simbody/simbody/issues/225/events", "html_url": "https://github.com/simbody/simbody/issues/225", "id": 40098774, "node_id": "MDU6SXNzdWU0MDA5ODc3NA==", "number": 225, "title": "Matrix_<T> serialization and I/O Doxygen is copied from Vector", "user": {"login": "chrisdembia", "id": 846001, "node_id": "MDQ6VXNlcjg0NjAwMQ==", "avatar_url": "https://avatars.githubusercontent.com/u/846001?v=4", "gravatar_id": "", "url": "https://api.github.com/users/chrisdembia", "html_url": "https://github.com/chrisdembia", "followers_url": "https://api.github.com/users/chrisdembia/followers", "following_url": "https://api.github.com/users/chrisdembia/following{/other_user}", "gists_url": "https://api.github.com/users/chrisdembia/gists{/gist_id}", "starred_url": "https://api.github.com/users/chrisdembia/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/chrisdembia/subscriptions", "organizations_url": "https://api.github.com/users/chrisdembia/orgs", "repos_url": "https://api.github.com/users/chrisdembia/repos", "events_url": "https://api.github.com/users/chrisdembia/events{/privacy}", "received_events_url": "https://api.github.com/users/chrisdembia/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 52267851, "node_id": "MDU6TGFiZWw1MjI2Nzg1MQ==", "url": "https://api.github.com/repos/simbody/simbody/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}, {"id": 59408209, "node_id": "MDU6TGFiZWw1OTQwODIwOQ==", "url": "https://api.github.com/repos/simbody/simbody/labels/documentation", "name": "documentation", "color": "bfdadc", "default": true, "description": null}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2014-08-12T21:01:43Z", "updated_at": "2014-12-18T18:06:43Z", "closed_at": null, "author_association": "MEMBER", "active_lock_reason": null, "body": "Doxygen at http://chrisdembia.github.io/simbody/classSimTK_1_1Matrix__.html reads:\n\n> These methods are at namespace scope but are logically part of the Vector classes.\n> \n> These deal with reading and writing Vectors from and to streams, which places an additional requirement on the element type T: the element must support the same operation you are trying to do on the Vector as a whole.\n", "reactions": {"url": "https://api.github.com/repos/simbody/simbody/issues/225/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/simbody/simbody/issues/225/timeline", "performed_via_github_app": null}, {"url": "https://api.github.com/repos/simbody/simbody/issues/227", "repository_url": "https://api.github.com/repos/simbody/simbody", "labels_url": "https://api.github.com/repos/simbody/simbody/issues/227/labels{/name}", "comments_url": "https://api.github.com/repos/simbody/simbody/issues/227/comments", "events_url": "https://api.github.com/repos/simbody/simbody/issues/227/events", "html_url": "https://github.com/simbody/simbody/issues/227", "id": 40109604, "node_id": "MDU6SXNzdWU0MDEwOTYwNA==", "number": 227, "title": "tinyxml memory leaks", "user": {"login": "chrisdembia", "id": 846001, "node_id": "MDQ6VXNlcjg0NjAwMQ==", "avatar_url": "https://avatars.githubusercontent.com/u/846001?v=4", "gravatar_id": "", "url": "https://api.github.com/users/chrisdembia", "html_url": "https://github.com/chrisdembia", "followers_url": "https://api.github.com/users/chrisdembia/followers", "following_url": "https://api.github.com/users/chrisdembia/following{/other_user}", "gists_url": "https://api.github.com/users/chrisdembia/gists{/gist_id}", "starred_url": "https://api.github.com/users/chrisdembia/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/chrisdembia/subscriptions", "organizations_url": "https://api.github.com/users/chrisdembia/orgs", "repos_url": "https://api.github.com/users/chrisdembia/repos", "events_url": "https://api.github.com/users/chrisdembia/events{/privacy}", "received_events_url": "https://api.github.com/users/chrisdembia/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2014-08-12T23:24:56Z", "updated_at": "2014-08-14T04:02:54Z", "closed_at": "2014-08-14T04:02:54Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "Here's valgrind output:\n\n```\n==5812==    at 0x4C2A879: operator new(unsigned long) (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)                     \n==5812==    by 0x62DAD21: SimTK::TiXmlElement::Parse(char const*, SimTK::TiXmlParsingData*, SimTK::TiXmlEncoding) (tinyxmlparser.cp\np:1200)                                                                                                                            \n==5812==    by 0x62DB113: SimTK::TiXmlElement::ReadValue(char const*, SimTK::TiXmlParsingData*, SimTK::TiXmlEncoding) (tinyxmlparse\nr.cpp:1286)                                                                                                                        \n==5812==    by 0x62DAE60: SimTK::TiXmlElement::Parse(char const*, SimTK::TiXmlParsingData*, SimTK::TiXmlEncoding) (tinyxmlparser.cp\np:1177)                                                                                                                            \n==5812==    by 0x62DB113: SimTK::TiXmlElement::ReadValue(char const*, SimTK::TiXmlParsingData*, SimTK::TiXmlEncoding) (tinyxmlparser.cpp:1286)                                                                                                                        \n==5812==    by 0x62DAE60: SimTK::TiXmlElement::Parse(char const*, SimTK::TiXmlParsingData*, SimTK::TiXmlEncoding) (tinyxmlparser.cpp:1177)                                                                                                                            \n==5812==    by 0x62DB113: SimTK::TiXmlElement::ReadValue(char const*, SimTK::TiXmlParsingData*, SimTK::TiXmlEncoding) (tinyxmlparser.cpp:1286)                                                                                                                        \n==5812==    by 0x62DAE60: SimTK::TiXmlElement::Parse(char const*, SimTK::TiXmlParsingData*, SimTK::TiXmlEncoding) (tinyxmlparser.cpp:1177)                                                                                                                            \n==5812==    by 0x62DB113: SimTK::TiXmlElement::ReadValue(char const*, SimTK::TiXmlParsingData*, SimTK::TiXmlEncoding) (tinyxmlparser.cpp:1286)                                                                                                                        \n==5812==    by 0x62DAE60: SimTK::TiXmlElement::Parse(char const*, SimTK::TiXmlParsingData*, SimTK::TiXmlEncoding) (tinyxmlparser.cpp:1177)                                                                                                                            \n==5812==    by 0x62DB113: SimTK::TiXmlElement::ReadValue(char const*, SimTK::TiXmlParsingData*, SimTK::TiXmlEncoding) (tinyxmlparser.cpp:1286)                                                                                                                        \n==5812==    by 0x62DAE60: SimTK::TiXmlElement::Parse(char const*, SimTK::TiXmlParsingData*, SimTK::TiXmlEncoding) (tinyxmlparser.cpp:1177)\n```\n\nhttps://github.com/simbody/simbody/blob/master/SimTKcommon/src/tinyxmlparser.cpp#L1200\n", "reactions": {"url": "https://api.github.com/repos/simbody/simbody/issues/227/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/simbody/simbody/issues/227/timeline", "performed_via_github_app": null}, {"url": "https://api.github.com/repos/simbody/simbody/issues/228", "repository_url": "https://api.github.com/repos/simbody/simbody", "labels_url": "https://api.github.com/repos/simbody/simbody/issues/228/labels{/name}", "comments_url": "https://api.github.com/repos/simbody/simbody/issues/228/comments", "events_url": "https://api.github.com/repos/simbody/simbody/issues/228/events", "html_url": "https://github.com/simbody/simbody/issues/228", "id": 40114720, "node_id": "MDU6SXNzdWU0MDExNDcyMA==", "number": 228, "title": "Provide a new version of `isValidInertiaMatrix()` that returns the error as a string", "user": {"login": "aseth1", "id": 6494122, "node_id": "MDQ6VXNlcjY0OTQxMjI=", "avatar_url": "https://avatars.githubusercontent.com/u/6494122?v=4", "gravatar_id": "", "url": "https://api.github.com/users/aseth1", "html_url": "https://github.com/aseth1", "followers_url": "https://api.github.com/users/aseth1/followers", "following_url": "https://api.github.com/users/aseth1/following{/other_user}", "gists_url": "https://api.github.com/users/aseth1/gists{/gist_id}", "starred_url": "https://api.github.com/users/aseth1/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/aseth1/subscriptions", "organizations_url": "https://api.github.com/users/aseth1/orgs", "repos_url": "https://api.github.com/users/aseth1/repos", "events_url": "https://api.github.com/users/aseth1/events{/privacy}", "received_events_url": "https://api.github.com/users/aseth1/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 52267853, "node_id": "MDU6TGFiZWw1MjI2Nzg1Mw==", "url": "https://api.github.com/repos/simbody/simbody/labels/enhancement", "name": "enhancement", "color": "84b6eb", "default": true, "description": null}, {"id": 108217628, "node_id": "MDU6TGFiZWwxMDgyMTc2Mjg=", "url": "https://api.github.com/repos/simbody/simbody/labels/help%20wanted", "name": "help wanted", "color": "009800", "default": true, "description": null}, {"id": 121484439, "node_id": "MDU6TGFiZWwxMjE0ODQ0Mzk=", "url": "https://api.github.com/repos/simbody/simbody/labels/OpenSim", "name": "OpenSim", "color": "006b75", "default": false, "description": null}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": {"url": "https://api.github.com/repos/simbody/simbody/milestones/1", "html_url": "https://github.com/simbody/simbody/milestone/1", "labels_url": "https://api.github.com/repos/simbody/simbody/milestones/1/labels", "id": 910475, "node_id": "MDk6TWlsZXN0b25lOTEwNDc1", "number": 1, "title": "Simbody 4.0", "description": "This milestone collects Issues and Pull Requests that must be dealt with before Simbody 4.0 can be released. This is a prerequisite for OpenSim 4.0.", "creator": {"login": "sherm1", "id": 4088016, "node_id": "MDQ6VXNlcjQwODgwMTY=", "avatar_url": "https://avatars.githubusercontent.com/u/4088016?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sherm1", "html_url": "https://github.com/sherm1", "followers_url": "https://api.github.com/users/sherm1/followers", "following_url": "https://api.github.com/users/sherm1/following{/other_user}", "gists_url": "https://api.github.com/users/sherm1/gists{/gist_id}", "starred_url": "https://api.github.com/users/sherm1/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sherm1/subscriptions", "organizations_url": "https://api.github.com/users/sherm1/orgs", "repos_url": "https://api.github.com/users/sherm1/repos", "events_url": "https://api.github.com/users/sherm1/events{/privacy}", "received_events_url": "https://api.github.com/users/sherm1/received_events", "type": "User", "site_admin": false}, "open_issues": 12, "closed_issues": 13, "state": "open", "created_at": "2014-12-19T18:48:14Z", "updated_at": "2015-12-23T21:15:41Z", "due_on": "2015-06-01T07:00:00Z", "closed_at": null}, "comments": 0, "created_at": "2014-08-13T01:02:09Z", "updated_at": "2015-01-05T18:57:53Z", "closed_at": null, "author_association": "NONE", "active_lock_reason": null, "body": "It would be great to consolidate the `bool isValidInertiaMatrix()` [here](https://github.com/simbody/simbody/blob/master/SimTKcommon/Mechanics/include/SimTKcommon/internal/MassProperties.h#L432)  with the `errChk()` generated messages thrown [here](https://github.com/simbody/simbody/blob/master/SimTKcommon/Mechanics/include/SimTKcommon/internal/MassProperties.h#L526) in a new method that returns the error string.\n\nNote: when this new method is ready, file an issue on opensim-core to replace existing exception-catching error checking with the better-behaved method. See opensim-org/opensim-core#151.\n", "reactions": {"url": "https://api.github.com/repos/simbody/simbody/issues/228/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/simbody/simbody/issues/228/timeline", "performed_via_github_app": null}, {"url": "https://api.github.com/repos/simbody/simbody/issues/229", "repository_url": "https://api.github.com/repos/simbody/simbody", "labels_url": "https://api.github.com/repos/simbody/simbody/issues/229/labels{/name}", "comments_url": "https://api.github.com/repos/simbody/simbody/issues/229/comments", "events_url": "https://api.github.com/repos/simbody/simbody/issues/229/events", "html_url": "https://github.com/simbody/simbody/issues/229", "id": 40221537, "node_id": "MDU6SXNzdWU0MDIyMTUzNw==", "number": 229, "title": "SimTK::Xml nodes need to automatically delete orphan nodes to prevent leaks", "user": {"login": "sherm1", "id": 4088016, "node_id": "MDQ6VXNlcjQwODgwMTY=", "avatar_url": "https://avatars.githubusercontent.com/u/4088016?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sherm1", "html_url": "https://github.com/sherm1", "followers_url": "https://api.github.com/users/sherm1/followers", "following_url": "https://api.github.com/users/sherm1/following{/other_user}", "gists_url": "https://api.github.com/users/sherm1/gists{/gist_id}", "starred_url": "https://api.github.com/users/sherm1/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sherm1/subscriptions", "organizations_url": "https://api.github.com/users/sherm1/orgs", "repos_url": "https://api.github.com/users/sherm1/repos", "events_url": "https://api.github.com/users/sherm1/events{/privacy}", "received_events_url": "https://api.github.com/users/sherm1/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 52267853, "node_id": "MDU6TGFiZWw1MjI2Nzg1Mw==", "url": "https://api.github.com/repos/simbody/simbody/labels/enhancement", "name": "enhancement", "color": "84b6eb", "default": true, "description": null}, {"id": 108217628, "node_id": "MDU6TGFiZWwxMDgyMTc2Mjg=", "url": "https://api.github.com/repos/simbody/simbody/labels/help%20wanted", "name": "help wanted", "color": "009800", "default": true, "description": null}, {"id": 121484439, "node_id": "MDU6TGFiZWwxMjE0ODQ0Mzk=", "url": "https://api.github.com/repos/simbody/simbody/labels/OpenSim", "name": "OpenSim", "color": "006b75", "default": false, "description": null}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 7, "created_at": "2014-08-14T04:09:57Z", "updated_at": "2014-08-14T20:36:02Z", "closed_at": null, "author_association": "MEMBER", "active_lock_reason": null, "body": "Currently the `SimTK::Xml` API supports \"orphan\" Nodes, which are Nodes not currently owned by an element or document. Those are very useful, but since Xml::Node doesn't reference count its use of the underlying TinyXML nodes, it can't delete those orphan nodes automatically without risking double deletions and subsequent disaster.\n\nThe current behavior is well documented and there is a Node::clearOrphan() method for just this purpose, but it is confusing and users don't use it correctly. That is the API's fault, not the users. It should learn how to clean up its own mess. I think that will require reference counting of the TiNodes. Could be trivial using `std::shared_ptr<TiNode>`, or might take something fancier.\n\nBe sure to test this carefully and run the Xml tests at least once in Debug to maximize the consistency checking that gets done.\n", "reactions": {"url": "https://api.github.com/repos/simbody/simbody/issues/229/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/simbody/simbody/issues/229/timeline", "performed_via_github_app": null}, {"url": "https://api.github.com/repos/simbody/simbody/issues/232", "repository_url": "https://api.github.com/repos/simbody/simbody", "labels_url": "https://api.github.com/repos/simbody/simbody/issues/232/labels{/name}", "comments_url": "https://api.github.com/repos/simbody/simbody/issues/232/comments", "events_url": "https://api.github.com/repos/simbody/simbody/issues/232/events", "html_url": "https://github.com/simbody/simbody/issues/232", "id": 41512005, "node_id": "MDU6SXNzdWU0MTUxMjAwNQ==", "number": 232, "title": "Need HalfSpace-ConvexImplicitSurface contact tracker for superellipsoids, etc.", "user": {"login": "sherm1", "id": 4088016, "node_id": "MDQ6VXNlcjQwODgwMTY=", "avatar_url": "https://avatars.githubusercontent.com/u/4088016?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sherm1", "html_url": "https://github.com/sherm1", "followers_url": "https://api.github.com/users/sherm1/followers", "following_url": "https://api.github.com/users/sherm1/following{/other_user}", "gists_url": "https://api.github.com/users/sherm1/gists{/gist_id}", "starred_url": "https://api.github.com/users/sherm1/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sherm1/subscriptions", "organizations_url": "https://api.github.com/users/sherm1/orgs", "repos_url": "https://api.github.com/users/sherm1/repos", "events_url": "https://api.github.com/users/sherm1/events{/privacy}", "received_events_url": "https://api.github.com/users/sherm1/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 52267853, "node_id": "MDU6TGFiZWw1MjI2Nzg1Mw==", "url": "https://api.github.com/repos/simbody/simbody/labels/enhancement", "name": "enhancement", "color": "84b6eb", "default": true, "description": null}, {"id": 62665552, "node_id": "MDU6TGFiZWw2MjY2NTU1Mg==", "url": "https://api.github.com/repos/simbody/simbody/labels/contact", "name": "contact", "color": "eb6420", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": {"login": "sherm1", "id": 4088016, "node_id": "MDQ6VXNlcjQwODgwMTY=", "avatar_url": "https://avatars.githubusercontent.com/u/4088016?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sherm1", "html_url": "https://github.com/sherm1", "followers_url": "https://api.github.com/users/sherm1/followers", "following_url": "https://api.github.com/users/sherm1/following{/other_user}", "gists_url": "https://api.github.com/users/sherm1/gists{/gist_id}", "starred_url": "https://api.github.com/users/sherm1/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sherm1/subscriptions", "organizations_url": "https://api.github.com/users/sherm1/orgs", "repos_url": "https://api.github.com/users/sherm1/repos", "events_url": "https://api.github.com/users/sherm1/events{/privacy}", "received_events_url": "https://api.github.com/users/sherm1/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "sherm1", "id": 4088016, "node_id": "MDQ6VXNlcjQwODgwMTY=", "avatar_url": "https://avatars.githubusercontent.com/u/4088016?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sherm1", "html_url": "https://github.com/sherm1", "followers_url": "https://api.github.com/users/sherm1/followers", "following_url": "https://api.github.com/users/sherm1/following{/other_user}", "gists_url": "https://api.github.com/users/sherm1/gists{/gist_id}", "starred_url": "https://api.github.com/users/sherm1/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sherm1/subscriptions", "organizations_url": "https://api.github.com/users/sherm1/orgs", "repos_url": "https://api.github.com/users/sherm1/repos", "events_url": "https://api.github.com/users/sherm1/events{/privacy}", "received_events_url": "https://api.github.com/users/sherm1/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 1, "created_at": "2014-08-29T15:29:14Z", "updated_at": "2014-08-29T20:33:30Z", "closed_at": "2014-08-29T20:30:58Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "For Daniel Lopes' (@danielsimoeslopes) project to add superellipsoids to Simbody's contact geometry: we have a general tracker for pairs of ConvexImplicitSurfaces (which works) but not for the simpler case of ConvexImplicitSurfaces contacting a HalfSpace.\n\nShould be easy to generalize EllipsoidHalfSpace tracker to do this.\n", "reactions": {"url": "https://api.github.com/repos/simbody/simbody/issues/232/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/simbody/simbody/issues/232/timeline", "performed_via_github_app": null}, {"url": "https://api.github.com/repos/simbody/simbody/issues/234", "repository_url": "https://api.github.com/repos/simbody/simbody", "labels_url": "https://api.github.com/repos/simbody/simbody/issues/234/labels{/name}", "comments_url": "https://api.github.com/repos/simbody/simbody/issues/234/comments", "events_url": "https://api.github.com/repos/simbody/simbody/issues/234/events", "html_url": "https://github.com/simbody/simbody/issues/234", "id": 42224021, "node_id": "MDU6SXNzdWU0MjIyNDAyMQ==", "number": 234, "title": "XML tag gone from printed xml files", "user": {"login": "chrisdembia", "id": 846001, "node_id": "MDQ6VXNlcjg0NjAwMQ==", "avatar_url": "https://avatars.githubusercontent.com/u/846001?v=4", "gravatar_id": "", "url": "https://api.github.com/users/chrisdembia", "html_url": "https://github.com/chrisdembia", "followers_url": "https://api.github.com/users/chrisdembia/followers", "following_url": "https://api.github.com/users/chrisdembia/following{/other_user}", "gists_url": "https://api.github.com/users/chrisdembia/gists{/gist_id}", "starred_url": "https://api.github.com/users/chrisdembia/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/chrisdembia/subscriptions", "organizations_url": "https://api.github.com/users/chrisdembia/orgs", "repos_url": "https://api.github.com/users/chrisdembia/repos", "events_url": "https://api.github.com/users/chrisdembia/events{/privacy}", "received_events_url": "https://api.github.com/users/chrisdembia/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2014-09-08T17:55:03Z", "updated_at": "2014-09-08T21:35:28Z", "closed_at": "2014-09-08T21:35:28Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "This is a bug found via https://github.com/opensim-org/opensim-core/issues/137.\n\nThis line must be added back: https://github.com/simbody/simbody/pull/192/files#diff-1fdff149c309c86fb12a97135951a799L103\n\nWe should also figure out another way to suppress the warning generated by this line. Also, maybe we should add a test case to ensure this line will exist in serialized files.\n", "reactions": {"url": "https://api.github.com/repos/simbody/simbody/issues/234/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/simbody/simbody/issues/234/timeline", "performed_via_github_app": null}, {"url": "https://api.github.com/repos/simbody/simbody/issues/245", "repository_url": "https://api.github.com/repos/simbody/simbody", "labels_url": "https://api.github.com/repos/simbody/simbody/issues/245/labels{/name}", "comments_url": "https://api.github.com/repos/simbody/simbody/issues/245/comments", "events_url": "https://api.github.com/repos/simbody/simbody/issues/245/events", "html_url": "https://github.com/simbody/simbody/issues/245", "id": 43895131, "node_id": "MDU6SXNzdWU0Mzg5NTEzMQ==", "number": 245, "title": "Stribeck friction slope at zero velocity", "user": {"login": "scpeters", "id": 3650755, "node_id": "MDQ6VXNlcjM2NTA3NTU=", "avatar_url": "https://avatars.githubusercontent.com/u/3650755?v=4", "gravatar_id": "", "url": "https://api.github.com/users/scpeters", "html_url": "https://github.com/scpeters", "followers_url": "https://api.github.com/users/scpeters/followers", "following_url": "https://api.github.com/users/scpeters/following{/other_user}", "gists_url": "https://api.github.com/users/scpeters/gists{/gist_id}", "starred_url": "https://api.github.com/users/scpeters/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/scpeters/subscriptions", "organizations_url": "https://api.github.com/users/scpeters/orgs", "repos_url": "https://api.github.com/users/scpeters/repos", "events_url": "https://api.github.com/users/scpeters/events{/privacy}", "received_events_url": "https://api.github.com/users/scpeters/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 62665552, "node_id": "MDU6TGFiZWw2MjY2NTU1Mg==", "url": "https://api.github.com/repos/simbody/simbody/labels/contact", "name": "contact", "color": "eb6420", "default": false, "description": null}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2014-09-25T09:29:06Z", "updated_at": "2014-12-18T18:01:50Z", "closed_at": null, "author_association": "MEMBER", "active_lock_reason": null, "body": "I'm interested in using simbody for tire modeling, and the Stribeck friction model described in [CompliantContactSubsystem.cpp](https://github.com/simbody/simbody/blob/Simbody-3.4.1/Simbody/src/CompliantContactSubsystem.cpp#L647-L689) resembles the shape of the tire curves that I've seen before (see Figs 2, 4 in http://www-cdr.stanford.edu/dynamic/bywire/tires.pdf).\n\nThere is a significant difference, however, in the slope of these friction curves at `v=0`. In all the tire models that I have seen, the slope of the friction curve is non-zero, while the Stribeck model has a slope that depends on the viscous friction coefficient `uv`. When `uv=0`, the slope at `v=0` is zero.\n\nPasting ASCII art here:\n\n```\n//  us+uv     ***\n//           *    *                     *\n//           *     *               *____| slope = uv at Inf\n//           *      *         *\n// ud+3uv    *        *  *      \n//          *          \n//          *        \n//         *\n//  0  *____| slope = uv at 0\n//\n//     |    |           |\n//   v=0    1           3 \n```\n\nCurrently `mu_dry` is computed with the following conditions:\n\n```\n# endpoint values\nmu_dry(v = 0) = 0\nmu_dry(v = 1) = us\n# endpoint slopes\ndmu_dry(v = 0) = 0\ndmu_dry(v = 1) = 0\n# endpoint curvature\nddmu_dry(v = 0) = 0\nddmu_dry(v = 1) = 0\n```\n\nI would suggest relaxing the initial slope constraint so that `dmu_dry(v = 0)` is free. The endpoint curvature can be relaxed as well. Then there are four constraints, so a cubic function could be used instead of quintic.\n\n```\n# endpoint values\nmu_dry(v = 0) = 0\nmu_dry(v = 1) = us\n# endpoint slope\ndmu_dry(v = 1) = 0\n# initial curvature\nddmu_dry(v = 0) = 0\n```\n\nIt may even save some flops.\n", "reactions": {"url": "https://api.github.com/repos/simbody/simbody/issues/245/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/simbody/simbody/issues/245/timeline", "performed_via_github_app": null}, {"url": "https://api.github.com/repos/simbody/simbody/issues/246", "repository_url": "https://api.github.com/repos/simbody/simbody", "labels_url": "https://api.github.com/repos/simbody/simbody/issues/246/labels{/name}", "comments_url": "https://api.github.com/repos/simbody/simbody/issues/246/comments", "events_url": "https://api.github.com/repos/simbody/simbody/issues/246/events", "html_url": "https://github.com/simbody/simbody/issues/246", "id": 44313173, "node_id": "MDU6SXNzdWU0NDMxMzE3Mw==", "number": 246, "title": "CMAES Optimizer: initial inclusion, threading, MPI, resuming an optimization", "user": {"login": "chrisdembia", "id": 846001, "node_id": "MDQ6VXNlcjg0NjAwMQ==", "avatar_url": "https://avatars.githubusercontent.com/u/846001?v=4", "gravatar_id": "", "url": "https://api.github.com/users/chrisdembia", "html_url": "https://github.com/chrisdembia", "followers_url": "https://api.github.com/users/chrisdembia/followers", "following_url": "https://api.github.com/users/chrisdembia/following{/other_user}", "gists_url": "https://api.github.com/users/chrisdembia/gists{/gist_id}", "starred_url": "https://api.github.com/users/chrisdembia/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/chrisdembia/subscriptions", "organizations_url": "https://api.github.com/users/chrisdembia/orgs", "repos_url": "https://api.github.com/users/chrisdembia/repos", "events_url": "https://api.github.com/users/chrisdembia/events{/privacy}", "received_events_url": "https://api.github.com/users/chrisdembia/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 52267853, "node_id": "MDU6TGFiZWw1MjI2Nzg1Mw==", "url": "https://api.github.com/repos/simbody/simbody/labels/enhancement", "name": "enhancement", "color": "84b6eb", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": {"login": "chrisdembia", "id": 846001, "node_id": "MDQ6VXNlcjg0NjAwMQ==", "avatar_url": "https://avatars.githubusercontent.com/u/846001?v=4", "gravatar_id": "", "url": "https://api.github.com/users/chrisdembia", "html_url": "https://github.com/chrisdembia", "followers_url": "https://api.github.com/users/chrisdembia/followers", "following_url": "https://api.github.com/users/chrisdembia/following{/other_user}", "gists_url": "https://api.github.com/users/chrisdembia/gists{/gist_id}", "starred_url": "https://api.github.com/users/chrisdembia/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/chrisdembia/subscriptions", "organizations_url": "https://api.github.com/users/chrisdembia/orgs", "repos_url": "https://api.github.com/users/chrisdembia/repos", "events_url": "https://api.github.com/users/chrisdembia/events{/privacy}", "received_events_url": "https://api.github.com/users/chrisdembia/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "chrisdembia", "id": 846001, "node_id": "MDQ6VXNlcjg0NjAwMQ==", "avatar_url": "https://avatars.githubusercontent.com/u/846001?v=4", "gravatar_id": "", "url": "https://api.github.com/users/chrisdembia", "html_url": "https://github.com/chrisdembia", "followers_url": "https://api.github.com/users/chrisdembia/followers", "following_url": "https://api.github.com/users/chrisdembia/following{/other_user}", "gists_url": "https://api.github.com/users/chrisdembia/gists{/gist_id}", "starred_url": "https://api.github.com/users/chrisdembia/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/chrisdembia/subscriptions", "organizations_url": "https://api.github.com/users/chrisdembia/orgs", "repos_url": "https://api.github.com/users/chrisdembia/repos", "events_url": "https://api.github.com/users/chrisdembia/events{/privacy}", "received_events_url": "https://api.github.com/users/chrisdembia/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 46, "created_at": "2014-09-29T16:24:34Z", "updated_at": "2017-09-30T06:13:51Z", "closed_at": "2017-09-30T06:13:42Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "Sherm just got news that cmaes will be released under the Apache 2.0 license, so we will be able to include it directly in Simbody. I am willing to take the brunt of the work doing the integration, but will want help from @sherm1 and, if interested, @carmichaelong and @msdemers.\n\nFirst question:\n\nSince CMAES is a derivative-free optimizer, when someone creates an OptimizerSystem and they try to define a derivative function, what do we do?\n\nThings to keep in mind:\n- [x] How to handle constraint tolerance?\n- [x] Satisfying license requirements?\n- ~~[ ] Do all OptimizerRep subclasses need to override clone()? There's a definition in OptimizerRep.~~\n- [x] cmaes outputs to the console; should we allow this?\n- [x] Does hitting the maximum number of iterations count as finding a solution?\n- [ ] Check for memory leaks.\n- [x] Create simple CMAES example file.\n- [ ] Create example with an optimization, optimizing something about a model's behavior, using visualization to show the improvement with iterations of the optimization.\n- [ ] Allow restarts.\n- ~~[ ] Use cmaes' boundary transformation?~~\n- [ ] Allow a single parameter, but lambda >= 2 (change [this line](https://github.com/simbody/simbody/blob/master/SimTKmath/Optimizers/src/CMAESOptimizer.cpp#L51))\n- [ ] MPI: should the master run objective function evaluations? Make this an option. If master cannot run obj func, then having only one process will cause the solver to hang; prevent option=off with nproc = 1.\n- [ ] Make sure CMAES is well behaved with MPI when only using 1 proc.\n- [ ] Test that a diagnostics level of 2 causes the allcmaes.dat file to be written.\n- [ ] Make sure I only use \"popsize\" and \"stepsize\", never \"lambda\" or \"sigma\".\n- [ ] In readme, clarify how to find the MPI library with cmake.\n- [ ] SIMBODY_ENABLE_MPI - > SIMBODY_MPI.\n- [ ] Better MPI test: maybe actually run an executable using the mpi executable.\n- [ ] In SimbodyConfig.cmake, provide if mpi was used and which library was used. (use components?)\n- [ ] Diagnostics should print numbers using scientific notation.\n- [ ] Show how to use restarts in CMAESOptimization.cpp\n- [ ] processing cmaes errors (c-cmaes calls exit()?).\n- [ ] Allow turning off parallel.\n- [ ] Add MPI test to travis.\n- [ ] Document more clearly that to use MPI (0) obtain MPI, (1) compile with SIMBODY_MPI, (2) `opt.setAdvancedStrOption(\"parallel\", \"mpi\");`, (3) execute as `mpiexec -np 3 ...`.\n- [ ] Remove use of auto_ptr.\n- [ ] Clarify MPI diagnostics.\n- [ ] Don't include \"mpi.h\" in CMAESOptimizer.h?\n- [ ] Throw error if init_stepsize is not set.\n- [ ] Exception handling with MPI.\n", "reactions": {"url": "https://api.github.com/repos/simbody/simbody/issues/246/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/simbody/simbody/issues/246/timeline", "performed_via_github_app": null}, {"url": "https://api.github.com/repos/simbody/simbody/issues/247", "repository_url": "https://api.github.com/repos/simbody/simbody", "labels_url": "https://api.github.com/repos/simbody/simbody/issues/247/labels{/name}", "comments_url": "https://api.github.com/repos/simbody/simbody/issues/247/comments", "events_url": "https://api.github.com/repos/simbody/simbody/issues/247/events", "html_url": "https://github.com/simbody/simbody/issues/247", "id": 44317768, "node_id": "MDU6SXNzdWU0NDMxNzc2OA==", "number": 247, "title": "Continuous integration on Visual Studio / MSBuild.", "user": {"login": "chrisdembia", "id": 846001, "node_id": "MDQ6VXNlcjg0NjAwMQ==", "avatar_url": "https://avatars.githubusercontent.com/u/846001?v=4", "gravatar_id": "", "url": "https://api.github.com/users/chrisdembia", "html_url": "https://github.com/chrisdembia", "followers_url": "https://api.github.com/users/chrisdembia/followers", "following_url": "https://api.github.com/users/chrisdembia/following{/other_user}", "gists_url": "https://api.github.com/users/chrisdembia/gists{/gist_id}", "starred_url": "https://api.github.com/users/chrisdembia/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/chrisdembia/subscriptions", "organizations_url": "https://api.github.com/users/chrisdembia/orgs", "repos_url": "https://api.github.com/users/chrisdembia/repos", "events_url": "https://api.github.com/users/chrisdembia/events{/privacy}", "received_events_url": "https://api.github.com/users/chrisdembia/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 54361018, "node_id": "MDU6TGFiZWw1NDM2MTAxOA==", "url": "https://api.github.com/repos/simbody/simbody/labels/build", "name": "build", "color": "bfe5bf", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2014-09-29T16:59:55Z", "updated_at": "2014-12-06T01:53:58Z", "closed_at": "2014-12-06T01:53:58Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "There's some evidence that [shippable](http://docs.shippable.com/en/latest/index.html) provides csharp/msbuild support. See [here](https://github.com/rageshkrishna/csharp-sample).\n\nWe have previously looked into appveyor, but our builds take longer than they can give us for free.\n\nDrone.io supports c++ but not MSBuild.\n\nContinua.ci may support windows, but you have to download something yourself to use it.\n\n[BTK](https://github.com/Biomechanical-ToolKit/BTKCore) uses [Jenkins](http://ec2-54-226-241-28.compute-1.amazonaws.com:8080/view/All/job/BTKCore/45/console) for Windows.\n", "reactions": {"url": "https://api.github.com/repos/simbody/simbody/issues/247/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/simbody/simbody/issues/247/timeline", "performed_via_github_app": null}, {"url": "https://api.github.com/repos/simbody/simbody/issues/251", "repository_url": "https://api.github.com/repos/simbody/simbody", "labels_url": "https://api.github.com/repos/simbody/simbody/issues/251/labels{/name}", "comments_url": "https://api.github.com/repos/simbody/simbody/issues/251/comments", "events_url": "https://api.github.com/repos/simbody/simbody/issues/251/events", "html_url": "https://github.com/simbody/simbody/issues/251", "id": 46548016, "node_id": "MDU6SXNzdWU0NjU0ODAxNg==", "number": 251, "title": "OptimizerSystem::objectiveFunc should get f = nan upon entry.", "user": {"login": "chrisdembia", "id": 846001, "node_id": "MDQ6VXNlcjg0NjAwMQ==", "avatar_url": "https://avatars.githubusercontent.com/u/846001?v=4", "gravatar_id": "", "url": "https://api.github.com/users/chrisdembia", "html_url": "https://github.com/chrisdembia", "followers_url": "https://api.github.com/users/chrisdembia/followers", "following_url": "https://api.github.com/users/chrisdembia/following{/other_user}", "gists_url": "https://api.github.com/users/chrisdembia/gists{/gist_id}", "starred_url": "https://api.github.com/users/chrisdembia/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/chrisdembia/subscriptions", "organizations_url": "https://api.github.com/users/chrisdembia/orgs", "repos_url": "https://api.github.com/users/chrisdembia/repos", "events_url": "https://api.github.com/users/chrisdembia/events{/privacy}", "received_events_url": "https://api.github.com/users/chrisdembia/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 52267853, "node_id": "MDU6TGFiZWw1MjI2Nzg1Mw==", "url": "https://api.github.com/repos/simbody/simbody/labels/enhancement", "name": "enhancement", "color": "84b6eb", "default": true, "description": null}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2014-10-22T19:09:19Z", "updated_at": "2014-10-22T19:09:19Z", "closed_at": null, "author_association": "MEMBER", "active_lock_reason": null, "body": "I discussed this with @sherm1. Then, if f = nan comes back in objectiveFuncWrapper, throw an exception!\n", "reactions": {"url": "https://api.github.com/repos/simbody/simbody/issues/251/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/simbody/simbody/issues/251/timeline", "performed_via_github_app": null}, {"url": "https://api.github.com/repos/simbody/simbody/issues/254", "repository_url": "https://api.github.com/repos/simbody/simbody", "labels_url": "https://api.github.com/repos/simbody/simbody/issues/254/labels{/name}", "comments_url": "https://api.github.com/repos/simbody/simbody/issues/254/comments", "events_url": "https://api.github.com/repos/simbody/simbody/issues/254/events", "html_url": "https://github.com/simbody/simbody/issues/254", "id": 46931771, "node_id": "MDU6SXNzdWU0NjkzMTc3MQ==", "number": 254, "title": "Revert use of auto_ptr in CMAESOptimizer when we switch to C++11.", "user": {"login": "chrisdembia", "id": 846001, "node_id": "MDQ6VXNlcjg0NjAwMQ==", "avatar_url": "https://avatars.githubusercontent.com/u/846001?v=4", "gravatar_id": "", "url": "https://api.github.com/users/chrisdembia", "html_url": "https://github.com/chrisdembia", "followers_url": "https://api.github.com/users/chrisdembia/followers", "following_url": "https://api.github.com/users/chrisdembia/following{/other_user}", "gists_url": "https://api.github.com/users/chrisdembia/gists{/gist_id}", "starred_url": "https://api.github.com/users/chrisdembia/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/chrisdembia/subscriptions", "organizations_url": "https://api.github.com/users/chrisdembia/orgs", "repos_url": "https://api.github.com/users/chrisdembia/repos", "events_url": "https://api.github.com/users/chrisdembia/events{/privacy}", "received_events_url": "https://api.github.com/users/chrisdembia/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 52267853, "node_id": "MDU6TGFiZWw1MjI2Nzg1Mw==", "url": "https://api.github.com/repos/simbody/simbody/labels/enhancement", "name": "enhancement", "color": "84b6eb", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": {"login": "chrisdembia", "id": 846001, "node_id": "MDQ6VXNlcjg0NjAwMQ==", "avatar_url": "https://avatars.githubusercontent.com/u/846001?v=4", "gravatar_id": "", "url": "https://api.github.com/users/chrisdembia", "html_url": "https://github.com/chrisdembia", "followers_url": "https://api.github.com/users/chrisdembia/followers", "following_url": "https://api.github.com/users/chrisdembia/following{/other_user}", "gists_url": "https://api.github.com/users/chrisdembia/gists{/gist_id}", "starred_url": "https://api.github.com/users/chrisdembia/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/chrisdembia/subscriptions", "organizations_url": "https://api.github.com/users/chrisdembia/orgs", "repos_url": "https://api.github.com/users/chrisdembia/repos", "events_url": "https://api.github.com/users/chrisdembia/events{/privacy}", "received_events_url": "https://api.github.com/users/chrisdembia/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "chrisdembia", "id": 846001, "node_id": "MDQ6VXNlcjg0NjAwMQ==", "avatar_url": "https://avatars.githubusercontent.com/u/846001?v=4", "gravatar_id": "", "url": "https://api.github.com/users/chrisdembia", "html_url": "https://github.com/chrisdembia", "followers_url": "https://api.github.com/users/chrisdembia/followers", "following_url": "https://api.github.com/users/chrisdembia/following{/other_user}", "gists_url": "https://api.github.com/users/chrisdembia/gists{/gist_id}", "starred_url": "https://api.github.com/users/chrisdembia/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/chrisdembia/subscriptions", "organizations_url": "https://api.github.com/users/chrisdembia/orgs", "repos_url": "https://api.github.com/users/chrisdembia/repos", "events_url": "https://api.github.com/users/chrisdembia/events{/privacy}", "received_events_url": "https://api.github.com/users/chrisdembia/received_events", "type": "User", "site_admin": false}], "milestone": {"url": "https://api.github.com/repos/simbody/simbody/milestones/1", "html_url": "https://github.com/simbody/simbody/milestone/1", "labels_url": "https://api.github.com/repos/simbody/simbody/milestones/1/labels", "id": 910475, "node_id": "MDk6TWlsZXN0b25lOTEwNDc1", "number": 1, "title": "Simbody 4.0", "description": "This milestone collects Issues and Pull Requests that must be dealt with before Simbody 4.0 can be released. This is a prerequisite for OpenSim 4.0.", "creator": {"login": "sherm1", "id": 4088016, "node_id": "MDQ6VXNlcjQwODgwMTY=", "avatar_url": "https://avatars.githubusercontent.com/u/4088016?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sherm1", "html_url": "https://github.com/sherm1", "followers_url": "https://api.github.com/users/sherm1/followers", "following_url": "https://api.github.com/users/sherm1/following{/other_user}", "gists_url": "https://api.github.com/users/sherm1/gists{/gist_id}", "starred_url": "https://api.github.com/users/sherm1/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sherm1/subscriptions", "organizations_url": "https://api.github.com/users/sherm1/orgs", "repos_url": "https://api.github.com/users/sherm1/repos", "events_url": "https://api.github.com/users/sherm1/events{/privacy}", "received_events_url": "https://api.github.com/users/sherm1/received_events", "type": "User", "site_admin": false}, "open_issues": 12, "closed_issues": 13, "state": "open", "created_at": "2014-12-19T18:48:14Z", "updated_at": "2015-12-23T21:15:41Z", "due_on": "2015-06-01T07:00:00Z", "closed_at": null}, "comments": 0, "created_at": "2014-10-27T17:08:55Z", "updated_at": "2015-01-05T21:26:31Z", "closed_at": "2015-01-05T21:26:31Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "See #253.\n", "reactions": {"url": "https://api.github.com/repos/simbody/simbody/issues/254/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/simbody/simbody/issues/254/timeline", "performed_via_github_app": null}, {"url": "https://api.github.com/repos/simbody/simbody/issues/255", "repository_url": "https://api.github.com/repos/simbody/simbody", "labels_url": "https://api.github.com/repos/simbody/simbody/issues/255/labels{/name}", "comments_url": "https://api.github.com/repos/simbody/simbody/issues/255/comments", "events_url": "https://api.github.com/repos/simbody/simbody/issues/255/events", "html_url": "https://github.com/simbody/simbody/issues/255", "id": 47348493, "node_id": "MDU6SXNzdWU0NzM0ODQ5Mw==", "number": 255, "title": "Remove lapack, other libraries from SimbodyConfig.cmake", "user": {"login": "chrisdembia", "id": 846001, "node_id": "MDQ6VXNlcjg0NjAwMQ==", "avatar_url": "https://avatars.githubusercontent.com/u/846001?v=4", "gravatar_id": "", "url": "https://api.github.com/users/chrisdembia", "html_url": "https://github.com/chrisdembia", "followers_url": "https://api.github.com/users/chrisdembia/followers", "following_url": "https://api.github.com/users/chrisdembia/following{/other_user}", "gists_url": "https://api.github.com/users/chrisdembia/gists{/gist_id}", "starred_url": "https://api.github.com/users/chrisdembia/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/chrisdembia/subscriptions", "organizations_url": "https://api.github.com/users/chrisdembia/orgs", "repos_url": "https://api.github.com/users/chrisdembia/repos", "events_url": "https://api.github.com/users/chrisdembia/events{/privacy}", "received_events_url": "https://api.github.com/users/chrisdembia/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 52267851, "node_id": "MDU6TGFiZWw1MjI2Nzg1MQ==", "url": "https://api.github.com/repos/simbody/simbody/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}, {"id": 54361018, "node_id": "MDU6TGFiZWw1NDM2MTAxOA==", "url": "https://api.github.com/repos/simbody/simbody/labels/build", "name": "build", "color": "bfe5bf", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2014-10-31T00:28:05Z", "updated_at": "2014-11-03T18:36:58Z", "closed_at": "2014-11-03T18:36:58Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "[This line](https://github.com/simbody/simbody/blob/master/cmake/SimbodyConfig.cmake.in#L72) in SimbodyConfig.cmake(.in) causes Simbody clients to link to libblas, liblapack, even if they chose to build Simbody with a different lapack/blas. The Config file should use instead the value of LAPACK_BEING_USED.\n", "reactions": {"url": "https://api.github.com/repos/simbody/simbody/issues/255/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/simbody/simbody/issues/255/timeline", "performed_via_github_app": null}, {"url": "https://api.github.com/repos/simbody/simbody/issues/257", "repository_url": "https://api.github.com/repos/simbody/simbody", "labels_url": "https://api.github.com/repos/simbody/simbody/issues/257/labels{/name}", "comments_url": "https://api.github.com/repos/simbody/simbody/issues/257/comments", "events_url": "https://api.github.com/repos/simbody/simbody/issues/257/events", "html_url": "https://github.com/simbody/simbody/issues/257", "id": 47569412, "node_id": "MDU6SXNzdWU0NzU2OTQxMg==", "number": 257, "title": "The installed examples Makefile does not work as is", "user": {"login": "chrisdembia", "id": 846001, "node_id": "MDQ6VXNlcjg0NjAwMQ==", "avatar_url": "https://avatars.githubusercontent.com/u/846001?v=4", "gravatar_id": "", "url": "https://api.github.com/users/chrisdembia", "html_url": "https://github.com/chrisdembia", "followers_url": "https://api.github.com/users/chrisdembia/followers", "following_url": "https://api.github.com/users/chrisdembia/following{/other_user}", "gists_url": "https://api.github.com/users/chrisdembia/gists{/gist_id}", "starred_url": "https://api.github.com/users/chrisdembia/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/chrisdembia/subscriptions", "organizations_url": "https://api.github.com/users/chrisdembia/orgs", "repos_url": "https://api.github.com/users/chrisdembia/repos", "events_url": "https://api.github.com/users/chrisdembia/events{/privacy}", "received_events_url": "https://api.github.com/users/chrisdembia/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 54361018, "node_id": "MDU6TGFiZWw1NDM2MTAxOA==", "url": "https://api.github.com/repos/simbody/simbody/labels/build", "name": "build", "color": "bfe5bf", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2014-11-03T07:38:24Z", "updated_at": "2014-12-01T03:49:52Z", "closed_at": "2014-12-01T03:49:52Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "For example, headers are not in /include anymore.\n", "reactions": {"url": "https://api.github.com/repos/simbody/simbody/issues/257/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/simbody/simbody/issues/257/timeline", "performed_via_github_app": null}, {"url": "https://api.github.com/repos/simbody/simbody/issues/259", "repository_url": "https://api.github.com/repos/simbody/simbody", "labels_url": "https://api.github.com/repos/simbody/simbody/issues/259/labels{/name}", "comments_url": "https://api.github.com/repos/simbody/simbody/issues/259/comments", "events_url": "https://api.github.com/repos/simbody/simbody/issues/259/events", "html_url": "https://github.com/simbody/simbody/issues/259", "id": 47632171, "node_id": "MDU6SXNzdWU0NzYzMjE3MQ==", "number": 259, "title": "don't install debug binaries for examples over release ones", "user": {"login": "sherm1", "id": 4088016, "node_id": "MDQ6VXNlcjQwODgwMTY=", "avatar_url": "https://avatars.githubusercontent.com/u/4088016?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sherm1", "html_url": "https://github.com/sherm1", "followers_url": "https://api.github.com/users/sherm1/followers", "following_url": "https://api.github.com/users/sherm1/following{/other_user}", "gists_url": "https://api.github.com/users/sherm1/gists{/gist_id}", "starred_url": "https://api.github.com/users/sherm1/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sherm1/subscriptions", "organizations_url": "https://api.github.com/users/sherm1/orgs", "repos_url": "https://api.github.com/users/sherm1/repos", "events_url": "https://api.github.com/users/sherm1/events{/privacy}", "received_events_url": "https://api.github.com/users/sherm1/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 52267851, "node_id": "MDU6TGFiZWw1MjI2Nzg1MQ==", "url": "https://api.github.com/repos/simbody/simbody/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}, {"id": 54361018, "node_id": "MDU6TGFiZWw1NDM2MTAxOA==", "url": "https://api.github.com/repos/simbody/simbody/labels/build", "name": "build", "color": "bfe5bf", "default": false, "description": null}, {"id": 108217628, "node_id": "MDU6TGFiZWwxMDgyMTc2Mjg=", "url": "https://api.github.com/repos/simbody/simbody/labels/help%20wanted", "name": "help wanted", "color": "009800", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2014-11-03T19:16:29Z", "updated_at": "2014-12-13T08:23:19Z", "closed_at": "2014-12-13T06:31:36Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "Currently if you build and install a Debug version of Simbody, the libraries are correctly installed with an \"_d\" suffix, but the example binaries are written to the `examples/bin` directory using the same names as Release binaries. Users might inadvertently be running Debug versions of the examples, meaning everything will run at least 10X too slow and give Simbody a bad name. That's not good.\n\nWe should either (a) not install debug example binaries, or (b) stick on an \"_d\" suffix when they are installed. I'm not sure whether they should always be built with \"_d\" or just have their names changed as they are installed.\n\nThis is similar to issue #5 for the simbody-visualizer.\n", "reactions": {"url": "https://api.github.com/repos/simbody/simbody/issues/259/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/simbody/simbody/issues/259/timeline", "performed_via_github_app": null}, {"url": "https://api.github.com/repos/simbody/simbody/issues/260", "repository_url": "https://api.github.com/repos/simbody/simbody", "labels_url": "https://api.github.com/repos/simbody/simbody/issues/260/labels{/name}", "comments_url": "https://api.github.com/repos/simbody/simbody/issues/260/comments", "events_url": "https://api.github.com/repos/simbody/simbody/issues/260/events", "html_url": "https://github.com/simbody/simbody/issues/260", "id": 47633699, "node_id": "MDU6SXNzdWU0NzYzMzY5OQ==", "number": 260, "title": "example name consistency", "user": {"login": "sherm1", "id": 4088016, "node_id": "MDQ6VXNlcjQwODgwMTY=", "avatar_url": "https://avatars.githubusercontent.com/u/4088016?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sherm1", "html_url": "https://github.com/sherm1", "followers_url": "https://api.github.com/users/sherm1/followers", "following_url": "https://api.github.com/users/sherm1/following{/other_user}", "gists_url": "https://api.github.com/users/sherm1/gists{/gist_id}", "starred_url": "https://api.github.com/users/sherm1/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sherm1/subscriptions", "organizations_url": "https://api.github.com/users/sherm1/orgs", "repos_url": "https://api.github.com/users/sherm1/repos", "events_url": "https://api.github.com/users/sherm1/events{/privacy}", "received_events_url": "https://api.github.com/users/sherm1/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 54361018, "node_id": "MDU6TGFiZWw1NDM2MTAxOA==", "url": "https://api.github.com/repos/simbody/simbody/labels/build", "name": "build", "color": "bfe5bf", "default": false, "description": null}, {"id": 108217628, "node_id": "MDU6TGFiZWwxMDgyMTc2Mjg=", "url": "https://api.github.com/repos/simbody/simbody/labels/help%20wanted", "name": "help wanted", "color": "009800", "default": true, "description": null}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2014-11-03T19:30:17Z", "updated_at": "2014-11-04T05:47:49Z", "closed_at": null, "author_association": "MEMBER", "active_lock_reason": null, "body": "Currently many example names begin with `Example` and many do not. It seems redundant to use the `Example` prefix since they generally get installed under an `examples` subdirectory. But, the Simbody build environment (as opposed to installed Simbody) puts all executables in the same directory with the just-built shared libraries. That ensures that the just-built libraries are used when tests and examples are run from the build environment; if they were not in the same directory then a library search path would get invoked that might resolve to an out-of-date library.\n\nThat every-executable-in-the-same-boat requirement means that every executable created by the Simbody build environment must have a unique name. That includes the examples, regression tests, and ad hoc test programs. Consequently most tests start with `Test` and most examples start with `Example`, keeping us out of trouble if there is a \"pendulum\" regression test and a \"pendulum\" example. A better scheme might be to automatically prefix executables with `example-, regr-, adhoc-` or something like that when they are built. That would allow each group to use the same names where it makes sense to do so and avoid trouble when we inevitably get a name clash.\n\nWhen the example executables are installed, the `example-` prefix should be removed so that the installed names are shorter and not redundant with the directory in which they are contained.\n\nIs this a good idea? \n", "reactions": {"url": "https://api.github.com/repos/simbody/simbody/issues/260/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/simbody/simbody/issues/260/timeline", "performed_via_github_app": null}, {"url": "https://api.github.com/repos/simbody/simbody/issues/263", "repository_url": "https://api.github.com/repos/simbody/simbody", "labels_url": "https://api.github.com/repos/simbody/simbody/issues/263/labels{/name}", "comments_url": "https://api.github.com/repos/simbody/simbody/issues/263/comments", "events_url": "https://api.github.com/repos/simbody/simbody/issues/263/events", "html_url": "https://github.com/simbody/simbody/issues/263", "id": 48114534, "node_id": "MDU6SXNzdWU0ODExNDUzNA==", "number": 263, "title": "Get snapshot of current active contacts", "user": {"login": "texasflood", "id": 8463994, "node_id": "MDQ6VXNlcjg0NjM5OTQ=", "avatar_url": "https://avatars.githubusercontent.com/u/8463994?v=4", "gravatar_id": "", "url": "https://api.github.com/users/texasflood", "html_url": "https://github.com/texasflood", "followers_url": "https://api.github.com/users/texasflood/followers", "following_url": "https://api.github.com/users/texasflood/following{/other_user}", "gists_url": "https://api.github.com/users/texasflood/gists{/gist_id}", "starred_url": "https://api.github.com/users/texasflood/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/texasflood/subscriptions", "organizations_url": "https://api.github.com/users/texasflood/orgs", "repos_url": "https://api.github.com/users/texasflood/repos", "events_url": "https://api.github.com/users/texasflood/events{/privacy}", "received_events_url": "https://api.github.com/users/texasflood/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 52267853, "node_id": "MDU6TGFiZWw1MjI2Nzg1Mw==", "url": "https://api.github.com/repos/simbody/simbody/labels/enhancement", "name": "enhancement", "color": "84b6eb", "default": true, "description": null}, {"id": 62665552, "node_id": "MDU6TGFiZWw2MjY2NTU1Mg==", "url": "https://api.github.com/repos/simbody/simbody/labels/contact", "name": "contact", "color": "eb6420", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": {"url": "https://api.github.com/repos/simbody/simbody/milestones/1", "html_url": "https://github.com/simbody/simbody/milestone/1", "labels_url": "https://api.github.com/repos/simbody/simbody/milestones/1/labels", "id": 910475, "node_id": "MDk6TWlsZXN0b25lOTEwNDc1", "number": 1, "title": "Simbody 4.0", "description": "This milestone collects Issues and Pull Requests that must be dealt with before Simbody 4.0 can be released. This is a prerequisite for OpenSim 4.0.", "creator": {"login": "sherm1", "id": 4088016, "node_id": "MDQ6VXNlcjQwODgwMTY=", "avatar_url": "https://avatars.githubusercontent.com/u/4088016?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sherm1", "html_url": "https://github.com/sherm1", "followers_url": "https://api.github.com/users/sherm1/followers", "following_url": "https://api.github.com/users/sherm1/following{/other_user}", "gists_url": "https://api.github.com/users/sherm1/gists{/gist_id}", "starred_url": "https://api.github.com/users/sherm1/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sherm1/subscriptions", "organizations_url": "https://api.github.com/users/sherm1/orgs", "repos_url": "https://api.github.com/users/sherm1/repos", "events_url": "https://api.github.com/users/sherm1/events{/privacy}", "received_events_url": "https://api.github.com/users/sherm1/received_events", "type": "User", "site_admin": false}, "open_issues": 12, "closed_issues": 13, "state": "open", "created_at": "2014-12-19T18:48:14Z", "updated_at": "2015-12-23T21:15:41Z", "due_on": "2015-06-01T07:00:00Z", "closed_at": null}, "comments": 4, "created_at": "2014-11-07T18:27:26Z", "updated_at": "2015-02-28T00:16:32Z", "closed_at": "2015-02-28T00:09:57Z", "author_association": "NONE", "active_lock_reason": null, "body": "There should be some way of getting information of what contact surface are currently in contact. My thoughts on how to implement this would be to have a function like this:\n\n<code>bool isThereContact (State state, ContactTrackerSubsystem contactSystem, MobilizedBody mobod1, ContactSurface surface1, MobilizedBody mobod2, ContactSurface surface2);</code>\n\nwhich tells you whether the given unique pair of the contact surface associated with a particular <code>MobilizedBody</code> are currently in contact. As multiple Mobods can use the same <code>ContactSurface</code>, both must be passed to the function.\n\nThis would be very helpful to implement some control algorithms which change state based on contacts.\n", "reactions": {"url": "https://api.github.com/repos/simbody/simbody/issues/263/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/simbody/simbody/issues/263/timeline", "performed_via_github_app": null}, {"url": "https://api.github.com/repos/simbody/simbody/issues/264", "repository_url": "https://api.github.com/repos/simbody/simbody", "labels_url": "https://api.github.com/repos/simbody/simbody/issues/264/labels{/name}", "comments_url": "https://api.github.com/repos/simbody/simbody/issues/264/comments", "events_url": "https://api.github.com/repos/simbody/simbody/issues/264/events", "html_url": "https://github.com/simbody/simbody/issues/264", "id": 48447818, "node_id": "MDU6SXNzdWU0ODQ0NzgxOA==", "number": 264, "title": "Handling relative paths. Confusion with deconstructPathname", "user": {"login": "chrisdembia", "id": 846001, "node_id": "MDQ6VXNlcjg0NjAwMQ==", "avatar_url": "https://avatars.githubusercontent.com/u/846001?v=4", "gravatar_id": "", "url": "https://api.github.com/users/chrisdembia", "html_url": "https://github.com/chrisdembia", "followers_url": "https://api.github.com/users/chrisdembia/followers", "following_url": "https://api.github.com/users/chrisdembia/following{/other_user}", "gists_url": "https://api.github.com/users/chrisdembia/gists{/gist_id}", "starred_url": "https://api.github.com/users/chrisdembia/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/chrisdembia/subscriptions", "organizations_url": "https://api.github.com/users/chrisdembia/orgs", "repos_url": "https://api.github.com/users/chrisdembia/repos", "events_url": "https://api.github.com/users/chrisdembia/events{/privacy}", "received_events_url": "https://api.github.com/users/chrisdembia/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 52267853, "node_id": "MDU6TGFiZWw1MjI2Nzg1Mw==", "url": "https://api.github.com/repos/simbody/simbody/labels/enhancement", "name": "enhancement", "color": "84b6eb", "default": true, "description": null}, {"id": 108217628, "node_id": "MDU6TGFiZWwxMDgyMTc2Mjg=", "url": "https://api.github.com/repos/simbody/simbody/labels/help%20wanted", "name": "help wanted", "color": "009800", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": {"login": "carmichaelong", "id": 7455790, "node_id": "MDQ6VXNlcjc0NTU3OTA=", "avatar_url": "https://avatars.githubusercontent.com/u/7455790?v=4", "gravatar_id": "", "url": "https://api.github.com/users/carmichaelong", "html_url": "https://github.com/carmichaelong", "followers_url": "https://api.github.com/users/carmichaelong/followers", "following_url": "https://api.github.com/users/carmichaelong/following{/other_user}", "gists_url": "https://api.github.com/users/carmichaelong/gists{/gist_id}", "starred_url": "https://api.github.com/users/carmichaelong/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/carmichaelong/subscriptions", "organizations_url": "https://api.github.com/users/carmichaelong/orgs", "repos_url": "https://api.github.com/users/carmichaelong/repos", "events_url": "https://api.github.com/users/carmichaelong/events{/privacy}", "received_events_url": "https://api.github.com/users/carmichaelong/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "carmichaelong", "id": 7455790, "node_id": "MDQ6VXNlcjc0NTU3OTA=", "avatar_url": "https://avatars.githubusercontent.com/u/7455790?v=4", "gravatar_id": "", "url": "https://api.github.com/users/carmichaelong", "html_url": "https://github.com/carmichaelong", "followers_url": "https://api.github.com/users/carmichaelong/followers", "following_url": "https://api.github.com/users/carmichaelong/following{/other_user}", "gists_url": "https://api.github.com/users/carmichaelong/gists{/gist_id}", "starred_url": "https://api.github.com/users/carmichaelong/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/carmichaelong/subscriptions", "organizations_url": "https://api.github.com/users/carmichaelong/orgs", "repos_url": "https://api.github.com/users/carmichaelong/repos", "events_url": "https://api.github.com/users/carmichaelong/events{/privacy}", "received_events_url": "https://api.github.com/users/carmichaelong/received_events", "type": "User", "site_admin": false}], "milestone": {"url": "https://api.github.com/repos/simbody/simbody/milestones/1", "html_url": "https://github.com/simbody/simbody/milestone/1", "labels_url": "https://api.github.com/repos/simbody/simbody/milestones/1/labels", "id": 910475, "node_id": "MDk6TWlsZXN0b25lOTEwNDc1", "number": 1, "title": "Simbody 4.0", "description": "This milestone collects Issues and Pull Requests that must be dealt with before Simbody 4.0 can be released. This is a prerequisite for OpenSim 4.0.", "creator": {"login": "sherm1", "id": 4088016, "node_id": "MDQ6VXNlcjQwODgwMTY=", "avatar_url": "https://avatars.githubusercontent.com/u/4088016?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sherm1", "html_url": "https://github.com/sherm1", "followers_url": "https://api.github.com/users/sherm1/followers", "following_url": "https://api.github.com/users/sherm1/following{/other_user}", "gists_url": "https://api.github.com/users/sherm1/gists{/gist_id}", "starred_url": "https://api.github.com/users/sherm1/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sherm1/subscriptions", "organizations_url": "https://api.github.com/users/sherm1/orgs", "repos_url": "https://api.github.com/users/sherm1/repos", "events_url": "https://api.github.com/users/sherm1/events{/privacy}", "received_events_url": "https://api.github.com/users/sherm1/received_events", "type": "User", "site_admin": false}, "open_issues": 12, "closed_issues": 13, "state": "open", "created_at": "2014-12-19T18:48:14Z", "updated_at": "2015-12-23T21:15:41Z", "due_on": "2015-06-01T07:00:00Z", "closed_at": null}, "comments": 13, "created_at": "2014-11-11T23:04:42Z", "updated_at": "2015-05-15T18:26:43Z", "closed_at": "2015-05-15T18:26:35Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "I am working on https://github.com/opensim-org/opensim-core/issues/118. @sherm1 , in this issue you claim that\n\n> FYI, Simbody has a utility class SimTK::Pathname that provides platform-independent handling of relative path names so that changing directory isn't required.\n\nBased on the Pathname API, this does not seem possible. So I have been trying to alter Pathname::getAbsolutePathname to suit my needs.\n\nMy objective is to take a path `pathname` that is relative an arbitrary path `base`, and express it as either (1) a relative path that is relative to my cwd, or (2) an absolute path.\n\nI made the necessary changes to `getAbsolutePathname` so that it could use a `base` that is not the cwd. However, I misunderstood what `deconstructPathname` does. The documentation contains the confusing statement:\n\n> \".\" starts an absolute path name which is relative to the current working directory\n\nHow can an absolute path be relative to something else? I fed this method a path like `../../myfile` and was told that this is an absolute path. I learned that `deconstructPathname` is trying to do more than it advertises: it converts relative paths to absolute paths if you pass it \"keywords\" such as `../`, `./`, `@`. So from this perspective, indeed, `./` specifies an absolute path. I feel this is improper; `getAbsolutePathname` should do that; I simply wanted to deconstruct the path as given. \n\nI believe my current method of trying to do (1) or (2) cannot be done simply by modifying `getAbsolutePathname`. \n\n@sherm1 does Pathname, as is, provide the functionality I seek? If not, I would like to alter `deconstructPathname` so that it strictly decomposes a given path, and does not try to create an absolute path based on keywords. I'm happy to take other suggestions as well.\n", "reactions": {"url": "https://api.github.com/repos/simbody/simbody/issues/264/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/simbody/simbody/issues/264/timeline", "performed_via_github_app": null}, {"url": "https://api.github.com/repos/simbody/simbody/issues/274", "repository_url": "https://api.github.com/repos/simbody/simbody", "labels_url": "https://api.github.com/repos/simbody/simbody/issues/274/labels{/name}", "comments_url": "https://api.github.com/repos/simbody/simbody/issues/274/comments", "events_url": "https://api.github.com/repos/simbody/simbody/issues/274/events", "html_url": "https://github.com/simbody/simbody/issues/274", "id": 50485830, "node_id": "MDU6SXNzdWU1MDQ4NTgzMA==", "number": 274, "title": "Create restructured task space API ", "user": {"login": "sherm1", "id": 4088016, "node_id": "MDQ6VXNlcjQwODgwMTY=", "avatar_url": "https://avatars.githubusercontent.com/u/4088016?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sherm1", "html_url": "https://github.com/sherm1", "followers_url": "https://api.github.com/users/sherm1/followers", "following_url": "https://api.github.com/users/sherm1/following{/other_user}", "gists_url": "https://api.github.com/users/sherm1/gists{/gist_id}", "starred_url": "https://api.github.com/users/sherm1/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sherm1/subscriptions", "organizations_url": "https://api.github.com/users/sherm1/orgs", "repos_url": "https://api.github.com/users/sherm1/repos", "events_url": "https://api.github.com/users/sherm1/events{/privacy}", "received_events_url": "https://api.github.com/users/sherm1/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 52267853, "node_id": "MDU6TGFiZWw1MjI2Nzg1Mw==", "url": "https://api.github.com/repos/simbody/simbody/labels/enhancement", "name": "enhancement", "color": "84b6eb", "default": true, "description": null}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 12, "created_at": "2014-12-01T04:05:34Z", "updated_at": "2014-12-01T22:02:59Z", "closed_at": null, "author_association": "MEMBER", "active_lock_reason": null, "body": "We have a TaskSpace prototype class created by @chrisdembia and included along with the Simbody 3.5 examples (in the `examples/shared` directory). From that project we learned how the classes should be restructured for more general prioritized task space support, with lots of useful discussion in PR #238. I'm going to copy some of that here for future reference, including the to-do checklist.\n", "reactions": {"url": "https://api.github.com/repos/simbody/simbody/issues/274/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/simbody/simbody/issues/274/timeline", "performed_via_github_app": null}, {"url": "https://api.github.com/repos/simbody/simbody/issues/275", "repository_url": "https://api.github.com/repos/simbody/simbody", "labels_url": "https://api.github.com/repos/simbody/simbody/issues/275/labels{/name}", "comments_url": "https://api.github.com/repos/simbody/simbody/issues/275/comments", "events_url": "https://api.github.com/repos/simbody/simbody/issues/275/events", "html_url": "https://github.com/simbody/simbody/issues/275", "id": 50493736, "node_id": "MDU6SXNzdWU1MDQ5MzczNg==", "number": 275, "title": "Simbody 3.5 release todo list", "user": {"login": "sherm1", "id": 4088016, "node_id": "MDQ6VXNlcjQwODgwMTY=", "avatar_url": "https://avatars.githubusercontent.com/u/4088016?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sherm1", "html_url": "https://github.com/sherm1", "followers_url": "https://api.github.com/users/sherm1/followers", "following_url": "https://api.github.com/users/sherm1/following{/other_user}", "gists_url": "https://api.github.com/users/sherm1/gists{/gist_id}", "starred_url": "https://api.github.com/users/sherm1/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sherm1/subscriptions", "organizations_url": "https://api.github.com/users/sherm1/orgs", "repos_url": "https://api.github.com/users/sherm1/repos", "events_url": "https://api.github.com/users/sherm1/events{/privacy}", "received_events_url": "https://api.github.com/users/sherm1/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 54361018, "node_id": "MDU6TGFiZWw1NDM2MTAxOA==", "url": "https://api.github.com/repos/simbody/simbody/labels/build", "name": "build", "color": "bfe5bf", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 34, "created_at": "2014-12-01T07:01:39Z", "updated_at": "2014-12-19T06:05:54Z", "closed_at": "2014-12-18T22:09:22Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "- [x] update changelog (and convert it to markdown)\n- [x] write CONTRIBUTING.md\n- [x] in README.md, replace \"3.4\" with \"3.5\" (PR #291)\n- [x] check that README.md is up to date\n- [x] read through tutorial, fix links and text as needed\n- [x] update version number for advanced user's manual\n- [x] check theory manual\n- [x] post doxygen on simtk.org\n- [x] get Jos\u00e9's blessing on the debian subdirectory \n- [x] make 3.5 branch\n- [x] make 3.5 release (tag)\n- [x] delete 3.3 branch\n- [x] update master branch to 3.6\n- [x] announce release on forum\n", "reactions": {"url": "https://api.github.com/repos/simbody/simbody/issues/275/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/simbody/simbody/issues/275/timeline", "performed_via_github_app": null}, {"url": "https://api.github.com/repos/simbody/simbody/issues/276", "repository_url": "https://api.github.com/repos/simbody/simbody", "labels_url": "https://api.github.com/repos/simbody/simbody/issues/276/labels{/name}", "comments_url": "https://api.github.com/repos/simbody/simbody/issues/276/comments", "events_url": "https://api.github.com/repos/simbody/simbody/issues/276/events", "html_url": "https://github.com/simbody/simbody/issues/276", "id": 51018759, "node_id": "MDU6SXNzdWU1MTAxODc1OQ==", "number": 276, "title": "Nuget warnings in Simbody AppVeyor build", "user": {"login": "sherm1", "id": 4088016, "node_id": "MDQ6VXNlcjQwODgwMTY=", "avatar_url": "https://avatars.githubusercontent.com/u/4088016?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sherm1", "html_url": "https://github.com/sherm1", "followers_url": "https://api.github.com/users/sherm1/followers", "following_url": "https://api.github.com/users/sherm1/following{/other_user}", "gists_url": "https://api.github.com/users/sherm1/gists{/gist_id}", "starred_url": "https://api.github.com/users/sherm1/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sherm1/subscriptions", "organizations_url": "https://api.github.com/users/sherm1/orgs", "repos_url": "https://api.github.com/users/sherm1/repos", "events_url": "https://api.github.com/users/sherm1/events{/privacy}", "received_events_url": "https://api.github.com/users/sherm1/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 54361018, "node_id": "MDU6TGFiZWw1NDM2MTAxOA==", "url": "https://api.github.com/repos/simbody/simbody/labels/build", "name": "build", "color": "bfe5bf", "default": false, "description": null}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2014-12-04T19:41:01Z", "updated_at": "2014-12-18T18:03:58Z", "closed_at": null, "author_association": "MEMBER", "active_lock_reason": null, "body": "Nuget warnings appear at the end of the build log, [here](https://ci.appveyor.com/project/chrisdembia/simbody-737/build/1.0.16#L247) for example.\n\nThis is occurring when simbody/simbody repo is built, but I noticed there are no such warnings for chrisdembia/simbody. Did you fix something, @chrisdembia?\n", "reactions": {"url": "https://api.github.com/repos/simbody/simbody/issues/276/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/simbody/simbody/issues/276/timeline", "performed_via_github_app": null}, {"url": "https://api.github.com/repos/simbody/simbody/issues/280", "repository_url": "https://api.github.com/repos/simbody/simbody", "labels_url": "https://api.github.com/repos/simbody/simbody/issues/280/labels{/name}", "comments_url": "https://api.github.com/repos/simbody/simbody/issues/280/comments", "events_url": "https://api.github.com/repos/simbody/simbody/issues/280/events", "html_url": "https://github.com/simbody/simbody/issues/280", "id": 51171199, "node_id": "MDU6SXNzdWU1MTE3MTE5OQ==", "number": 280, "title": "[travis] reject pr's containing tabs", "user": {"login": "chrisdembia", "id": 846001, "node_id": "MDQ6VXNlcjg0NjAwMQ==", "avatar_url": "https://avatars.githubusercontent.com/u/846001?v=4", "gravatar_id": "", "url": "https://api.github.com/users/chrisdembia", "html_url": "https://github.com/chrisdembia", "followers_url": "https://api.github.com/users/chrisdembia/followers", "following_url": "https://api.github.com/users/chrisdembia/following{/other_user}", "gists_url": "https://api.github.com/users/chrisdembia/gists{/gist_id}", "starred_url": "https://api.github.com/users/chrisdembia/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/chrisdembia/subscriptions", "organizations_url": "https://api.github.com/users/chrisdembia/orgs", "repos_url": "https://api.github.com/users/chrisdembia/repos", "events_url": "https://api.github.com/users/chrisdembia/events{/privacy}", "received_events_url": "https://api.github.com/users/chrisdembia/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 54361018, "node_id": "MDU6TGFiZWw1NDM2MTAxOA==", "url": "https://api.github.com/repos/simbody/simbody/labels/build", "name": "build", "color": "bfe5bf", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2014-12-06T04:58:59Z", "updated_at": "2014-12-08T00:01:39Z", "closed_at": "2014-12-08T00:01:39Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "This is already done in OpenSim. Just need to copy over a few lines.\n", "reactions": {"url": "https://api.github.com/repos/simbody/simbody/issues/280/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/simbody/simbody/issues/280/timeline", "performed_via_github_app": null}, {"url": "https://api.github.com/repos/simbody/simbody/issues/288", "repository_url": "https://api.github.com/repos/simbody/simbody", "labels_url": "https://api.github.com/repos/simbody/simbody/issues/288/labels{/name}", "comments_url": "https://api.github.com/repos/simbody/simbody/issues/288/comments", "events_url": "https://api.github.com/repos/simbody/simbody/issues/288/events", "html_url": "https://github.com/simbody/simbody/issues/288", "id": 51587124, "node_id": "MDU6SXNzdWU1MTU4NzEyNA==", "number": 288, "title": "[cmaes] c-cmaes currently prints error messages unconditionally", "user": {"login": "chrisdembia", "id": 846001, "node_id": "MDQ6VXNlcjg0NjAwMQ==", "avatar_url": "https://avatars.githubusercontent.com/u/846001?v=4", "gravatar_id": "", "url": "https://api.github.com/users/chrisdembia", "html_url": "https://github.com/chrisdembia", "followers_url": "https://api.github.com/users/chrisdembia/followers", "following_url": "https://api.github.com/users/chrisdembia/following{/other_user}", "gists_url": "https://api.github.com/users/chrisdembia/gists{/gist_id}", "starred_url": "https://api.github.com/users/chrisdembia/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/chrisdembia/subscriptions", "organizations_url": "https://api.github.com/users/chrisdembia/orgs", "repos_url": "https://api.github.com/users/chrisdembia/repos", "events_url": "https://api.github.com/users/chrisdembia/events{/privacy}", "received_events_url": "https://api.github.com/users/chrisdembia/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 52267851, "node_id": "MDU6TGFiZWw1MjI2Nzg1MQ==", "url": "https://api.github.com/repos/simbody/simbody/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2014-12-10T17:34:53Z", "updated_at": "2014-12-10T18:01:40Z", "closed_at": null, "author_association": "MEMBER", "active_lock_reason": null, "body": "See related issue https://github.com/CMA-ES/c-cmaes/issues/8.\n", "reactions": {"url": "https://api.github.com/repos/simbody/simbody/issues/288/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/simbody/simbody/issues/288/timeline", "performed_via_github_app": null}, {"url": "https://api.github.com/repos/simbody/simbody/issues/290", "repository_url": "https://api.github.com/repos/simbody/simbody", "labels_url": "https://api.github.com/repos/simbody/simbody/issues/290/labels{/name}", "comments_url": "https://api.github.com/repos/simbody/simbody/issues/290/comments", "events_url": "https://api.github.com/repos/simbody/simbody/issues/290/events", "html_url": "https://github.com/simbody/simbody/issues/290", "id": 51844446, "node_id": "MDU6SXNzdWU1MTg0NDQ0Ng==", "number": 290, "title": "README.md issues from Matt Millard", "user": {"login": "sherm1", "id": 4088016, "node_id": "MDQ6VXNlcjQwODgwMTY=", "avatar_url": "https://avatars.githubusercontent.com/u/4088016?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sherm1", "html_url": "https://github.com/sherm1", "followers_url": "https://api.github.com/users/sherm1/followers", "following_url": "https://api.github.com/users/sherm1/following{/other_user}", "gists_url": "https://api.github.com/users/sherm1/gists{/gist_id}", "starred_url": "https://api.github.com/users/sherm1/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sherm1/subscriptions", "organizations_url": "https://api.github.com/users/sherm1/orgs", "repos_url": "https://api.github.com/users/sherm1/repos", "events_url": "https://api.github.com/users/sherm1/events{/privacy}", "received_events_url": "https://api.github.com/users/sherm1/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2014-12-12T19:39:11Z", "updated_at": "2014-12-13T06:31:38Z", "closed_at": "2014-12-13T06:31:38Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "Matt (@mjhmilla) did a Simbody build and provided some feedback:\n\nThe install has gone beautifully! Well done. \n- In the install guide it is mentioned:\n  `4. Test your installation by navigating to C:/Simbody/examples/bin and running\n   SimbodyInstallTest.exe or SimbodyInstallTestNoViz.exe`\n  These two exe's show up in my `SimbodyBuild\\Release` folder. \n  I didn't see a bin folder inside of `examples`. The `Debug` and `Release` folders\n  that are inside of the `examples` folder are empty.\n- And doxygen isn't mentioned in the Windows installation section. Perhaps mentioning it, and including a short description of the html/ folder in the 'Layout of the Installation' section (which is a _very_ helpful addition) would be great.\n\nNice work!\nMatt\n", "reactions": {"url": "https://api.github.com/repos/simbody/simbody/issues/290/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/simbody/simbody/issues/290/timeline", "performed_via_github_app": null}, {"url": "https://api.github.com/repos/simbody/simbody/issues/293", "repository_url": "https://api.github.com/repos/simbody/simbody", "labels_url": "https://api.github.com/repos/simbody/simbody/issues/293/labels{/name}", "comments_url": "https://api.github.com/repos/simbody/simbody/issues/293/comments", "events_url": "https://api.github.com/repos/simbody/simbody/issues/293/events", "html_url": "https://github.com/simbody/simbody/issues/293", "id": 51937854, "node_id": "MDU6SXNzdWU1MTkzNzg1NA==", "number": 293, "title": "Doxygen produces warnings", "user": {"login": "chrisdembia", "id": 846001, "node_id": "MDQ6VXNlcjg0NjAwMQ==", "avatar_url": "https://avatars.githubusercontent.com/u/846001?v=4", "gravatar_id": "", "url": "https://api.github.com/users/chrisdembia", "html_url": "https://github.com/chrisdembia", "followers_url": "https://api.github.com/users/chrisdembia/followers", "following_url": "https://api.github.com/users/chrisdembia/following{/other_user}", "gists_url": "https://api.github.com/users/chrisdembia/gists{/gist_id}", "starred_url": "https://api.github.com/users/chrisdembia/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/chrisdembia/subscriptions", "organizations_url": "https://api.github.com/users/chrisdembia/orgs", "repos_url": "https://api.github.com/users/chrisdembia/repos", "events_url": "https://api.github.com/users/chrisdembia/events{/privacy}", "received_events_url": "https://api.github.com/users/chrisdembia/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 59408209, "node_id": "MDU6TGFiZWw1OTQwODIwOQ==", "url": "https://api.github.com/repos/simbody/simbody/labels/documentation", "name": "documentation", "color": "bfdadc", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 11, "created_at": "2014-12-15T00:14:33Z", "updated_at": "2014-12-15T02:34:00Z", "closed_at": "2014-12-15T02:34:00Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "```\nWarning: ignoring unsupported tag `ALLOW_UNICODE_NAMES    =' at line 79, file /home/fitze/repos/simbody/3/build/Doxyfile\nWarning: Tag `CLANG_ASSISTED_PARSING' at line 1003 of file /home/fitze/repos/simbody/3/build/Doxyfile belongs to an option that was not enabled at compile time.\nTo avoid this warning please remove this line from your configuration file, upgrade it using \"doxygen -u\", or recompile doxygen with this feature enabled.\nWarning: Tag `CLANG_OPTIONS' at line 1011 of file /home/fitze/repos/simbody/3/build/Doxyfile belongs to an option that was not enabled at compile time.\nTo avoid this warning please remove this line from your configuration file, upgrade it using \"doxygen -u\", or recompile doxygen with this feature enabled.\nWarning: ignoring unsupported tag `MAN_SUBDIR             =' at line 1814, file /home/fitze/repos/simbody/3/build/Doxyfile\n...\n/home/fitze/repos/simbody/3/simbody/SimTKcommon/Simulation/include/SimTKcommon/internal/MeasureImplementation.h:653: warning: no uniquely matching class member found for \n  template < T >\n  SimTK::Measure_< T >::Zero::Zero(SimTK::Subsystem &sub)\nPossible candidates:\n  SimTK::Measure_< T >::Zero::Zero()' at line 371 of file /home/fitze/repos/simbody/3/simbody/SimTKcommon/Simulation/include/SimTKcommon/internal/Measure.h\n  SimTK::Measure_< T >::Zero::Zero(Subsystem &sub)' at line 372 of file /home/fitze/repos/simbody/3/simbody/SimTKcommon/Simulation/include/SimTKcommon/internal/Measure.h\n  SimTK::Measure_< T >::Zero::Zero(int size)' at line 378 of file /home/fitze/repos/simbody/3/simbody/SimTKcommon/Simulation/include/SimTKcommon/internal/Measure.h\n  SimTK::Measure_< T >::Zero::Zero(Subsystem &sub, int size)' at line 379 of file /home/fitze/repos/simbody/3/simbody/SimTKcommon/Simulation/include/SimTKcommon/internal/Measure.h\n\n/home/fitze/repos/simbody/3/simbody/SimTKcommon/Simulation/include/SimTKcommon/internal/MeasureImplementation.h:663: warning: no matching class member found for \n  template < T >\n  SimTK::Measure_< T >::One::One(SimTK::Subsystem &sub)\nPossible candidates:\n  SimTK::Measure_< T >::One::One()\n  SimTK::Measure_< T >::One::One(Subsystem &sub)\n  SimTK::Measure_< T >::One::One(int size)\n  SimTK::Measure_< T >::One::One(Subsystem &sub, int size)\n```\n", "reactions": {"url": "https://api.github.com/repos/simbody/simbody/issues/293/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/simbody/simbody/issues/293/timeline", "performed_via_github_app": null}, {"url": "https://api.github.com/repos/simbody/simbody/issues/301", "repository_url": "https://api.github.com/repos/simbody/simbody", "labels_url": "https://api.github.com/repos/simbody/simbody/issues/301/labels{/name}", "comments_url": "https://api.github.com/repos/simbody/simbody/issues/301/comments", "events_url": "https://api.github.com/repos/simbody/simbody/issues/301/events", "html_url": "https://github.com/simbody/simbody/issues/301", "id": 52276043, "node_id": "MDU6SXNzdWU1MjI3NjA0Mw==", "number": 301, "title": "References to Molmodel should be removed from the Simbody User's Guide", "user": {"login": "sherm1", "id": 4088016, "node_id": "MDQ6VXNlcjQwODgwMTY=", "avatar_url": "https://avatars.githubusercontent.com/u/4088016?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sherm1", "html_url": "https://github.com/sherm1", "followers_url": "https://api.github.com/users/sherm1/followers", "following_url": "https://api.github.com/users/sherm1/following{/other_user}", "gists_url": "https://api.github.com/users/sherm1/gists{/gist_id}", "starred_url": "https://api.github.com/users/sherm1/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sherm1/subscriptions", "organizations_url": "https://api.github.com/users/sherm1/orgs", "repos_url": "https://api.github.com/users/sherm1/repos", "events_url": "https://api.github.com/users/sherm1/events{/privacy}", "received_events_url": "https://api.github.com/users/sherm1/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 59408209, "node_id": "MDU6TGFiZWw1OTQwODIwOQ==", "url": "https://api.github.com/repos/simbody/simbody/labels/documentation", "name": "documentation", "color": "bfdadc", "default": true, "description": null}, {"id": 108217628, "node_id": "MDU6TGFiZWwxMDgyMTc2Mjg=", "url": "https://api.github.com/repos/simbody/simbody/labels/help%20wanted", "name": "help wanted", "color": "009800", "default": true, "description": null}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2014-12-17T18:46:40Z", "updated_at": "2014-12-17T18:46:40Z", "closed_at": null, "author_association": "MEMBER", "active_lock_reason": null, "body": "At one time Simbody & Molmodel were installed together. That's no longer true and the Simbody User's Guide shouldn't discuss Molmodel at all now. The very nice Molmodel-based examples should be replaced with more relevant ones.\n", "reactions": {"url": "https://api.github.com/repos/simbody/simbody/issues/301/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/simbody/simbody/issues/301/timeline", "performed_via_github_app": null}, {"url": "https://api.github.com/repos/simbody/simbody/issues/305", "repository_url": "https://api.github.com/repos/simbody/simbody", "labels_url": "https://api.github.com/repos/simbody/simbody/issues/305/labels{/name}", "comments_url": "https://api.github.com/repos/simbody/simbody/issues/305/comments", "events_url": "https://api.github.com/repos/simbody/simbody/issues/305/events", "html_url": "https://github.com/simbody/simbody/issues/305", "id": 52510977, "node_id": "MDU6SXNzdWU1MjUxMDk3Nw==", "number": 305, "title": "Need a general way to serialize a State", "user": {"login": "sherm1", "id": 4088016, "node_id": "MDQ6VXNlcjQwODgwMTY=", "avatar_url": "https://avatars.githubusercontent.com/u/4088016?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sherm1", "html_url": "https://github.com/sherm1", "followers_url": "https://api.github.com/users/sherm1/followers", "following_url": "https://api.github.com/users/sherm1/following{/other_user}", "gists_url": "https://api.github.com/users/sherm1/gists{/gist_id}", "starred_url": "https://api.github.com/users/sherm1/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sherm1/subscriptions", "organizations_url": "https://api.github.com/users/sherm1/orgs", "repos_url": "https://api.github.com/users/sherm1/repos", "events_url": "https://api.github.com/users/sherm1/events{/privacy}", "received_events_url": "https://api.github.com/users/sherm1/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 57297924, "node_id": "MDU6TGFiZWw1NzI5NzkyNA==", "url": "https://api.github.com/repos/simbody/simbody/labels/state", "name": "state", "color": "fbca04", "default": false, "description": null}, {"id": 108217628, "node_id": "MDU6TGFiZWwxMDgyMTc2Mjg=", "url": "https://api.github.com/repos/simbody/simbody/labels/help%20wanted", "name": "help wanted", "color": "009800", "default": true, "description": null}, {"id": 121484439, "node_id": "MDU6TGFiZWwxMjE0ODQ0Mzk=", "url": "https://api.github.com/repos/simbody/simbody/labels/OpenSim", "name": "OpenSim", "color": "006b75", "default": false, "description": null}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": {"url": "https://api.github.com/repos/simbody/simbody/milestones/1", "html_url": "https://github.com/simbody/simbody/milestone/1", "labels_url": "https://api.github.com/repos/simbody/simbody/milestones/1/labels", "id": 910475, "node_id": "MDk6TWlsZXN0b25lOTEwNDc1", "number": 1, "title": "Simbody 4.0", "description": "This milestone collects Issues and Pull Requests that must be dealt with before Simbody 4.0 can be released. This is a prerequisite for OpenSim 4.0.", "creator": {"login": "sherm1", "id": 4088016, "node_id": "MDQ6VXNlcjQwODgwMTY=", "avatar_url": "https://avatars.githubusercontent.com/u/4088016?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sherm1", "html_url": "https://github.com/sherm1", "followers_url": "https://api.github.com/users/sherm1/followers", "following_url": "https://api.github.com/users/sherm1/following{/other_user}", "gists_url": "https://api.github.com/users/sherm1/gists{/gist_id}", "starred_url": "https://api.github.com/users/sherm1/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sherm1/subscriptions", "organizations_url": "https://api.github.com/users/sherm1/orgs", "repos_url": "https://api.github.com/users/sherm1/repos", "events_url": "https://api.github.com/users/sherm1/events{/privacy}", "received_events_url": "https://api.github.com/users/sherm1/received_events", "type": "User", "site_admin": false}, "open_issues": 12, "closed_issues": 13, "state": "open", "created_at": "2014-12-19T18:48:14Z", "updated_at": "2015-12-23T21:15:41Z", "due_on": "2015-06-01T07:00:00Z", "closed_at": null}, "comments": 16, "created_at": "2014-12-19T18:02:02Z", "updated_at": "2016-01-13T05:04:04Z", "closed_at": null, "author_association": "MEMBER", "active_lock_reason": null, "body": "Simbody's `State` object has the nice feature that it unambiguously holds everything changeable about a given `MultibodySystem`. So if we could serialize it (meaning write it to a string or file), and then read it back later, we could put the system back into the bit-identical condition it was in at the time it was serialized. OpenSim has an immediate application for this -- see opensim-org/opensim-core#149.\n\nI would like to see an Xml serializer and deserializer first, since Simbody has built-in tools for Xml and OpenSim uses Xml. This would make the serialized states easy to process externally and allow humans to examine and change them. We could add additional types later.\n\nThe reason this is a somewhat difficult project is that the `State` contains not just time and continuous variables (which are easily serialized) but also arbitrary objects stored as discrete state variables. Those need an abstraction that would allow users to provide (de)serializers for whatever they put in there.\n", "reactions": {"url": "https://api.github.com/repos/simbody/simbody/issues/305/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/simbody/simbody/issues/305/timeline", "performed_via_github_app": null}, {"url": "https://api.github.com/repos/simbody/simbody/issues/312", "repository_url": "https://api.github.com/repos/simbody/simbody", "labels_url": "https://api.github.com/repos/simbody/simbody/issues/312/labels{/name}", "comments_url": "https://api.github.com/repos/simbody/simbody/issues/312/comments", "events_url": "https://api.github.com/repos/simbody/simbody/issues/312/events", "html_url": "https://github.com/simbody/simbody/issues/312", "id": 52713916, "node_id": "MDU6SXNzdWU1MjcxMzkxNg==", "number": 312, "title": "Need unilateral witness functions for contact", "user": {"login": "sherm1", "id": 4088016, "node_id": "MDQ6VXNlcjQwODgwMTY=", "avatar_url": "https://avatars.githubusercontent.com/u/4088016?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sherm1", "html_url": "https://github.com/sherm1", "followers_url": "https://api.github.com/users/sherm1/followers", "following_url": "https://api.github.com/users/sherm1/following{/other_user}", "gists_url": "https://api.github.com/users/sherm1/gists{/gist_id}", "starred_url": "https://api.github.com/users/sherm1/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sherm1/subscriptions", "organizations_url": "https://api.github.com/users/sherm1/orgs", "repos_url": "https://api.github.com/users/sherm1/repos", "events_url": "https://api.github.com/users/sherm1/events{/privacy}", "received_events_url": "https://api.github.com/users/sherm1/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 52267853, "node_id": "MDU6TGFiZWw1MjI2Nzg1Mw==", "url": "https://api.github.com/repos/simbody/simbody/labels/enhancement", "name": "enhancement", "color": "84b6eb", "default": true, "description": null}, {"id": 62665552, "node_id": "MDU6TGFiZWw2MjY2NTU1Mg==", "url": "https://api.github.com/repos/simbody/simbody/labels/contact", "name": "contact", "color": "eb6420", "default": false, "description": null}], "state": "open", "locked": false, "assignee": {"login": "sherm1", "id": 4088016, "node_id": "MDQ6VXNlcjQwODgwMTY=", "avatar_url": "https://avatars.githubusercontent.com/u/4088016?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sherm1", "html_url": "https://github.com/sherm1", "followers_url": "https://api.github.com/users/sherm1/followers", "following_url": "https://api.github.com/users/sherm1/following{/other_user}", "gists_url": "https://api.github.com/users/sherm1/gists{/gist_id}", "starred_url": "https://api.github.com/users/sherm1/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sherm1/subscriptions", "organizations_url": "https://api.github.com/users/sherm1/orgs", "repos_url": "https://api.github.com/users/sherm1/repos", "events_url": "https://api.github.com/users/sherm1/events{/privacy}", "received_events_url": "https://api.github.com/users/sherm1/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "sherm1", "id": 4088016, "node_id": "MDQ6VXNlcjQwODgwMTY=", "avatar_url": "https://avatars.githubusercontent.com/u/4088016?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sherm1", "html_url": "https://github.com/sherm1", "followers_url": "https://api.github.com/users/sherm1/followers", "following_url": "https://api.github.com/users/sherm1/following{/other_user}", "gists_url": "https://api.github.com/users/sherm1/gists{/gist_id}", "starred_url": "https://api.github.com/users/sherm1/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sherm1/subscriptions", "organizations_url": "https://api.github.com/users/sherm1/orgs", "repos_url": "https://api.github.com/users/sherm1/repos", "events_url": "https://api.github.com/users/sherm1/events{/privacy}", "received_events_url": "https://api.github.com/users/sherm1/received_events", "type": "User", "site_admin": false}], "milestone": {"url": "https://api.github.com/repos/simbody/simbody/milestones/1", "html_url": "https://github.com/simbody/simbody/milestone/1", "labels_url": "https://api.github.com/repos/simbody/simbody/milestones/1/labels", "id": 910475, "node_id": "MDk6TWlsZXN0b25lOTEwNDc1", "number": 1, "title": "Simbody 4.0", "description": "This milestone collects Issues and Pull Requests that must be dealt with before Simbody 4.0 can be released. This is a prerequisite for OpenSim 4.0.", "creator": {"login": "sherm1", "id": 4088016, "node_id": "MDQ6VXNlcjQwODgwMTY=", "avatar_url": "https://avatars.githubusercontent.com/u/4088016?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sherm1", "html_url": "https://github.com/sherm1", "followers_url": "https://api.github.com/users/sherm1/followers", "following_url": "https://api.github.com/users/sherm1/following{/other_user}", "gists_url": "https://api.github.com/users/sherm1/gists{/gist_id}", "starred_url": "https://api.github.com/users/sherm1/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sherm1/subscriptions", "organizations_url": "https://api.github.com/users/sherm1/orgs", "repos_url": "https://api.github.com/users/sherm1/repos", "events_url": "https://api.github.com/users/sherm1/events{/privacy}", "received_events_url": "https://api.github.com/users/sherm1/received_events", "type": "User", "site_admin": false}, "open_issues": 12, "closed_issues": 13, "state": "open", "created_at": "2014-12-19T18:48:14Z", "updated_at": "2015-12-23T21:15:41Z", "due_on": "2015-06-01T07:00:00Z", "closed_at": null}, "comments": 0, "created_at": "2014-12-23T04:48:00Z", "updated_at": "2014-12-23T18:09:51Z", "closed_at": null, "author_association": "MEMBER", "active_lock_reason": null, "body": "(Subproject for rigid contact in Simbody 4.0)\nWitness functions currently trigger only on a sign change. Unilateral ones must trigger when the sign is wrong, regardless of its previous state. Sign changes should still be tracked when present since they can accelerate event isolation.\n\nWitness functions need to be more flexible in several ways:\n- [ ] Should be able to specify as unilateral, and which sign causes triggering. Note that this implies which sign change should trigger the event, so likely we just need a boolean to say if it is unilateral.\n- [ ] Allow setting an event isolation requirement on the witness _value_ as well as the time window.\n- [ ] Need to allow `NaN` for witness functions to mean that no value is available. For example, this would apply if all contacts were so far apart they didn't pass broad phase screening.\n- [ ] Consider whether `+/- Infinity` values would also be useful; those would work now except that they probably screw up the event isolation algorithm; should just binary chop in that case.\n- [ ] Witness isolation may require retaking the time step prior to the event (see issue #217). \n", "reactions": {"url": "https://api.github.com/repos/simbody/simbody/issues/312/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/simbody/simbody/issues/312/timeline", "performed_via_github_app": null}, {"url": "https://api.github.com/repos/simbody/simbody/issues/313", "repository_url": "https://api.github.com/repos/simbody/simbody", "labels_url": "https://api.github.com/repos/simbody/simbody/issues/313/labels{/name}", "comments_url": "https://api.github.com/repos/simbody/simbody/issues/313/comments", "events_url": "https://api.github.com/repos/simbody/simbody/issues/313/events", "html_url": "https://github.com/simbody/simbody/issues/313", "id": 52714441, "node_id": "MDU6SXNzdWU1MjcxNDQ0MQ==", "number": 313, "title": "Need to be able to add/remove state variables on the fly", "user": {"login": "sherm1", "id": 4088016, "node_id": "MDQ6VXNlcjQwODgwMTY=", "avatar_url": "https://avatars.githubusercontent.com/u/4088016?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sherm1", "html_url": "https://github.com/sherm1", "followers_url": "https://api.github.com/users/sherm1/followers", "following_url": "https://api.github.com/users/sherm1/following{/other_user}", "gists_url": "https://api.github.com/users/sherm1/gists{/gist_id}", "starred_url": "https://api.github.com/users/sherm1/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sherm1/subscriptions", "organizations_url": "https://api.github.com/users/sherm1/orgs", "repos_url": "https://api.github.com/users/sherm1/repos", "events_url": "https://api.github.com/users/sherm1/events{/privacy}", "received_events_url": "https://api.github.com/users/sherm1/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 52267853, "node_id": "MDU6TGFiZWw1MjI2Nzg1Mw==", "url": "https://api.github.com/repos/simbody/simbody/labels/enhancement", "name": "enhancement", "color": "84b6eb", "default": true, "description": null}, {"id": 57297924, "node_id": "MDU6TGFiZWw1NzI5NzkyNA==", "url": "https://api.github.com/repos/simbody/simbody/labels/state", "name": "state", "color": "fbca04", "default": false, "description": null}, {"id": 62665552, "node_id": "MDU6TGFiZWw2MjY2NTU1Mg==", "url": "https://api.github.com/repos/simbody/simbody/labels/contact", "name": "contact", "color": "eb6420", "default": false, "description": null}], "state": "open", "locked": false, "assignee": {"login": "sherm1", "id": 4088016, "node_id": "MDQ6VXNlcjQwODgwMTY=", "avatar_url": "https://avatars.githubusercontent.com/u/4088016?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sherm1", "html_url": "https://github.com/sherm1", "followers_url": "https://api.github.com/users/sherm1/followers", "following_url": "https://api.github.com/users/sherm1/following{/other_user}", "gists_url": "https://api.github.com/users/sherm1/gists{/gist_id}", "starred_url": "https://api.github.com/users/sherm1/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sherm1/subscriptions", "organizations_url": "https://api.github.com/users/sherm1/orgs", "repos_url": "https://api.github.com/users/sherm1/repos", "events_url": "https://api.github.com/users/sherm1/events{/privacy}", "received_events_url": "https://api.github.com/users/sherm1/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "sherm1", "id": 4088016, "node_id": "MDQ6VXNlcjQwODgwMTY=", "avatar_url": "https://avatars.githubusercontent.com/u/4088016?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sherm1", "html_url": "https://github.com/sherm1", "followers_url": "https://api.github.com/users/sherm1/followers", "following_url": "https://api.github.com/users/sherm1/following{/other_user}", "gists_url": "https://api.github.com/users/sherm1/gists{/gist_id}", "starred_url": "https://api.github.com/users/sherm1/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sherm1/subscriptions", "organizations_url": "https://api.github.com/users/sherm1/orgs", "repos_url": "https://api.github.com/users/sherm1/repos", "events_url": "https://api.github.com/users/sherm1/events{/privacy}", "received_events_url": "https://api.github.com/users/sherm1/received_events", "type": "User", "site_admin": false}], "milestone": {"url": "https://api.github.com/repos/simbody/simbody/milestones/1", "html_url": "https://github.com/simbody/simbody/milestone/1", "labels_url": "https://api.github.com/repos/simbody/simbody/milestones/1/labels", "id": 910475, "node_id": "MDk6TWlsZXN0b25lOTEwNDc1", "number": 1, "title": "Simbody 4.0", "description": "This milestone collects Issues and Pull Requests that must be dealt with before Simbody 4.0 can be released. This is a prerequisite for OpenSim 4.0.", "creator": {"login": "sherm1", "id": 4088016, "node_id": "MDQ6VXNlcjQwODgwMTY=", "avatar_url": "https://avatars.githubusercontent.com/u/4088016?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sherm1", "html_url": "https://github.com/sherm1", "followers_url": "https://api.github.com/users/sherm1/followers", "following_url": "https://api.github.com/users/sherm1/following{/other_user}", "gists_url": "https://api.github.com/users/sherm1/gists{/gist_id}", "starred_url": "https://api.github.com/users/sherm1/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sherm1/subscriptions", "organizations_url": "https://api.github.com/users/sherm1/orgs", "repos_url": "https://api.github.com/users/sherm1/repos", "events_url": "https://api.github.com/users/sherm1/events{/privacy}", "received_events_url": "https://api.github.com/users/sherm1/received_events", "type": "User", "site_admin": false}, "open_issues": 12, "closed_issues": 13, "state": "open", "created_at": "2014-12-19T18:48:14Z", "updated_at": "2015-12-23T21:15:41Z", "due_on": "2015-06-01T07:00:00Z", "closed_at": null}, "comments": 0, "created_at": "2014-12-23T05:05:15Z", "updated_at": "2014-12-23T05:05:35Z", "closed_at": null, "author_association": "MEMBER", "active_lock_reason": null, "body": "For contact models like bristle friction, we would like to be able to add state variables when needed and remove them afterwards, without having to throw out the old state variables and existing cache entries.\n\nWhile you're fixing this, consider how to avoid integrating states that correspond to prescribed motion since those are actually explicit functions of time.\n\nShould the state contain objects representing variable-size pools of on-the-fly state variables? Will that work for discrete ones also? Do corresponding cache entries need to be allocated and destroyed too?\n", "reactions": {"url": "https://api.github.com/repos/simbody/simbody/issues/313/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/simbody/simbody/issues/313/timeline", "performed_via_github_app": null}, {"url": "https://api.github.com/repos/simbody/simbody/issues/325", "repository_url": "https://api.github.com/repos/simbody/simbody", "labels_url": "https://api.github.com/repos/simbody/simbody/issues/325/labels{/name}", "comments_url": "https://api.github.com/repos/simbody/simbody/issues/325/comments", "events_url": "https://api.github.com/repos/simbody/simbody/issues/325/events", "html_url": "https://github.com/simbody/simbody/issues/325", "id": 53677801, "node_id": "MDU6SXNzdWU1MzY3NzgwMQ==", "number": 325, "title": "Use CMAKE_CXX_STANDARD (wait till CMake 3.1)", "user": {"login": "chrisdembia", "id": 846001, "node_id": "MDQ6VXNlcjg0NjAwMQ==", "avatar_url": "https://avatars.githubusercontent.com/u/846001?v=4", "gravatar_id": "", "url": "https://api.github.com/users/chrisdembia", "html_url": "https://github.com/chrisdembia", "followers_url": "https://api.github.com/users/chrisdembia/followers", "following_url": "https://api.github.com/users/chrisdembia/following{/other_user}", "gists_url": "https://api.github.com/users/chrisdembia/gists{/gist_id}", "starred_url": "https://api.github.com/users/chrisdembia/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/chrisdembia/subscriptions", "organizations_url": "https://api.github.com/users/chrisdembia/orgs", "repos_url": "https://api.github.com/users/chrisdembia/repos", "events_url": "https://api.github.com/users/chrisdembia/events{/privacy}", "received_events_url": "https://api.github.com/users/chrisdembia/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 54361018, "node_id": "MDU6TGFiZWw1NDM2MTAxOA==", "url": "https://api.github.com/repos/simbody/simbody/labels/build", "name": "build", "color": "bfe5bf", "default": false, "description": null}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2015-01-07T20:26:29Z", "updated_at": "2015-01-07T20:26:43Z", "closed_at": null, "author_association": "MEMBER", "active_lock_reason": null, "body": "When we move to CMake 3.1, use the new CMAKE_CXX_STANDARD variable to set C++11; and remove our own custom logic. \nhttp://www.cmake.org/cmake/help/v3.1/variable/CMAKE_CXX_STANDARD.html#variable:CMAKE_CXX_STANDARD\n", "reactions": {"url": "https://api.github.com/repos/simbody/simbody/issues/325/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/simbody/simbody/issues/325/timeline", "performed_via_github_app": null}, {"url": "https://api.github.com/repos/simbody/simbody/issues/328", "repository_url": "https://api.github.com/repos/simbody/simbody", "labels_url": "https://api.github.com/repos/simbody/simbody/issues/328/labels{/name}", "comments_url": "https://api.github.com/repos/simbody/simbody/issues/328/comments", "events_url": "https://api.github.com/repos/simbody/simbody/issues/328/events", "html_url": "https://github.com/simbody/simbody/issues/328", "id": 54849232, "node_id": "MDU6SXNzdWU1NDg0OTIzMg==", "number": 328, "title": "Simbody's smart pointer APIs should better match C++11's", "user": {"login": "sherm1", "id": 4088016, "node_id": "MDQ6VXNlcjQwODgwMTY=", "avatar_url": "https://avatars.githubusercontent.com/u/4088016?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sherm1", "html_url": "https://github.com/sherm1", "followers_url": "https://api.github.com/users/sherm1/followers", "following_url": "https://api.github.com/users/sherm1/following{/other_user}", "gists_url": "https://api.github.com/users/sherm1/gists{/gist_id}", "starred_url": "https://api.github.com/users/sherm1/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sherm1/subscriptions", "organizations_url": "https://api.github.com/users/sherm1/orgs", "repos_url": "https://api.github.com/users/sherm1/repos", "events_url": "https://api.github.com/users/sherm1/events{/privacy}", "received_events_url": "https://api.github.com/users/sherm1/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 52267853, "node_id": "MDU6TGFiZWw1MjI2Nzg1Mw==", "url": "https://api.github.com/repos/simbody/simbody/labels/enhancement", "name": "enhancement", "color": "84b6eb", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": {"url": "https://api.github.com/repos/simbody/simbody/milestones/1", "html_url": "https://github.com/simbody/simbody/milestone/1", "labels_url": "https://api.github.com/repos/simbody/simbody/milestones/1/labels", "id": 910475, "node_id": "MDk6TWlsZXN0b25lOTEwNDc1", "number": 1, "title": "Simbody 4.0", "description": "This milestone collects Issues and Pull Requests that must be dealt with before Simbody 4.0 can be released. This is a prerequisite for OpenSim 4.0.", "creator": {"login": "sherm1", "id": 4088016, "node_id": "MDQ6VXNlcjQwODgwMTY=", "avatar_url": "https://avatars.githubusercontent.com/u/4088016?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sherm1", "html_url": "https://github.com/sherm1", "followers_url": "https://api.github.com/users/sherm1/followers", "following_url": "https://api.github.com/users/sherm1/following{/other_user}", "gists_url": "https://api.github.com/users/sherm1/gists{/gist_id}", "starred_url": "https://api.github.com/users/sherm1/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sherm1/subscriptions", "organizations_url": "https://api.github.com/users/sherm1/orgs", "repos_url": "https://api.github.com/users/sherm1/repos", "events_url": "https://api.github.com/users/sherm1/events{/privacy}", "received_events_url": "https://api.github.com/users/sherm1/received_events", "type": "User", "site_admin": false}, "open_issues": 12, "closed_issues": 13, "state": "open", "created_at": "2014-12-19T18:48:14Z", "updated_at": "2015-12-23T21:15:41Z", "due_on": "2015-06-01T07:00:00Z", "closed_at": null}, "comments": 2, "created_at": "2015-01-20T06:38:25Z", "updated_at": "2015-08-18T23:01:57Z", "closed_at": "2015-08-18T23:01:57Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "The smart pointers `ClonePtr` and `ReferencePtr` have APIs that are somewhat different from the ones defined by C++11 for `std::unique_ptr` and `std::shared_ptr`. These should be upgraded to match better (in 4.0 since the changes may not be backwards compatible). ClonePtr should get a move constructor and assignment.\n\nThe newer `CloneOnWritePtr` matches C++11 and the other two should be made to behave similarly.\n", "reactions": {"url": "https://api.github.com/repos/simbody/simbody/issues/328/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/simbody/simbody/issues/328/timeline", "performed_via_github_app": null}, {"url": "https://api.github.com/repos/simbody/simbody/issues/331", "repository_url": "https://api.github.com/repos/simbody/simbody", "labels_url": "https://api.github.com/repos/simbody/simbody/issues/331/labels{/name}", "comments_url": "https://api.github.com/repos/simbody/simbody/issues/331/comments", "events_url": "https://api.github.com/repos/simbody/simbody/issues/331/events", "html_url": "https://github.com/simbody/simbody/issues/331", "id": 55126906, "node_id": "MDU6SXNzdWU1NTEyNjkwNg==", "number": 331, "title": "undefined references to ~PIMPLHandle()", "user": {"login": "xantares", "id": 3265815, "node_id": "MDQ6VXNlcjMyNjU4MTU=", "avatar_url": "https://avatars.githubusercontent.com/u/3265815?v=4", "gravatar_id": "", "url": "https://api.github.com/users/xantares", "html_url": "https://github.com/xantares", "followers_url": "https://api.github.com/users/xantares/followers", "following_url": "https://api.github.com/users/xantares/following{/other_user}", "gists_url": "https://api.github.com/users/xantares/gists{/gist_id}", "starred_url": "https://api.github.com/users/xantares/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/xantares/subscriptions", "organizations_url": "https://api.github.com/users/xantares/orgs", "repos_url": "https://api.github.com/users/xantares/repos", "events_url": "https://api.github.com/users/xantares/events{/privacy}", "received_events_url": "https://api.github.com/users/xantares/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2015-01-22T08:31:32Z", "updated_at": "2015-08-18T23:00:55Z", "closed_at": "2015-08-18T23:00:55Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "undefined refs to ~PIMPLHandle, which is declared protected (and not virtual) in \nSimTKcommon/include/SimTKcommon/internal/PrivateImplementation.h\ninherited here:\n../SimTKcommon/Geometry/include/SimTKcommon/internal/PolygonalMesh.h\n../SimTKcommon/include/SimTKcommon/internal/PrivateImplementation.h\n../SimTKcommon/include/SimTKcommon/internal/PrivateImplementation_Defs.h\n../SimTKcommon/include/SimTKcommon/internal/ParallelWorkQueue.h\n../SimTKcommon/include/SimTKcommon/internal/Parallel2DExecutor.h\n../SimTKcommon/include/SimTKcommon/internal/ParallelExecutor.h\nand instanciated in SimTKcommon/src/PrivateInstantiations.cpp.\n\nLinking CXX shared library ../../libSimTKmath.dll\nCMakeFiles/SimTKmath.dir/objects.a(CMAESOptimizer.cpp.obj): In function `~ParallelExecutor':\n/home/xantares/projects/simbody/SimTKcommon/./include/SimTKcommon/internal/ParallelExecutor.h:65: undefined reference to`SimTK::PIMPLHandle<SimTK::ParallelExecutor, SimTK::ParallelExecutorImpl, false>::~PIMPLHandle()'\n/home/xantares/projects/simbody/SimTKcommon/./include/SimTKcommon/internal/ParallelExecutor.h:65: undefined reference to `SimTK::PIMPLHandle<SimTK::ParallelExecutor, SimTK::ParallelExecutorImpl, false>::~PIMPLHandle()'\nCMakeFiles/SimTKmath.dir/objects.a(ContactGeometry_TriangleMesh.cpp.obj): In function`ZNK5SimTK15ContactGeometry12TriangleMesh19createPolygonalMeshEv':\n/home/xantares/projects/simbody/SimTKcommon/Geometry/include/SimTKcommon/internal/PolygonalMesh.h:76: undefined reference to `SimTK::PIMPLHandle<SimTK::PolygonalMesh, SimTK::PolygonalMeshImpl, true>::~PIMPLHandle()'\nCMakeFiles/SimTKmath.dir/objects.a(ContactGeometry_TriangleMesh.cpp.obj): In function`~PolygonalMesh':\n/home/xantares/projects/simbody/SimTKcommon/Geometry/include/SimTKcommon/internal/PolygonalMesh.h:76: undefined reference to `SimTK::PIMPLHandle<SimTK::PolygonalMesh, SimTK::PolygonalMeshImpl, true>::~PIMPLHandle()'\n/home/xantares/projects/simbody/SimTKcommon/Geometry/include/SimTKcommon/internal/PolygonalMesh.h:76: undefined reference to`SimTK::PIMPLHandle<SimTK::PolygonalMesh, SimTK::PolygonalMeshImpl, true>::~PIMPLHandle()'\nCMakeFiles/SimTKmath.dir/objects.a(ContactGeometry_TriangleMesh.cpp.obj): In function `ZN5SimTK13PolygonalMeshD1Ev':\n/home/xantares/projects/simbody/SimTKcommon/Geometry/include/SimTKcommon/internal/PolygonalMesh.h:76: undefined reference to`SimTK::PIMPLHandle<SimTK::PolygonalMesh, SimTK::PolygonalMeshImpl, true>::~PIMPLHandle()'\nCMakeFiles/SimTKmath.dir/objects.a(ContactGeometry_TriangleMesh.cpp.obj): In function `~PolygonalMesh':\n/home/xantares/projects/simbody/SimTKcommon/Geometry/include/SimTKcommon/internal/PolygonalMesh.h:76: undefined reference to`SimTK::PIMPLHandle<SimTK::PolygonalMesh, SimTK::PolygonalMeshImpl, true>::~PIMPLHandle()'\nCMakeFiles/SimTKmath.dir/objects.a(ContactGeometry_SmoothHeightMap.cpp.obj):/home/xantares/projects/simbody/SimTKcommon/Geometry/include/SimTKcommon/internal/PolygonalMesh.h:76: more undefined references to `SimTK::PIMPLHandle<SimTK::PolygonalMesh, SimTK::PolygonalMeshImpl, true>::~PIMPLHandle()' follow\ncollect2: error: ld returned 1 exit status\nSimTKmath/sharedTarget/CMakeFiles/SimTKmath.dir/build.make:4301: recipe for target 'libSimTKmath.dll' failed\nmake[2]: **\\* [libSimTKmath.dll] Error 1\nCMakeFiles/Makefile2:402: recipe for target 'SimTKmath/sharedTarget/CMakeFiles/SimTKmath.dir/all' failed\nmake[1]: **\\* [SimTKmath/sharedTarget/CMakeFiles/SimTKmath.dir/all] Error 2\nMakefile:117: recipe for target 'all' failed\n", "reactions": {"url": "https://api.github.com/repos/simbody/simbody/issues/331/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/simbody/simbody/issues/331/timeline", "performed_via_github_app": null}, {"url": "https://api.github.com/repos/simbody/simbody/issues/333", "repository_url": "https://api.github.com/repos/simbody/simbody", "labels_url": "https://api.github.com/repos/simbody/simbody/issues/333/labels{/name}", "comments_url": "https://api.github.com/repos/simbody/simbody/issues/333/comments", "events_url": "https://api.github.com/repos/simbody/simbody/issues/333/events", "html_url": "https://github.com/simbody/simbody/issues/333", "id": 55947954, "node_id": "MDU6SXNzdWU1NTk0Nzk1NA==", "number": 333, "title": "Need DecorativeMeshFile & visualizer support for it and other things", "user": {"login": "sherm1", "id": 4088016, "node_id": "MDQ6VXNlcjQwODgwMTY=", "avatar_url": "https://avatars.githubusercontent.com/u/4088016?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sherm1", "html_url": "https://github.com/sherm1", "followers_url": "https://api.github.com/users/sherm1/followers", "following_url": "https://api.github.com/users/sherm1/following{/other_user}", "gists_url": "https://api.github.com/users/sherm1/gists{/gist_id}", "starred_url": "https://api.github.com/users/sherm1/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sherm1/subscriptions", "organizations_url": "https://api.github.com/users/sherm1/orgs", "repos_url": "https://api.github.com/users/sherm1/repos", "events_url": "https://api.github.com/users/sherm1/events{/privacy}", "received_events_url": "https://api.github.com/users/sherm1/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 52267853, "node_id": "MDU6TGFiZWw1MjI2Nzg1Mw==", "url": "https://api.github.com/repos/simbody/simbody/labels/enhancement", "name": "enhancement", "color": "84b6eb", "default": true, "description": null}, {"id": 52759897, "node_id": "MDU6TGFiZWw1Mjc1OTg5Nw==", "url": "https://api.github.com/repos/simbody/simbody/labels/visualization", "name": "visualization", "color": "bfd4f2", "default": false, "description": null}, {"id": 108217628, "node_id": "MDU6TGFiZWwxMDgyMTc2Mjg=", "url": "https://api.github.com/repos/simbody/simbody/labels/help%20wanted", "name": "help wanted", "color": "009800", "default": true, "description": null}, {"id": 121484439, "node_id": "MDU6TGFiZWwxMjE0ODQ0Mzk=", "url": "https://api.github.com/repos/simbody/simbody/labels/OpenSim", "name": "OpenSim", "color": "006b75", "default": false, "description": null}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": {"url": "https://api.github.com/repos/simbody/simbody/milestones/1", "html_url": "https://github.com/simbody/simbody/milestone/1", "labels_url": "https://api.github.com/repos/simbody/simbody/milestones/1/labels", "id": 910475, "node_id": "MDk6TWlsZXN0b25lOTEwNDc1", "number": 1, "title": "Simbody 4.0", "description": "This milestone collects Issues and Pull Requests that must be dealt with before Simbody 4.0 can be released. This is a prerequisite for OpenSim 4.0.", "creator": {"login": "sherm1", "id": 4088016, "node_id": "MDQ6VXNlcjQwODgwMTY=", "avatar_url": "https://avatars.githubusercontent.com/u/4088016?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sherm1", "html_url": "https://github.com/sherm1", "followers_url": "https://api.github.com/users/sherm1/followers", "following_url": "https://api.github.com/users/sherm1/following{/other_user}", "gists_url": "https://api.github.com/users/sherm1/gists{/gist_id}", "starred_url": "https://api.github.com/users/sherm1/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sherm1/subscriptions", "organizations_url": "https://api.github.com/users/sherm1/orgs", "repos_url": "https://api.github.com/users/sherm1/repos", "events_url": "https://api.github.com/users/sherm1/events{/privacy}", "received_events_url": "https://api.github.com/users/sherm1/received_events", "type": "User", "site_admin": false}, "open_issues": 12, "closed_issues": 13, "state": "open", "created_at": "2014-12-19T18:48:14Z", "updated_at": "2015-12-23T21:15:41Z", "due_on": "2015-06-01T07:00:00Z", "closed_at": null}, "comments": 3, "created_at": "2015-01-29T19:54:20Z", "updated_at": "2019-01-08T22:23:26Z", "closed_at": null, "author_association": "MEMBER", "active_lock_reason": null, "body": "Other things: torus, arrow and/or cone, quadrants\n\nPer opensim-org/opensim-gui#1 \n", "reactions": {"url": "https://api.github.com/repos/simbody/simbody/issues/333/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/simbody/simbody/issues/333/timeline", "performed_via_github_app": null}, {"url": "https://api.github.com/repos/simbody/simbody/issues/334", "repository_url": "https://api.github.com/repos/simbody/simbody", "labels_url": "https://api.github.com/repos/simbody/simbody/issues/334/labels{/name}", "comments_url": "https://api.github.com/repos/simbody/simbody/issues/334/comments", "events_url": "https://api.github.com/repos/simbody/simbody/issues/334/events", "html_url": "https://github.com/simbody/simbody/issues/334", "id": 56771493, "node_id": "MDU6SXNzdWU1Njc3MTQ5Mw==", "number": 334, "title": "Bug in SpatialInertia shift() method, and composite body inertias", "user": {"login": "sherm1", "id": 4088016, "node_id": "MDQ6VXNlcjQwODgwMTY=", "avatar_url": "https://avatars.githubusercontent.com/u/4088016?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sherm1", "html_url": "https://github.com/sherm1", "followers_url": "https://api.github.com/users/sherm1/followers", "following_url": "https://api.github.com/users/sherm1/following{/other_user}", "gists_url": "https://api.github.com/users/sherm1/gists{/gist_id}", "starred_url": "https://api.github.com/users/sherm1/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sherm1/subscriptions", "organizations_url": "https://api.github.com/users/sherm1/orgs", "repos_url": "https://api.github.com/users/sherm1/repos", "events_url": "https://api.github.com/users/sherm1/events{/privacy}", "received_events_url": "https://api.github.com/users/sherm1/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 52267851, "node_id": "MDU6TGFiZWw1MjI2Nzg1MQ==", "url": "https://api.github.com/repos/simbody/simbody/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": {"login": "sherm1", "id": 4088016, "node_id": "MDQ6VXNlcjQwODgwMTY=", "avatar_url": "https://avatars.githubusercontent.com/u/4088016?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sherm1", "html_url": "https://github.com/sherm1", "followers_url": "https://api.github.com/users/sherm1/followers", "following_url": "https://api.github.com/users/sherm1/following{/other_user}", "gists_url": "https://api.github.com/users/sherm1/gists{/gist_id}", "starred_url": "https://api.github.com/users/sherm1/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sherm1/subscriptions", "organizations_url": "https://api.github.com/users/sherm1/orgs", "repos_url": "https://api.github.com/users/sherm1/repos", "events_url": "https://api.github.com/users/sherm1/events{/privacy}", "received_events_url": "https://api.github.com/users/sherm1/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "sherm1", "id": 4088016, "node_id": "MDQ6VXNlcjQwODgwMTY=", "avatar_url": "https://avatars.githubusercontent.com/u/4088016?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sherm1", "html_url": "https://github.com/sherm1", "followers_url": "https://api.github.com/users/sherm1/followers", "following_url": "https://api.github.com/users/sherm1/following{/other_user}", "gists_url": "https://api.github.com/users/sherm1/gists{/gist_id}", "starred_url": "https://api.github.com/users/sherm1/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sherm1/subscriptions", "organizations_url": "https://api.github.com/users/sherm1/orgs", "repos_url": "https://api.github.com/users/sherm1/repos", "events_url": "https://api.github.com/users/sherm1/events{/privacy}", "received_events_url": "https://api.github.com/users/sherm1/received_events", "type": "User", "site_admin": false}], "milestone": {"url": "https://api.github.com/repos/simbody/simbody/milestones/1", "html_url": "https://github.com/simbody/simbody/milestone/1", "labels_url": "https://api.github.com/repos/simbody/simbody/milestones/1/labels", "id": 910475, "node_id": "MDk6TWlsZXN0b25lOTEwNDc1", "number": 1, "title": "Simbody 4.0", "description": "This milestone collects Issues and Pull Requests that must be dealt with before Simbody 4.0 can be released. This is a prerequisite for OpenSim 4.0.", "creator": {"login": "sherm1", "id": 4088016, "node_id": "MDQ6VXNlcjQwODgwMTY=", "avatar_url": "https://avatars.githubusercontent.com/u/4088016?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sherm1", "html_url": "https://github.com/sherm1", "followers_url": "https://api.github.com/users/sherm1/followers", "following_url": "https://api.github.com/users/sherm1/following{/other_user}", "gists_url": "https://api.github.com/users/sherm1/gists{/gist_id}", "starred_url": "https://api.github.com/users/sherm1/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sherm1/subscriptions", "organizations_url": "https://api.github.com/users/sherm1/orgs", "repos_url": "https://api.github.com/users/sherm1/repos", "events_url": "https://api.github.com/users/sherm1/events{/privacy}", "received_events_url": "https://api.github.com/users/sherm1/received_events", "type": "User", "site_admin": false}, "open_issues": 12, "closed_issues": 13, "state": "open", "created_at": "2014-12-19T18:48:14Z", "updated_at": "2015-12-23T21:15:41Z", "due_on": "2015-06-01T07:00:00Z", "closed_at": null}, "comments": 1, "created_at": "2015-02-06T05:18:51Z", "updated_at": "2015-02-06T06:07:52Z", "closed_at": "2015-02-06T06:07:52Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "The `SpatialInertia::shift()` method does not work correctly for a `SpatialInertia` with a non-zero COM offset. This method is used in `calcCompositeBodyInertias()` and related methods so those are also wrong. Neither of these is commonly used.\n\nThe problem was reported for Simbody 3.5.1 by Gordon Deane in [this forum post](https://simtk.org/forums/viewtopic.php?f=47&t=5438&sid=6c07a98fdfce4b2f7b60de27008ef14d#p13550).\n\nThere was a regression test for this but it had a zero COM offset so didn't detect the bug; that should be changed.\n", "reactions": {"url": "https://api.github.com/repos/simbody/simbody/issues/334/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/simbody/simbody/issues/334/timeline", "performed_via_github_app": null}, {"url": "https://api.github.com/repos/simbody/simbody/issues/337", "repository_url": "https://api.github.com/repos/simbody/simbody", "labels_url": "https://api.github.com/repos/simbody/simbody/issues/337/labels{/name}", "comments_url": "https://api.github.com/repos/simbody/simbody/issues/337/comments", "events_url": "https://api.github.com/repos/simbody/simbody/issues/337/events", "html_url": "https://github.com/simbody/simbody/issues/337", "id": 56775500, "node_id": "MDU6SXNzdWU1Njc3NTUwMA==", "number": 337, "title": "ArticulatedInertia::shift() and SpatialInertia::shift() are inconsistent", "user": {"login": "sherm1", "id": 4088016, "node_id": "MDQ6VXNlcjQwODgwMTY=", "avatar_url": "https://avatars.githubusercontent.com/u/4088016?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sherm1", "html_url": "https://github.com/sherm1", "followers_url": "https://api.github.com/users/sherm1/followers", "following_url": "https://api.github.com/users/sherm1/following{/other_user}", "gists_url": "https://api.github.com/users/sherm1/gists{/gist_id}", "starred_url": "https://api.github.com/users/sherm1/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sherm1/subscriptions", "organizations_url": "https://api.github.com/users/sherm1/orgs", "repos_url": "https://api.github.com/users/sherm1/repos", "events_url": "https://api.github.com/users/sherm1/events{/privacy}", "received_events_url": "https://api.github.com/users/sherm1/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 52267851, "node_id": "MDU6TGFiZWw1MjI2Nzg1MQ==", "url": "https://api.github.com/repos/simbody/simbody/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}], "state": "open", "locked": false, "assignee": {"login": "sherm1", "id": 4088016, "node_id": "MDQ6VXNlcjQwODgwMTY=", "avatar_url": "https://avatars.githubusercontent.com/u/4088016?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sherm1", "html_url": "https://github.com/sherm1", "followers_url": "https://api.github.com/users/sherm1/followers", "following_url": "https://api.github.com/users/sherm1/following{/other_user}", "gists_url": "https://api.github.com/users/sherm1/gists{/gist_id}", "starred_url": "https://api.github.com/users/sherm1/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sherm1/subscriptions", "organizations_url": "https://api.github.com/users/sherm1/orgs", "repos_url": "https://api.github.com/users/sherm1/repos", "events_url": "https://api.github.com/users/sherm1/events{/privacy}", "received_events_url": "https://api.github.com/users/sherm1/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "sherm1", "id": 4088016, "node_id": "MDQ6VXNlcjQwODgwMTY=", "avatar_url": "https://avatars.githubusercontent.com/u/4088016?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sherm1", "html_url": "https://github.com/sherm1", "followers_url": "https://api.github.com/users/sherm1/followers", "following_url": "https://api.github.com/users/sherm1/following{/other_user}", "gists_url": "https://api.github.com/users/sherm1/gists{/gist_id}", "starred_url": "https://api.github.com/users/sherm1/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sherm1/subscriptions", "organizations_url": "https://api.github.com/users/sherm1/orgs", "repos_url": "https://api.github.com/users/sherm1/repos", "events_url": "https://api.github.com/users/sherm1/events{/privacy}", "received_events_url": "https://api.github.com/users/sherm1/received_events", "type": "User", "site_admin": false}], "milestone": {"url": "https://api.github.com/repos/simbody/simbody/milestones/1", "html_url": "https://github.com/simbody/simbody/milestone/1", "labels_url": "https://api.github.com/repos/simbody/simbody/milestones/1/labels", "id": 910475, "node_id": "MDk6TWlsZXN0b25lOTEwNDc1", "number": 1, "title": "Simbody 4.0", "description": "This milestone collects Issues and Pull Requests that must be dealt with before Simbody 4.0 can be released. This is a prerequisite for OpenSim 4.0.", "creator": {"login": "sherm1", "id": 4088016, "node_id": "MDQ6VXNlcjQwODgwMTY=", "avatar_url": "https://avatars.githubusercontent.com/u/4088016?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sherm1", "html_url": "https://github.com/sherm1", "followers_url": "https://api.github.com/users/sherm1/followers", "following_url": "https://api.github.com/users/sherm1/following{/other_user}", "gists_url": "https://api.github.com/users/sherm1/gists{/gist_id}", "starred_url": "https://api.github.com/users/sherm1/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sherm1/subscriptions", "organizations_url": "https://api.github.com/users/sherm1/orgs", "repos_url": "https://api.github.com/users/sherm1/repos", "events_url": "https://api.github.com/users/sherm1/events{/privacy}", "received_events_url": "https://api.github.com/users/sherm1/received_events", "type": "User", "site_admin": false}, "open_issues": 12, "closed_issues": 13, "state": "open", "created_at": "2014-12-19T18:48:14Z", "updated_at": "2015-12-23T21:15:41Z", "due_on": "2015-06-01T07:00:00Z", "closed_at": null}, "comments": 0, "created_at": "2015-02-06T06:30:55Z", "updated_at": "2015-02-06T06:30:55Z", "closed_at": null, "author_association": "MEMBER", "active_lock_reason": null, "body": "For historical reasons `ArticulatedInertia::shift(v)` actually shifts the inertia's origin by `-v` which is weird to say the least. But worse, SpatialInertial::shift(v) shifts by `v`, which is the expected behavior. These two methods are analogous and should work the same way!\n\nNote that if you are going to change the sign on ArticulatedInertia::shift() you have to do it in 4.0 because it is an API-breaking change (though it is probably only used internally). And be very careful about the performance because this is one of the most computationally intensive routines in Simbody.\n", "reactions": {"url": "https://api.github.com/repos/simbody/simbody/issues/337/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/simbody/simbody/issues/337/timeline", "performed_via_github_app": null}, {"url": "https://api.github.com/repos/simbody/simbody/issues/341", "repository_url": "https://api.github.com/repos/simbody/simbody", "labels_url": "https://api.github.com/repos/simbody/simbody/issues/341/labels{/name}", "comments_url": "https://api.github.com/repos/simbody/simbody/issues/341/comments", "events_url": "https://api.github.com/repos/simbody/simbody/issues/341/events", "html_url": "https://github.com/simbody/simbody/issues/341", "id": 57629471, "node_id": "MDU6SXNzdWU1NzYyOTQ3MQ==", "number": 341, "title": "ContactDetail has public members -- is that intentional?", "user": {"login": "sherm1", "id": 4088016, "node_id": "MDQ6VXNlcjQwODgwMTY=", "avatar_url": "https://avatars.githubusercontent.com/u/4088016?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sherm1", "html_url": "https://github.com/sherm1", "followers_url": "https://api.github.com/users/sherm1/followers", "following_url": "https://api.github.com/users/sherm1/following{/other_user}", "gists_url": "https://api.github.com/users/sherm1/gists{/gist_id}", "starred_url": "https://api.github.com/users/sherm1/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sherm1/subscriptions", "organizations_url": "https://api.github.com/users/sherm1/orgs", "repos_url": "https://api.github.com/users/sherm1/repos", "events_url": "https://api.github.com/users/sherm1/events{/privacy}", "received_events_url": "https://api.github.com/users/sherm1/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2015-02-13T17:39:02Z", "updated_at": "2015-02-13T17:39:02Z", "closed_at": null, "author_association": "MEMBER", "active_lock_reason": null, "body": "It also has accessors which seems more civilized. (Thanks John @hsu)\n", "reactions": {"url": "https://api.github.com/repos/simbody/simbody/issues/341/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/simbody/simbody/issues/341/timeline", "performed_via_github_app": null}, {"url": "https://api.github.com/repos/simbody/simbody/issues/343", "repository_url": "https://api.github.com/repos/simbody/simbody", "labels_url": "https://api.github.com/repos/simbody/simbody/issues/343/labels{/name}", "comments_url": "https://api.github.com/repos/simbody/simbody/issues/343/comments", "events_url": "https://api.github.com/repos/simbody/simbody/issues/343/events", "html_url": "https://github.com/simbody/simbody/issues/343", "id": 58413812, "node_id": "MDU6SXNzdWU1ODQxMzgxMg==", "number": 343, "title": "Mechanism to invalidate Index member variables upon copy", "user": {"login": "chrisdembia", "id": 846001, "node_id": "MDQ6VXNlcjg0NjAwMQ==", "avatar_url": "https://avatars.githubusercontent.com/u/846001?v=4", "gravatar_id": "", "url": "https://api.github.com/users/chrisdembia", "html_url": "https://github.com/chrisdembia", "followers_url": "https://api.github.com/users/chrisdembia/followers", "following_url": "https://api.github.com/users/chrisdembia/following{/other_user}", "gists_url": "https://api.github.com/users/chrisdembia/gists{/gist_id}", "starred_url": "https://api.github.com/users/chrisdembia/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/chrisdembia/subscriptions", "organizations_url": "https://api.github.com/users/chrisdembia/orgs", "repos_url": "https://api.github.com/users/chrisdembia/repos", "events_url": "https://api.github.com/users/chrisdembia/events{/privacy}", "received_events_url": "https://api.github.com/users/chrisdembia/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2015-02-20T21:36:08Z", "updated_at": "2015-09-03T02:59:54Z", "closed_at": "2015-09-03T02:59:54Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "Say you have a MeasureIndex as a member variable in your class. When you copy your class, the index should become invalid. This can be done by writing a copy constructor in which you invalidate the index. Sherm suggested a clean mechanism to do this automatically: create a class that will invalidate your index for you: InvalidateIndexOnCopy<T>, ReferenceIndex<T> (since the functionality is similar to ReferencePtr<T>), or InvalidateOnCopyIndex<T>.\n", "reactions": {"url": "https://api.github.com/repos/simbody/simbody/issues/343/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/simbody/simbody/issues/343/timeline", "performed_via_github_app": null}, {"url": "https://api.github.com/repos/simbody/simbody/issues/344", "repository_url": "https://api.github.com/repos/simbody/simbody", "labels_url": "https://api.github.com/repos/simbody/simbody/issues/344/labels{/name}", "comments_url": "https://api.github.com/repos/simbody/simbody/issues/344/comments", "events_url": "https://api.github.com/repos/simbody/simbody/issues/344/events", "html_url": "https://github.com/simbody/simbody/issues/344", "id": 58424437, "node_id": "MDU6SXNzdWU1ODQyNDQzNw==", "number": 344, "title": "addDecoration() should set index on body in the copied DecorativeGeometry object", "user": {"login": "sherm1", "id": 4088016, "node_id": "MDQ6VXNlcjQwODgwMTY=", "avatar_url": "https://avatars.githubusercontent.com/u/4088016?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sherm1", "html_url": "https://github.com/sherm1", "followers_url": "https://api.github.com/users/sherm1/followers", "following_url": "https://api.github.com/users/sherm1/following{/other_user}", "gists_url": "https://api.github.com/users/sherm1/gists{/gist_id}", "starred_url": "https://api.github.com/users/sherm1/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sherm1/subscriptions", "organizations_url": "https://api.github.com/users/sherm1/orgs", "repos_url": "https://api.github.com/users/sherm1/repos", "events_url": "https://api.github.com/users/sherm1/events{/privacy}", "received_events_url": "https://api.github.com/users/sherm1/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 52267851, "node_id": "MDU6TGFiZWw1MjI2Nzg1MQ==", "url": "https://api.github.com/repos/simbody/simbody/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}, {"id": 52759897, "node_id": "MDU6TGFiZWw1Mjc1OTg5Nw==", "url": "https://api.github.com/repos/simbody/simbody/labels/visualization", "name": "visualization", "color": "bfd4f2", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": {"url": "https://api.github.com/repos/simbody/simbody/milestones/1", "html_url": "https://github.com/simbody/simbody/milestone/1", "labels_url": "https://api.github.com/repos/simbody/simbody/milestones/1/labels", "id": 910475, "node_id": "MDk6TWlsZXN0b25lOTEwNDc1", "number": 1, "title": "Simbody 4.0", "description": "This milestone collects Issues and Pull Requests that must be dealt with before Simbody 4.0 can be released. This is a prerequisite for OpenSim 4.0.", "creator": {"login": "sherm1", "id": 4088016, "node_id": "MDQ6VXNlcjQwODgwMTY=", "avatar_url": "https://avatars.githubusercontent.com/u/4088016?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sherm1", "html_url": "https://github.com/sherm1", "followers_url": "https://api.github.com/users/sherm1/followers", "following_url": "https://api.github.com/users/sherm1/following{/other_user}", "gists_url": "https://api.github.com/users/sherm1/gists{/gist_id}", "starred_url": "https://api.github.com/users/sherm1/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sherm1/subscriptions", "organizations_url": "https://api.github.com/users/sherm1/orgs", "repos_url": "https://api.github.com/users/sherm1/repos", "events_url": "https://api.github.com/users/sherm1/events{/privacy}", "received_events_url": "https://api.github.com/users/sherm1/received_events", "type": "User", "site_admin": false}, "open_issues": 12, "closed_issues": 13, "state": "open", "created_at": "2014-12-19T18:48:14Z", "updated_at": "2015-12-23T21:15:41Z", "due_on": "2015-06-01T07:00:00Z", "closed_at": null}, "comments": 0, "created_at": "2015-02-20T23:20:55Z", "updated_at": "2015-02-21T02:45:45Z", "closed_at": "2015-02-21T02:45:45Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "The Body::addDecoration() method copies a given DecorativeGeometry object so that the Body has its own. It returns a small integer index that is different for every piece of DecorativeGeometry attached to that Body. DecorativeGeometry has a field for storing the index, but it isn't being set automatically.\n\nThe field should be set to facilitate tracking a given piece of DecorativeGeometry back to its origins on the Body. (This field is copied along with DecorativeGeometry so remains set in geometry copied out for visualization.)\n\nAyman, I'm not sure if this matters to you but I'm cc'ing you just in case.\n\n/cc @aymanhab \n", "reactions": {"url": "https://api.github.com/repos/simbody/simbody/issues/344/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/simbody/simbody/issues/344/timeline", "performed_via_github_app": null}, {"url": "https://api.github.com/repos/simbody/simbody/issues/348", "repository_url": "https://api.github.com/repos/simbody/simbody", "labels_url": "https://api.github.com/repos/simbody/simbody/issues/348/labels{/name}", "comments_url": "https://api.github.com/repos/simbody/simbody/issues/348/comments", "events_url": "https://api.github.com/repos/simbody/simbody/issues/348/events", "html_url": "https://github.com/simbody/simbody/issues/348", "id": 59320517, "node_id": "MDU6SXNzdWU1OTMyMDUxNw==", "number": 348, "title": "New port of IPOPT with Sparse solver needed", "user": {"login": "chrisdembia", "id": 846001, "node_id": "MDQ6VXNlcjg0NjAwMQ==", "avatar_url": "https://avatars.githubusercontent.com/u/846001?v=4", "gravatar_id": "", "url": "https://api.github.com/users/chrisdembia", "html_url": "https://github.com/chrisdembia", "followers_url": "https://api.github.com/users/chrisdembia/followers", "following_url": "https://api.github.com/users/chrisdembia/following{/other_user}", "gists_url": "https://api.github.com/users/chrisdembia/gists{/gist_id}", "starred_url": "https://api.github.com/users/chrisdembia/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/chrisdembia/subscriptions", "organizations_url": "https://api.github.com/users/chrisdembia/orgs", "repos_url": "https://api.github.com/users/chrisdembia/repos", "events_url": "https://api.github.com/users/chrisdembia/events{/privacy}", "received_events_url": "https://api.github.com/users/chrisdembia/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 52267853, "node_id": "MDU6TGFiZWw1MjI2Nzg1Mw==", "url": "https://api.github.com/repos/simbody/simbody/labels/enhancement", "name": "enhancement", "color": "84b6eb", "default": true, "description": null}, {"id": 108217628, "node_id": "MDU6TGFiZWwxMDgyMTc2Mjg=", "url": "https://api.github.com/repos/simbody/simbody/labels/help%20wanted", "name": "help wanted", "color": "009800", "default": true, "description": null}, {"id": 121484439, "node_id": "MDU6TGFiZWwxMjE0ODQ0Mzk=", "url": "https://api.github.com/repos/simbody/simbody/labels/OpenSim", "name": "OpenSim", "color": "006b75", "default": false, "description": null}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2015-02-28T02:22:27Z", "updated_at": "2015-03-16T19:38:31Z", "closed_at": null, "author_association": "MEMBER", "active_lock_reason": null, "body": "We are using a very old version of IpOpt that was hacked to work with dense linear algebra. We need to update IpOpt to the current version using an open source sparse solver (as well as dense), and this time isolate it properly so that we will be able to keep it up to date. \n", "reactions": {"url": "https://api.github.com/repos/simbody/simbody/issues/348/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/simbody/simbody/issues/348/timeline", "performed_via_github_app": null}, {"url": "https://api.github.com/repos/simbody/simbody/issues/349", "repository_url": "https://api.github.com/repos/simbody/simbody", "labels_url": "https://api.github.com/repos/simbody/simbody/issues/349/labels{/name}", "comments_url": "https://api.github.com/repos/simbody/simbody/issues/349/comments", "events_url": "https://api.github.com/repos/simbody/simbody/issues/349/events", "html_url": "https://github.com/simbody/simbody/issues/349", "id": 62188972, "node_id": "MDU6SXNzdWU2MjE4ODk3Mg==", "number": 349, "title": "VectorIterator has broken assignment operator", "user": {"login": "sherm1", "id": 4088016, "node_id": "MDQ6VXNlcjQwODgwMTY=", "avatar_url": "https://avatars.githubusercontent.com/u/4088016?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sherm1", "html_url": "https://github.com/sherm1", "followers_url": "https://api.github.com/users/sherm1/followers", "following_url": "https://api.github.com/users/sherm1/following{/other_user}", "gists_url": "https://api.github.com/users/sherm1/gists{/gist_id}", "starred_url": "https://api.github.com/users/sherm1/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sherm1/subscriptions", "organizations_url": "https://api.github.com/users/sherm1/orgs", "repos_url": "https://api.github.com/users/sherm1/repos", "events_url": "https://api.github.com/users/sherm1/events{/privacy}", "received_events_url": "https://api.github.com/users/sherm1/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 52267851, "node_id": "MDU6TGFiZWw1MjI2Nzg1MQ==", "url": "https://api.github.com/repos/simbody/simbody/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": {"login": "sherm1", "id": 4088016, "node_id": "MDQ6VXNlcjQwODgwMTY=", "avatar_url": "https://avatars.githubusercontent.com/u/4088016?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sherm1", "html_url": "https://github.com/sherm1", "followers_url": "https://api.github.com/users/sherm1/followers", "following_url": "https://api.github.com/users/sherm1/following{/other_user}", "gists_url": "https://api.github.com/users/sherm1/gists{/gist_id}", "starred_url": "https://api.github.com/users/sherm1/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sherm1/subscriptions", "organizations_url": "https://api.github.com/users/sherm1/orgs", "repos_url": "https://api.github.com/users/sherm1/repos", "events_url": "https://api.github.com/users/sherm1/events{/privacy}", "received_events_url": "https://api.github.com/users/sherm1/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "sherm1", "id": 4088016, "node_id": "MDQ6VXNlcjQwODgwMTY=", "avatar_url": "https://avatars.githubusercontent.com/u/4088016?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sherm1", "html_url": "https://github.com/sherm1", "followers_url": "https://api.github.com/users/sherm1/followers", "following_url": "https://api.github.com/users/sherm1/following{/other_user}", "gists_url": "https://api.github.com/users/sherm1/gists{/gist_id}", "starred_url": "https://api.github.com/users/sherm1/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sherm1/subscriptions", "organizations_url": "https://api.github.com/users/sherm1/orgs", "repos_url": "https://api.github.com/users/sherm1/repos", "events_url": "https://api.github.com/users/sherm1/events{/privacy}", "received_events_url": "https://api.github.com/users/sherm1/received_events", "type": "User", "site_admin": false}], "milestone": {"url": "https://api.github.com/repos/simbody/simbody/milestones/1", "html_url": "https://github.com/simbody/simbody/milestone/1", "labels_url": "https://api.github.com/repos/simbody/simbody/milestones/1/labels", "id": 910475, "node_id": "MDk6TWlsZXN0b25lOTEwNDc1", "number": 1, "title": "Simbody 4.0", "description": "This milestone collects Issues and Pull Requests that must be dealt with before Simbody 4.0 can be released. This is a prerequisite for OpenSim 4.0.", "creator": {"login": "sherm1", "id": 4088016, "node_id": "MDQ6VXNlcjQwODgwMTY=", "avatar_url": "https://avatars.githubusercontent.com/u/4088016?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sherm1", "html_url": "https://github.com/sherm1", "followers_url": "https://api.github.com/users/sherm1/followers", "following_url": "https://api.github.com/users/sherm1/following{/other_user}", "gists_url": "https://api.github.com/users/sherm1/gists{/gist_id}", "starred_url": "https://api.github.com/users/sherm1/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sherm1/subscriptions", "organizations_url": "https://api.github.com/users/sherm1/orgs", "repos_url": "https://api.github.com/users/sherm1/repos", "events_url": "https://api.github.com/users/sherm1/events{/privacy}", "received_events_url": "https://api.github.com/users/sherm1/received_events", "type": "User", "site_admin": false}, "open_issues": 12, "closed_issues": 13, "state": "open", "created_at": "2014-12-19T18:48:14Z", "updated_at": "2015-12-23T21:15:41Z", "due_on": "2015-06-01T07:00:00Z", "closed_at": null}, "comments": 3, "created_at": "2015-03-16T19:44:47Z", "updated_at": "2015-03-16T21:38:52Z", "closed_at": "2015-03-16T21:29:08Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "The `VectorIterator` class keeps a reference to the `Vector` which prevents copy assignment from working. Nevertheless it contains a copy assignment operator which ends up making a deep copy of the Vector, rather then setting the new reference to be the same as the old one.\n\nThis is often a self-copy which is weird and may be slow but possibly harmless which is probably why this wasn't noticed. Valgrind caught it. I'm not sure if this causes any noticeable bugs.\n", "reactions": {"url": "https://api.github.com/repos/simbody/simbody/issues/349/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/simbody/simbody/issues/349/timeline", "performed_via_github_app": null}, {"url": "https://api.github.com/repos/simbody/simbody/issues/350", "repository_url": "https://api.github.com/repos/simbody/simbody", "labels_url": "https://api.github.com/repos/simbody/simbody/issues/350/labels{/name}", "comments_url": "https://api.github.com/repos/simbody/simbody/issues/350/comments", "events_url": "https://api.github.com/repos/simbody/simbody/issues/350/events", "html_url": "https://github.com/simbody/simbody/issues/350", "id": 64098549, "node_id": "MDU6SXNzdWU2NDA5ODU0OQ==", "number": 350, "title": "Building from source on OSX with GNU compiler", "user": {"login": "nishbo", "id": 3775317, "node_id": "MDQ6VXNlcjM3NzUzMTc=", "avatar_url": "https://avatars.githubusercontent.com/u/3775317?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nishbo", "html_url": "https://github.com/nishbo", "followers_url": "https://api.github.com/users/nishbo/followers", "following_url": "https://api.github.com/users/nishbo/following{/other_user}", "gists_url": "https://api.github.com/users/nishbo/gists{/gist_id}", "starred_url": "https://api.github.com/users/nishbo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nishbo/subscriptions", "organizations_url": "https://api.github.com/users/nishbo/orgs", "repos_url": "https://api.github.com/users/nishbo/repos", "events_url": "https://api.github.com/users/nishbo/events{/privacy}", "received_events_url": "https://api.github.com/users/nishbo/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 9, "created_at": "2015-03-24T21:03:02Z", "updated_at": "2015-06-03T03:52:17Z", "closed_at": "2015-06-03T03:52:17Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "For some reason, when building simbody with a gcc compiler instead of a native one on OSX, unrecognized option `-stdlib=libc++` produces an error instead of a warning. This is a quick fix: replace line 270 in `CMakeList.txt` with:\n\n```\n            IF(${CMAKE_CXX_COMPILER_ID} MATCHES \"GNU\")\n                SET(CMAKE_CXX_FLAGS \"${CMAKE_CXX_FLAGS} -std=c++11\")\n            ELSE()\n                SET(CMAKE_CXX_FLAGS \"${CMAKE_CXX_FLAGS} -std=c++11\")\n                SET(CMAKE_CXX_FLAGS \"${CMAKE_CXX_FLAGS} -stdlib=libc++\")\n            ENDIF()\n```\n", "reactions": {"url": "https://api.github.com/repos/simbody/simbody/issues/350/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/simbody/simbody/issues/350/timeline", "performed_via_github_app": null}, {"url": "https://api.github.com/repos/simbody/simbody/issues/359", "repository_url": "https://api.github.com/repos/simbody/simbody", "labels_url": "https://api.github.com/repos/simbody/simbody/issues/359/labels{/name}", "comments_url": "https://api.github.com/repos/simbody/simbody/issues/359/comments", "events_url": "https://api.github.com/repos/simbody/simbody/issues/359/events", "html_url": "https://github.com/simbody/simbody/issues/359", "id": 67645309, "node_id": "MDU6SXNzdWU2NzY0NTMwOQ==", "number": 359, "title": "Create ClearOnCopy mixin to clear indices upon copying", "user": {"login": "chrisdembia", "id": 846001, "node_id": "MDQ6VXNlcjg0NjAwMQ==", "avatar_url": "https://avatars.githubusercontent.com/u/846001?v=4", "gravatar_id": "", "url": "https://api.github.com/users/chrisdembia", "html_url": "https://github.com/chrisdembia", "followers_url": "https://api.github.com/users/chrisdembia/followers", "following_url": "https://api.github.com/users/chrisdembia/following{/other_user}", "gists_url": "https://api.github.com/users/chrisdembia/gists{/gist_id}", "starred_url": "https://api.github.com/users/chrisdembia/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/chrisdembia/subscriptions", "organizations_url": "https://api.github.com/users/chrisdembia/orgs", "repos_url": "https://api.github.com/users/chrisdembia/repos", "events_url": "https://api.github.com/users/chrisdembia/events{/privacy}", "received_events_url": "https://api.github.com/users/chrisdembia/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 16, "created_at": "2015-04-10T17:36:36Z", "updated_at": "2015-09-03T02:59:47Z", "closed_at": "2015-09-03T02:59:47Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "This came up in https://github.com/opensim-org/opensim-core/issues/398\n\n@sherm1 said the following:\n\n...A \"mix in\" template class that would replace a class's copy constructor with its default constructor and its copy assignment with a call to its clear() method. The data member could then be:\n\n``` c++\nClearOnCopy<SimTK::Measure> m_delayMeasure;\n```\n\nThe implementation could be something like\n\n``` c++\ntemplate <class T> ClearOnCopy : public T {\n    ClearOnCopy(const ClearOnCopy&) : T() {} // copy constructor does default construct\n    ClearOnCopy& operator=(const ClearOnCopy&) {clear();} // copy assignment\n    // or maybe:\n    ClearOnCopy& operator=(const ClearOnCopy&) {\n        static_cast<T>(*this) = T();\n    }\n};\n```\n\nI'm not sure that would be enough to make it useful though. Anything that would achieve the goal of not requiring a copy constructor to be written would be good.\n", "reactions": {"url": "https://api.github.com/repos/simbody/simbody/issues/359/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/simbody/simbody/issues/359/timeline", "performed_via_github_app": null}, {"url": "https://api.github.com/repos/simbody/simbody/issues/360", "repository_url": "https://api.github.com/repos/simbody/simbody", "labels_url": "https://api.github.com/repos/simbody/simbody/issues/360/labels{/name}", "comments_url": "https://api.github.com/repos/simbody/simbody/issues/360/comments", "events_url": "https://api.github.com/repos/simbody/simbody/issues/360/events", "html_url": "https://github.com/simbody/simbody/issues/360", "id": 67678656, "node_id": "MDU6SXNzdWU2NzY3ODY1Ng==", "number": 360, "title": "A Delay measure with delay==0 does not produce correct behavior", "user": {"login": "chrisdembia", "id": 846001, "node_id": "MDQ6VXNlcjg0NjAwMQ==", "avatar_url": "https://avatars.githubusercontent.com/u/846001?v=4", "gravatar_id": "", "url": "https://api.github.com/users/chrisdembia", "html_url": "https://github.com/chrisdembia", "followers_url": "https://api.github.com/users/chrisdembia/followers", "following_url": "https://api.github.com/users/chrisdembia/following{/other_user}", "gists_url": "https://api.github.com/users/chrisdembia/gists{/gist_id}", "starred_url": "https://api.github.com/users/chrisdembia/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/chrisdembia/subscriptions", "organizations_url": "https://api.github.com/users/chrisdembia/orgs", "repos_url": "https://api.github.com/users/chrisdembia/repos", "events_url": "https://api.github.com/users/chrisdembia/events{/privacy}", "received_events_url": "https://api.github.com/users/chrisdembia/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 52267851, "node_id": "MDU6TGFiZWw1MjI2Nzg1MQ==", "url": "https://api.github.com/repos/simbody/simbody/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2015-04-10T20:43:36Z", "updated_at": "2015-04-10T21:30:02Z", "closed_at": null, "author_association": "MEMBER", "active_lock_reason": null, "body": "That is, the value of the delay measure does _not_ match the source measure value. Discovered while developing https://github.com/opensim-org/opensim-core/issues/398.\n", "reactions": {"url": "https://api.github.com/repos/simbody/simbody/issues/360/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/simbody/simbody/issues/360/timeline", "performed_via_github_app": null}, {"url": "https://api.github.com/repos/simbody/simbody/issues/361", "repository_url": "https://api.github.com/repos/simbody/simbody", "labels_url": "https://api.github.com/repos/simbody/simbody/issues/361/labels{/name}", "comments_url": "https://api.github.com/repos/simbody/simbody/issues/361/comments", "events_url": "https://api.github.com/repos/simbody/simbody/issues/361/events", "html_url": "https://github.com/simbody/simbody/issues/361", "id": 68448467, "node_id": "MDU6SXNzdWU2ODQ0ODQ2Nw==", "number": 361, "title": "VisualizerGeometry does not support all DecorativeGeometry subclasses", "user": {"login": "aymanhab", "id": 3972208, "node_id": "MDQ6VXNlcjM5NzIyMDg=", "avatar_url": "https://avatars.githubusercontent.com/u/3972208?v=4", "gravatar_id": "", "url": "https://api.github.com/users/aymanhab", "html_url": "https://github.com/aymanhab", "followers_url": "https://api.github.com/users/aymanhab/followers", "following_url": "https://api.github.com/users/aymanhab/following{/other_user}", "gists_url": "https://api.github.com/users/aymanhab/gists{/gist_id}", "starred_url": "https://api.github.com/users/aymanhab/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/aymanhab/subscriptions", "organizations_url": "https://api.github.com/users/aymanhab/orgs", "repos_url": "https://api.github.com/users/aymanhab/repos", "events_url": "https://api.github.com/users/aymanhab/events{/privacy}", "received_events_url": "https://api.github.com/users/aymanhab/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 52267853, "node_id": "MDU6TGFiZWw1MjI2Nzg1Mw==", "url": "https://api.github.com/repos/simbody/simbody/labels/enhancement", "name": "enhancement", "color": "84b6eb", "default": true, "description": null}, {"id": 108217628, "node_id": "MDU6TGFiZWwxMDgyMTc2Mjg=", "url": "https://api.github.com/repos/simbody/simbody/labels/help%20wanted", "name": "help wanted", "color": "009800", "default": true, "description": null}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": {"url": "https://api.github.com/repos/simbody/simbody/milestones/1", "html_url": "https://github.com/simbody/simbody/milestone/1", "labels_url": "https://api.github.com/repos/simbody/simbody/milestones/1/labels", "id": 910475, "node_id": "MDk6TWlsZXN0b25lOTEwNDc1", "number": 1, "title": "Simbody 4.0", "description": "This milestone collects Issues and Pull Requests that must be dealt with before Simbody 4.0 can be released. This is a prerequisite for OpenSim 4.0.", "creator": {"login": "sherm1", "id": 4088016, "node_id": "MDQ6VXNlcjQwODgwMTY=", "avatar_url": "https://avatars.githubusercontent.com/u/4088016?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sherm1", "html_url": "https://github.com/sherm1", "followers_url": "https://api.github.com/users/sherm1/followers", "following_url": "https://api.github.com/users/sherm1/following{/other_user}", "gists_url": "https://api.github.com/users/sherm1/gists{/gist_id}", "starred_url": "https://api.github.com/users/sherm1/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sherm1/subscriptions", "organizations_url": "https://api.github.com/users/sherm1/orgs", "repos_url": "https://api.github.com/users/sherm1/repos", "events_url": "https://api.github.com/users/sherm1/events{/privacy}", "received_events_url": "https://api.github.com/users/sherm1/received_events", "type": "User", "site_admin": false}, "open_issues": 12, "closed_issues": 13, "state": "open", "created_at": "2014-12-19T18:48:14Z", "updated_at": "2015-12-23T21:15:41Z", "due_on": "2015-06-01T07:00:00Z", "closed_at": null}, "comments": 1, "created_at": "2015-04-14T17:23:55Z", "updated_at": "2021-01-18T21:41:07Z", "closed_at": null, "author_association": "MEMBER", "active_lock_reason": null, "body": "To support OpenSim needs, DecorativeMeshFile, DecorativeCone, DecorativeTorus and DecorativeArrow have been introduced as subclasses of DecorativeGeometry, DecorativeGeomertyImplementation has the extra implement\\* methods but the  implementation is empty for now. These methods need to be actually implemented and wired down through the VisualizerProtocol so these new primitives can be utilized by Simbody users and by the native OpenSim API-visualizer.\n", "reactions": {"url": "https://api.github.com/repos/simbody/simbody/issues/361/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/simbody/simbody/issues/361/timeline", "performed_via_github_app": null}, {"url": "https://api.github.com/repos/simbody/simbody/issues/364", "repository_url": "https://api.github.com/repos/simbody/simbody", "labels_url": "https://api.github.com/repos/simbody/simbody/issues/364/labels{/name}", "comments_url": "https://api.github.com/repos/simbody/simbody/issues/364/comments", "events_url": "https://api.github.com/repos/simbody/simbody/issues/364/events", "html_url": "https://github.com/simbody/simbody/issues/364", "id": 69975637, "node_id": "MDU6SXNzdWU2OTk3NTYzNw==", "number": 364, "title": "Simbody's SimTK::Array_ class should have emplace() methods", "user": {"login": "sherm1", "id": 4088016, "node_id": "MDQ6VXNlcjQwODgwMTY=", "avatar_url": "https://avatars.githubusercontent.com/u/4088016?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sherm1", "html_url": "https://github.com/sherm1", "followers_url": "https://api.github.com/users/sherm1/followers", "following_url": "https://api.github.com/users/sherm1/following{/other_user}", "gists_url": "https://api.github.com/users/sherm1/gists{/gist_id}", "starred_url": "https://api.github.com/users/sherm1/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sherm1/subscriptions", "organizations_url": "https://api.github.com/users/sherm1/orgs", "repos_url": "https://api.github.com/users/sherm1/repos", "events_url": "https://api.github.com/users/sherm1/events{/privacy}", "received_events_url": "https://api.github.com/users/sherm1/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 52267853, "node_id": "MDU6TGFiZWw1MjI2Nzg1Mw==", "url": "https://api.github.com/repos/simbody/simbody/labels/enhancement", "name": "enhancement", "color": "84b6eb", "default": true, "description": null}, {"id": 108217628, "node_id": "MDU6TGFiZWwxMDgyMTc2Mjg=", "url": "https://api.github.com/repos/simbody/simbody/labels/help%20wanted", "name": "help wanted", "color": "009800", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2015-04-21T23:18:44Z", "updated_at": "2015-04-24T18:03:55Z", "closed_at": "2015-04-24T18:03:55Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "PR #363 updated this class to C++11 except for `emplace()` and `emplace_back()`; those should be added for full compatibility with `std::vector`.\n\nBe sure to add test cases to [TestArray.cpp](https://github.com/simbody/simbody/blob/master/SimTKcommon/tests/TestArray.cpp) for these.\n", "reactions": {"url": "https://api.github.com/repos/simbody/simbody/issues/364/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/simbody/simbody/issues/364/timeline", "performed_via_github_app": null}, {"url": "https://api.github.com/repos/simbody/simbody/issues/366", "repository_url": "https://api.github.com/repos/simbody/simbody", "labels_url": "https://api.github.com/repos/simbody/simbody/issues/366/labels{/name}", "comments_url": "https://api.github.com/repos/simbody/simbody/issues/366/comments", "events_url": "https://api.github.com/repos/simbody/simbody/issues/366/events", "html_url": "https://github.com/simbody/simbody/issues/366", "id": 71723777, "node_id": "MDU6SXNzdWU3MTcyMzc3Nw==", "number": 366, "title": "Filling Matrix with initial value incorrectly requesting length() instead of nelt()?", "user": {"login": "aseth1", "id": 6494122, "node_id": "MDQ6VXNlcjY0OTQxMjI=", "avatar_url": "https://avatars.githubusercontent.com/u/6494122?v=4", "gravatar_id": "", "url": "https://api.github.com/users/aseth1", "html_url": "https://github.com/aseth1", "followers_url": "https://api.github.com/users/aseth1/followers", "following_url": "https://api.github.com/users/aseth1/following{/other_user}", "gists_url": "https://api.github.com/users/aseth1/gists{/gist_id}", "starred_url": "https://api.github.com/users/aseth1/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/aseth1/subscriptions", "organizations_url": "https://api.github.com/users/aseth1/orgs", "repos_url": "https://api.github.com/users/aseth1/repos", "events_url": "https://api.github.com/users/aseth1/events{/privacy}", "received_events_url": "https://api.github.com/users/aseth1/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 52267851, "node_id": "MDU6TGFiZWw1MjI2Nzg1MQ==", "url": "https://api.github.com/repos/simbody/simbody/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": {"url": "https://api.github.com/repos/simbody/simbody/milestones/1", "html_url": "https://github.com/simbody/simbody/milestone/1", "labels_url": "https://api.github.com/repos/simbody/simbody/milestones/1/labels", "id": 910475, "node_id": "MDk6TWlsZXN0b25lOTEwNDc1", "number": 1, "title": "Simbody 4.0", "description": "This milestone collects Issues and Pull Requests that must be dealt with before Simbody 4.0 can be released. This is a prerequisite for OpenSim 4.0.", "creator": {"login": "sherm1", "id": 4088016, "node_id": "MDQ6VXNlcjQwODgwMTY=", "avatar_url": "https://avatars.githubusercontent.com/u/4088016?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sherm1", "html_url": "https://github.com/sherm1", "followers_url": "https://api.github.com/users/sherm1/followers", "following_url": "https://api.github.com/users/sherm1/following{/other_user}", "gists_url": "https://api.github.com/users/sherm1/gists{/gist_id}", "starred_url": "https://api.github.com/users/sherm1/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sherm1/subscriptions", "organizations_url": "https://api.github.com/users/sherm1/orgs", "repos_url": "https://api.github.com/users/sherm1/repos", "events_url": "https://api.github.com/users/sherm1/events{/privacy}", "received_events_url": "https://api.github.com/users/sherm1/received_events", "type": "User", "site_admin": false}, "open_issues": 12, "closed_issues": 13, "state": "open", "created_at": "2014-12-19T18:48:14Z", "updated_at": "2015-12-23T21:15:41Z", "due_on": "2015-06-01T07:00:00Z", "closed_at": null}, "comments": 1, "created_at": "2015-04-28T22:21:56Z", "updated_at": "2015-04-29T00:08:37Z", "closed_at": "2015-04-29T00:07:45Z", "author_association": "NONE", "active_lock_reason": null, "body": "Initializing a matrix fails [here](https://github.com/simbody/simbody/blob/master/SimTKcommon/BigMatrix/src/MatrixHelper.cpp#L774) in debug since 'length()` assumes 1D matrix (row or column Vector).\n", "reactions": {"url": "https://api.github.com/repos/simbody/simbody/issues/366/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/simbody/simbody/issues/366/timeline", "performed_via_github_app": null}, {"url": "https://api.github.com/repos/simbody/simbody/issues/368", "repository_url": "https://api.github.com/repos/simbody/simbody", "labels_url": "https://api.github.com/repos/simbody/simbody/issues/368/labels{/name}", "comments_url": "https://api.github.com/repos/simbody/simbody/issues/368/comments", "events_url": "https://api.github.com/repos/simbody/simbody/issues/368/events", "html_url": "https://github.com/simbody/simbody/issues/368", "id": 72270924, "node_id": "MDU6SXNzdWU3MjI3MDkyNA==", "number": 368, "title": "Obtain the state variable index that determines a variable time step.", "user": {"login": "chrisdembia", "id": 846001, "node_id": "MDQ6VXNlcjg0NjAwMQ==", "avatar_url": "https://avatars.githubusercontent.com/u/846001?v=4", "gravatar_id": "", "url": "https://api.github.com/users/chrisdembia", "html_url": "https://github.com/chrisdembia", "followers_url": "https://api.github.com/users/chrisdembia/followers", "following_url": "https://api.github.com/users/chrisdembia/following{/other_user}", "gists_url": "https://api.github.com/users/chrisdembia/gists{/gist_id}", "starred_url": "https://api.github.com/users/chrisdembia/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/chrisdembia/subscriptions", "organizations_url": "https://api.github.com/users/chrisdembia/orgs", "repos_url": "https://api.github.com/users/chrisdembia/repos", "events_url": "https://api.github.com/users/chrisdembia/events{/privacy}", "received_events_url": "https://api.github.com/users/chrisdembia/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 52267853, "node_id": "MDU6TGFiZWw1MjI2Nzg1Mw==", "url": "https://api.github.com/repos/simbody/simbody/labels/enhancement", "name": "enhancement", "color": "84b6eb", "default": true, "description": null}, {"id": 121484439, "node_id": "MDU6TGFiZWwxMjE0ODQ0Mzk=", "url": "https://api.github.com/repos/simbody/simbody/labels/OpenSim", "name": "OpenSim", "color": "006b75", "default": false, "description": null}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2015-04-30T20:20:57Z", "updated_at": "2015-04-30T20:57:26Z", "closed_at": null, "author_association": "MEMBER", "active_lock_reason": null, "body": "Simbody integrators already know which state variable drove the step size, but there is no API for requesting that information. \n", "reactions": {"url": "https://api.github.com/repos/simbody/simbody/issues/368/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/simbody/simbody/issues/368/timeline", "performed_via_github_app": null}, {"url": "https://api.github.com/repos/simbody/simbody/issues/369", "repository_url": "https://api.github.com/repos/simbody/simbody", "labels_url": "https://api.github.com/repos/simbody/simbody/issues/369/labels{/name}", "comments_url": "https://api.github.com/repos/simbody/simbody/issues/369/comments", "events_url": "https://api.github.com/repos/simbody/simbody/issues/369/events", "html_url": "https://github.com/simbody/simbody/issues/369", "id": 73354754, "node_id": "MDU6SXNzdWU3MzM1NDc1NA==", "number": 369, "title": "Generate a Vector using a linspace-like method, as one would do in MATLAB.", "user": {"login": "chrisdembia", "id": 846001, "node_id": "MDQ6VXNlcjg0NjAwMQ==", "avatar_url": "https://avatars.githubusercontent.com/u/846001?v=4", "gravatar_id": "", "url": "https://api.github.com/users/chrisdembia", "html_url": "https://github.com/chrisdembia", "followers_url": "https://api.github.com/users/chrisdembia/followers", "following_url": "https://api.github.com/users/chrisdembia/following{/other_user}", "gists_url": "https://api.github.com/users/chrisdembia/gists{/gist_id}", "starred_url": "https://api.github.com/users/chrisdembia/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/chrisdembia/subscriptions", "organizations_url": "https://api.github.com/users/chrisdembia/orgs", "repos_url": "https://api.github.com/users/chrisdembia/repos", "events_url": "https://api.github.com/users/chrisdembia/events{/privacy}", "received_events_url": "https://api.github.com/users/chrisdembia/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 52267853, "node_id": "MDU6TGFiZWw1MjI2Nzg1Mw==", "url": "https://api.github.com/repos/simbody/simbody/labels/enhancement", "name": "enhancement", "color": "84b6eb", "default": true, "description": null}, {"id": 108217628, "node_id": "MDU6TGFiZWwxMDgyMTc2Mjg=", "url": "https://api.github.com/repos/simbody/simbody/labels/help%20wanted", "name": "help wanted", "color": "009800", "default": true, "description": null}], "state": "open", "locked": false, "assignee": {"login": "chrisdembia", "id": 846001, "node_id": "MDQ6VXNlcjg0NjAwMQ==", "avatar_url": "https://avatars.githubusercontent.com/u/846001?v=4", "gravatar_id": "", "url": "https://api.github.com/users/chrisdembia", "html_url": "https://github.com/chrisdembia", "followers_url": "https://api.github.com/users/chrisdembia/followers", "following_url": "https://api.github.com/users/chrisdembia/following{/other_user}", "gists_url": "https://api.github.com/users/chrisdembia/gists{/gist_id}", "starred_url": "https://api.github.com/users/chrisdembia/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/chrisdembia/subscriptions", "organizations_url": "https://api.github.com/users/chrisdembia/orgs", "repos_url": "https://api.github.com/users/chrisdembia/repos", "events_url": "https://api.github.com/users/chrisdembia/events{/privacy}", "received_events_url": "https://api.github.com/users/chrisdembia/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "chrisdembia", "id": 846001, "node_id": "MDQ6VXNlcjg0NjAwMQ==", "avatar_url": "https://avatars.githubusercontent.com/u/846001?v=4", "gravatar_id": "", "url": "https://api.github.com/users/chrisdembia", "html_url": "https://github.com/chrisdembia", "followers_url": "https://api.github.com/users/chrisdembia/followers", "following_url": "https://api.github.com/users/chrisdembia/following{/other_user}", "gists_url": "https://api.github.com/users/chrisdembia/gists{/gist_id}", "starred_url": "https://api.github.com/users/chrisdembia/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/chrisdembia/subscriptions", "organizations_url": "https://api.github.com/users/chrisdembia/orgs", "repos_url": "https://api.github.com/users/chrisdembia/repos", "events_url": "https://api.github.com/users/chrisdembia/events{/privacy}", "received_events_url": "https://api.github.com/users/chrisdembia/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 2, "created_at": "2015-05-05T16:00:46Z", "updated_at": "2015-05-05T19:05:04Z", "closed_at": null, "author_association": "MEMBER", "active_lock_reason": null, "body": "I'd like the following static method:\n\n``` cpp\nstatic SimTK::Vector_<T>::linspace(const T& firstValue, const T& secondValue, int numValues)\n```\n\nor an analogous convenience constructor.\n", "reactions": {"url": "https://api.github.com/repos/simbody/simbody/issues/369/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/simbody/simbody/issues/369/timeline", "performed_via_github_app": null}, {"url": "https://api.github.com/repos/simbody/simbody/issues/370", "repository_url": "https://api.github.com/repos/simbody/simbody", "labels_url": "https://api.github.com/repos/simbody/simbody/issues/370/labels{/name}", "comments_url": "https://api.github.com/repos/simbody/simbody/issues/370/comments", "events_url": "https://api.github.com/repos/simbody/simbody/issues/370/events", "html_url": "https://github.com/simbody/simbody/issues/370", "id": 75690190, "node_id": "MDU6SXNzdWU3NTY5MDE5MA==", "number": 370, "title": "Delay mass matrix inversion until Acceleration stage", "user": {"login": "sherm1", "id": 4088016, "node_id": "MDQ6VXNlcjQwODgwMTY=", "avatar_url": "https://avatars.githubusercontent.com/u/4088016?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sherm1", "html_url": "https://github.com/sherm1", "followers_url": "https://api.github.com/users/sherm1/followers", "following_url": "https://api.github.com/users/sherm1/following{/other_user}", "gists_url": "https://api.github.com/users/sherm1/gists{/gist_id}", "starred_url": "https://api.github.com/users/sherm1/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sherm1/subscriptions", "organizations_url": "https://api.github.com/users/sherm1/orgs", "repos_url": "https://api.github.com/users/sherm1/repos", "events_url": "https://api.github.com/users/sherm1/events{/privacy}", "received_events_url": "https://api.github.com/users/sherm1/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 52267853, "node_id": "MDU6TGFiZWw1MjI2Nzg1Mw==", "url": "https://api.github.com/repos/simbody/simbody/labels/enhancement", "name": "enhancement", "color": "84b6eb", "default": true, "description": null}, {"id": 121484439, "node_id": "MDU6TGFiZWwxMjE0ODQ0Mzk=", "url": "https://api.github.com/repos/simbody/simbody/labels/OpenSim", "name": "OpenSim", "color": "006b75", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": {"login": "sherm1", "id": 4088016, "node_id": "MDQ6VXNlcjQwODgwMTY=", "avatar_url": "https://avatars.githubusercontent.com/u/4088016?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sherm1", "html_url": "https://github.com/sherm1", "followers_url": "https://api.github.com/users/sherm1/followers", "following_url": "https://api.github.com/users/sherm1/following{/other_user}", "gists_url": "https://api.github.com/users/sherm1/gists{/gist_id}", "starred_url": "https://api.github.com/users/sherm1/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sherm1/subscriptions", "organizations_url": "https://api.github.com/users/sherm1/orgs", "repos_url": "https://api.github.com/users/sherm1/repos", "events_url": "https://api.github.com/users/sherm1/events{/privacy}", "received_events_url": "https://api.github.com/users/sherm1/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "sherm1", "id": 4088016, "node_id": "MDQ6VXNlcjQwODgwMTY=", "avatar_url": "https://avatars.githubusercontent.com/u/4088016?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sherm1", "html_url": "https://github.com/sherm1", "followers_url": "https://api.github.com/users/sherm1/followers", "following_url": "https://api.github.com/users/sherm1/following{/other_user}", "gists_url": "https://api.github.com/users/sherm1/gists{/gist_id}", "starred_url": "https://api.github.com/users/sherm1/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sherm1/subscriptions", "organizations_url": "https://api.github.com/users/sherm1/orgs", "repos_url": "https://api.github.com/users/sherm1/repos", "events_url": "https://api.github.com/users/sherm1/events{/privacy}", "received_events_url": "https://api.github.com/users/sherm1/received_events", "type": "User", "site_admin": false}], "milestone": {"url": "https://api.github.com/repos/simbody/simbody/milestones/1", "html_url": "https://github.com/simbody/simbody/milestone/1", "labels_url": "https://api.github.com/repos/simbody/simbody/milestones/1/labels", "id": 910475, "node_id": "MDk6TWlsZXN0b25lOTEwNDc1", "number": 1, "title": "Simbody 4.0", "description": "This milestone collects Issues and Pull Requests that must be dealt with before Simbody 4.0 can be released. This is a prerequisite for OpenSim 4.0.", "creator": {"login": "sherm1", "id": 4088016, "node_id": "MDQ6VXNlcjQwODgwMTY=", "avatar_url": "https://avatars.githubusercontent.com/u/4088016?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sherm1", "html_url": "https://github.com/sherm1", "followers_url": "https://api.github.com/users/sherm1/followers", "following_url": "https://api.github.com/users/sherm1/following{/other_user}", "gists_url": "https://api.github.com/users/sherm1/gists{/gist_id}", "starred_url": "https://api.github.com/users/sherm1/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sherm1/subscriptions", "organizations_url": "https://api.github.com/users/sherm1/orgs", "repos_url": "https://api.github.com/users/sherm1/repos", "events_url": "https://api.github.com/users/sherm1/events{/privacy}", "received_events_url": "https://api.github.com/users/sherm1/received_events", "type": "User", "site_admin": false}, "open_issues": 12, "closed_issues": 13, "state": "open", "created_at": "2014-12-19T18:48:14Z", "updated_at": "2015-12-23T21:15:41Z", "due_on": "2015-06-01T07:00:00Z", "closed_at": null}, "comments": 2, "created_at": "2015-05-12T18:16:58Z", "updated_at": "2015-12-23T21:15:41Z", "closed_at": "2015-12-23T21:15:41Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "Currently the inverse mass matrix operator is generated in Dynamics stage if it hasn't been requested earlier. This causes trouble in OpenSim for models for which no mass properties have been provided -- see opensim-org/opensim-core#429. OpenSim needs to realize Dynamics stage in order to compute forces for muscle coloring; this should probably be OK as long as no attempt to calculate accelerations is made.\n\nNormally the inverse mass matrix operator is not used until Stage::Acceleration so I think it would be fine to defer its calculation until then. It is already lazy-evaluated and actually available any time after Stage::Position.\n", "reactions": {"url": "https://api.github.com/repos/simbody/simbody/issues/370/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/simbody/simbody/issues/370/timeline", "performed_via_github_app": null}, {"url": "https://api.github.com/repos/simbody/simbody/issues/371", "repository_url": "https://api.github.com/repos/simbody/simbody", "labels_url": "https://api.github.com/repos/simbody/simbody/issues/371/labels{/name}", "comments_url": "https://api.github.com/repos/simbody/simbody/issues/371/comments", "events_url": "https://api.github.com/repos/simbody/simbody/issues/371/events", "html_url": "https://github.com/simbody/simbody/issues/371", "id": 76090061, "node_id": "MDU6SXNzdWU3NjA5MDA2MQ==", "number": 371, "title": "Create Optimizer interface to SNOPT", "user": {"login": "chrisdembia", "id": 846001, "node_id": "MDQ6VXNlcjg0NjAwMQ==", "avatar_url": "https://avatars.githubusercontent.com/u/846001?v=4", "gravatar_id": "", "url": "https://api.github.com/users/chrisdembia", "html_url": "https://github.com/chrisdembia", "followers_url": "https://api.github.com/users/chrisdembia/followers", "following_url": "https://api.github.com/users/chrisdembia/following{/other_user}", "gists_url": "https://api.github.com/users/chrisdembia/gists{/gist_id}", "starred_url": "https://api.github.com/users/chrisdembia/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/chrisdembia/subscriptions", "organizations_url": "https://api.github.com/users/chrisdembia/orgs", "repos_url": "https://api.github.com/users/chrisdembia/repos", "events_url": "https://api.github.com/users/chrisdembia/events{/privacy}", "received_events_url": "https://api.github.com/users/chrisdembia/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2015-05-13T19:08:45Z", "updated_at": "2016-11-22T17:09:25Z", "closed_at": null, "author_association": "MEMBER", "active_lock_reason": null, "body": "SNOPT is a very popular SQP method, used widely for direct collocation. It's not freely available, though. I recently got it working within PSOPT. It'd be nice if Simbody supported it (though, as with CFSQP, people would have to obtain it on their own).\n", "reactions": {"url": "https://api.github.com/repos/simbody/simbody/issues/371/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/simbody/simbody/issues/371/timeline", "performed_via_github_app": null}, {"url": "https://api.github.com/repos/simbody/simbody/issues/379", "repository_url": "https://api.github.com/repos/simbody/simbody", "labels_url": "https://api.github.com/repos/simbody/simbody/issues/379/labels{/name}", "comments_url": "https://api.github.com/repos/simbody/simbody/issues/379/comments", "events_url": "https://api.github.com/repos/simbody/simbody/issues/379/events", "html_url": "https://github.com/simbody/simbody/issues/379", "id": 84087246, "node_id": "MDU6SXNzdWU4NDA4NzI0Ng==", "number": 379, "title": "Initializer-list and move constructors needed for Vector_ and Matrix_", "user": {"login": "chrisdembia", "id": 846001, "node_id": "MDQ6VXNlcjg0NjAwMQ==", "avatar_url": "https://avatars.githubusercontent.com/u/846001?v=4", "gravatar_id": "", "url": "https://api.github.com/users/chrisdembia", "html_url": "https://github.com/chrisdembia", "followers_url": "https://api.github.com/users/chrisdembia/followers", "following_url": "https://api.github.com/users/chrisdembia/following{/other_user}", "gists_url": "https://api.github.com/users/chrisdembia/gists{/gist_id}", "starred_url": "https://api.github.com/users/chrisdembia/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/chrisdembia/subscriptions", "organizations_url": "https://api.github.com/users/chrisdembia/orgs", "repos_url": "https://api.github.com/users/chrisdembia/repos", "events_url": "https://api.github.com/users/chrisdembia/events{/privacy}", "received_events_url": "https://api.github.com/users/chrisdembia/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 52267853, "node_id": "MDU6TGFiZWw1MjI2Nzg1Mw==", "url": "https://api.github.com/repos/simbody/simbody/labels/enhancement", "name": "enhancement", "color": "84b6eb", "default": true, "description": null}, {"id": 108217628, "node_id": "MDU6TGFiZWwxMDgyMTc2Mjg=", "url": "https://api.github.com/repos/simbody/simbody/labels/help%20wanted", "name": "help wanted", "color": "009800", "default": true, "description": null}, {"id": 110136914, "node_id": "MDU6TGFiZWwxMTAxMzY5MTQ=", "url": "https://api.github.com/repos/simbody/simbody/labels/speed", "name": "speed", "color": "f7c6c7", "default": false, "description": null}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2015-06-02T16:05:24Z", "updated_at": "2016-03-16T16:43:30Z", "closed_at": null, "author_association": "MEMBER", "active_lock_reason": null, "body": "", "reactions": {"url": "https://api.github.com/repos/simbody/simbody/issues/379/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/simbody/simbody/issues/379/timeline", "performed_via_github_app": null}, {"url": "https://api.github.com/repos/simbody/simbody/issues/381", "repository_url": "https://api.github.com/repos/simbody/simbody", "labels_url": "https://api.github.com/repos/simbody/simbody/issues/381/labels{/name}", "comments_url": "https://api.github.com/repos/simbody/simbody/issues/381/comments", "events_url": "https://api.github.com/repos/simbody/simbody/issues/381/events", "html_url": "https://github.com/simbody/simbody/issues/381", "id": 84749561, "node_id": "MDU6SXNzdWU4NDc0OTU2MQ==", "number": 381, "title": "Visualizer anti-aliasing", "user": {"login": "chrisdembia", "id": 846001, "node_id": "MDQ6VXNlcjg0NjAwMQ==", "avatar_url": "https://avatars.githubusercontent.com/u/846001?v=4", "gravatar_id": "", "url": "https://api.github.com/users/chrisdembia", "html_url": "https://github.com/chrisdembia", "followers_url": "https://api.github.com/users/chrisdembia/followers", "following_url": "https://api.github.com/users/chrisdembia/following{/other_user}", "gists_url": "https://api.github.com/users/chrisdembia/gists{/gist_id}", "starred_url": "https://api.github.com/users/chrisdembia/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/chrisdembia/subscriptions", "organizations_url": "https://api.github.com/users/chrisdembia/orgs", "repos_url": "https://api.github.com/users/chrisdembia/repos", "events_url": "https://api.github.com/users/chrisdembia/events{/privacy}", "received_events_url": "https://api.github.com/users/chrisdembia/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 108217628, "node_id": "MDU6TGFiZWwxMDgyMTc2Mjg=", "url": "https://api.github.com/repos/simbody/simbody/labels/help%20wanted", "name": "help wanted", "color": "009800", "default": true, "description": null}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 11, "created_at": "2015-06-03T20:08:40Z", "updated_at": "2017-04-10T17:29:06Z", "closed_at": null, "author_association": "MEMBER", "active_lock_reason": null, "body": "Antialiasing can be achieved with 2 lines\n\n```\nglutInitDisplay(... | GLUT_MULTISAMPLE);\nglEnable(GL_MULTISAMPLE);\n```\n\nHere's before:\n\n![screenshot from 2015-06-03 13 05 25](https://cloud.githubusercontent.com/assets/846001/7970258/98a15656-09f1-11e5-94ec-e8f0a9092a67.png)\n\nand after:\n![screenshot from 2015-06-03 13 05 18](https://cloud.githubusercontent.com/assets/846001/7970257/98a03064-09f1-11e5-9008-f68fee246283.png)\n\nIs this worthwhile?\n", "reactions": {"url": "https://api.github.com/repos/simbody/simbody/issues/381/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/simbody/simbody/issues/381/timeline", "performed_via_github_app": null}, {"url": "https://api.github.com/repos/simbody/simbody/issues/384", "repository_url": "https://api.github.com/repos/simbody/simbody", "labels_url": "https://api.github.com/repos/simbody/simbody/issues/384/labels{/name}", "comments_url": "https://api.github.com/repos/simbody/simbody/issues/384/comments", "events_url": "https://api.github.com/repos/simbody/simbody/issues/384/events", "html_url": "https://github.com/simbody/simbody/issues/384", "id": 85292643, "node_id": "MDU6SXNzdWU4NTI5MjY0Mw==", "number": 384, "title": "clang 3.6 warns about rpoly.cpp fabs vs std::abs", "user": {"login": "chrisdembia", "id": 846001, "node_id": "MDQ6VXNlcjg0NjAwMQ==", "avatar_url": "https://avatars.githubusercontent.com/u/846001?v=4", "gravatar_id": "", "url": "https://api.github.com/users/chrisdembia", "html_url": "https://github.com/chrisdembia", "followers_url": "https://api.github.com/users/chrisdembia/followers", "following_url": "https://api.github.com/users/chrisdembia/following{/other_user}", "gists_url": "https://api.github.com/users/chrisdembia/gists{/gist_id}", "starred_url": "https://api.github.com/users/chrisdembia/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/chrisdembia/subscriptions", "organizations_url": "https://api.github.com/users/chrisdembia/orgs", "repos_url": "https://api.github.com/users/chrisdembia/repos", "events_url": "https://api.github.com/users/chrisdembia/events{/privacy}", "received_events_url": "https://api.github.com/users/chrisdembia/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2015-06-04T21:45:51Z", "updated_at": "2015-06-04T23:24:04Z", "closed_at": "2015-06-04T23:24:04Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "@klshrinidhi got me trying clang-3.6, which gives the following warning:\n\n```\n/Users/chris/repos/simbody/1/simbody/SimTKcommon/Polynomial/src/rpoly.cpp:311:29: warning: \n      absolute value function 'fabs' given an argument of type 'long double' but\n      has parameter of type 'double' which may cause truncation of value\n      [-Wabsolute-value]\n        if (ss != 0.0) ts = fabs((ss-oss)/ss);\n                            ^\n/Users/chris/repos/simbody/1/simbody/SimTKcommon/Polynomial/src/rpoly.cpp:311:29: note: \n      use function 'std::abs' instead\n        if (ss != 0.0) ts = fabs((ss-oss)/ss);\n                            ^~~~\n                            std::abs\n```\n\nI'm really scared of editing `rpoly.cpp` because it uses `goto`'s. Are the `goto`'s affected by macros? Two possible fixes: ignore the warning or use `std::abs`.\n", "reactions": {"url": "https://api.github.com/repos/simbody/simbody/issues/384/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/simbody/simbody/issues/384/timeline", "performed_via_github_app": null}, {"url": "https://api.github.com/repos/simbody/simbody/issues/388", "repository_url": "https://api.github.com/repos/simbody/simbody", "labels_url": "https://api.github.com/repos/simbody/simbody/issues/388/labels{/name}", "comments_url": "https://api.github.com/repos/simbody/simbody/issues/388/comments", "events_url": "https://api.github.com/repos/simbody/simbody/issues/388/events", "html_url": "https://github.com/simbody/simbody/issues/388", "id": 85866126, "node_id": "MDU6SXNzdWU4NTg2NjEyNg==", "number": 388, "title": "clang 3.6 gives \"Undefined bool conversion\" in ClonePtr", "user": {"login": "chrisdembia", "id": 846001, "node_id": "MDQ6VXNlcjg0NjAwMQ==", "avatar_url": "https://avatars.githubusercontent.com/u/846001?v=4", "gravatar_id": "", "url": "https://api.github.com/users/chrisdembia", "html_url": "https://github.com/chrisdembia", "followers_url": "https://api.github.com/users/chrisdembia/followers", "following_url": "https://api.github.com/users/chrisdembia/following{/other_user}", "gists_url": "https://api.github.com/users/chrisdembia/gists{/gist_id}", "starred_url": "https://api.github.com/users/chrisdembia/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/chrisdembia/subscriptions", "organizations_url": "https://api.github.com/users/chrisdembia/orgs", "repos_url": "https://api.github.com/users/chrisdembia/repos", "events_url": "https://api.github.com/users/chrisdembia/events{/privacy}", "received_events_url": "https://api.github.com/users/chrisdembia/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2015-06-07T06:21:11Z", "updated_at": "2015-06-08T16:37:52Z", "closed_at": "2015-06-08T16:37:52Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "```\n/Users/chris/repos/simbody/1/install/include/simbody/SimTKcommon/internal/ClonePtr.h:84:16\n: warning: \n      reference cannot be bound to dereferenced null pointer in well-defined C++\n      code; pointer may be assumed to always convert to true\n      [-Wundefined-bool-conversion]\n    {   reset(&t ? t.clone()  :0); return *this; }\n```\n\nhttp://stackoverflow.com/questions/28689269/how-to-fix-reference-cannot-be-bound-to-dereferenced-null-pointer-warning\n\nAny ideas on how to fix this?\n", "reactions": {"url": "https://api.github.com/repos/simbody/simbody/issues/388/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/simbody/simbody/issues/388/timeline", "performed_via_github_app": null}, {"url": "https://api.github.com/repos/simbody/simbody/issues/389", "repository_url": "https://api.github.com/repos/simbody/simbody", "labels_url": "https://api.github.com/repos/simbody/simbody/issues/389/labels{/name}", "comments_url": "https://api.github.com/repos/simbody/simbody/issues/389/comments", "events_url": "https://api.github.com/repos/simbody/simbody/issues/389/events", "html_url": "https://github.com/simbody/simbody/issues/389", "id": 85995214, "node_id": "MDU6SXNzdWU4NTk5NTIxNA==", "number": 389, "title": "Trying to build the examples separately using Simbody's static libraries generates linker errors", "user": {"login": "chrisdembia", "id": 846001, "node_id": "MDQ6VXNlcjg0NjAwMQ==", "avatar_url": "https://avatars.githubusercontent.com/u/846001?v=4", "gravatar_id": "", "url": "https://api.github.com/users/chrisdembia", "html_url": "https://github.com/chrisdembia", "followers_url": "https://api.github.com/users/chrisdembia/followers", "following_url": "https://api.github.com/users/chrisdembia/following{/other_user}", "gists_url": "https://api.github.com/users/chrisdembia/gists{/gist_id}", "starred_url": "https://api.github.com/users/chrisdembia/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/chrisdembia/subscriptions", "organizations_url": "https://api.github.com/users/chrisdembia/orgs", "repos_url": "https://api.github.com/users/chrisdembia/repos", "events_url": "https://api.github.com/users/chrisdembia/events{/privacy}", "received_events_url": "https://api.github.com/users/chrisdembia/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2015-06-08T02:32:57Z", "updated_at": "2015-06-08T03:36:48Z", "closed_at": "2015-06-08T03:36:48Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "VS 2013\n\n```\n2>  ExampleKneeJoint.cpp\n2>ExampleKneeJoint.obj : warning LNK4217: locally defined symbol ??0MatrixStructure@SimTK@@QEAA@W4Structure@01@W4Position@01@W4DiagValue@01@@Z (public: __cdecl SimTK::MatrixStructure::MatrixStructure(enum SimTK::MatrixStructure::Structure,enum SimTK::MatrixStructure::Position,enum SimTK::MatrixStructure::DiagValue)) imported in function \"public: static class SimTK::SplineFitter<double> __cdecl SimTK::SplineFitter<double>::fitFromGCV(int,class SimTK::Vector_<double> const &,class SimTK::Vector_<double> const &)\" (?fitFromGCV@?$SplineFitter@N@SimTK@@SA?AV12@HAEBV?$Vector_@N@2@0@Z)\n2>ExampleKneeJoint.obj : warning LNK4217: locally defined symbol ??0MatrixStorage@SimTK@@QEAA@XZ (public: __cdecl SimTK::MatrixStorage::MatrixStorage(void)) imported in function \"public: __cdecl SimTK::MatrixCommitment::Vector::Vector(void)\" (??0Vector@MatrixCommitment@SimTK@@QEAA@XZ)\n2>ExampleKneeJoint.obj : warning LNK4217: locally defined symbol ??0MatrixCommitment@SimTK@@IEAA@AEBVMatrixStructure@1@AEBVMatrixStorage@1@AEBVMatrixOutline@1@AEBVMatrixCondition@1@@Z (protected: __cdecl SimTK::MatrixCommitment::MatrixCommitment(class SimTK::MatrixStructure const &,class SimTK::MatrixStorage const &,class SimTK::MatrixOutline const &,class SimTK::MatrixCondition const &)) imported in function \"public: __cdecl SimTK::VectorBase<double>::VectorBase<double>(int)\" (??0?$VectorBase@N@SimTK@@QEAA@H@Z)\n2>ExampleKneeJoint.obj : warning LNK4217: locally defined symbol ??0State@SimTK@@QEAA@AEBV01@@Z (public: __cdecl SimTK::State::State(class SimTK::State const &)) imported in function main\n2>ExampleKneeJoint.obj : warning LNK4217: locally defined symbol ??1State@SimTK@@QEAA@XZ (public: __cdecl SimTK::State::~State(void)) imported in function main\n2>ExampleKneeJoint.obj : warning LNK4217: locally defined symbol ??1?$MatrixHelper@N@SimTK@@QEAA@XZ (public: __cdecl SimTK::MatrixHelper<double>::~MatrixHelper<double>(void)) imported in function \"int `public: __cdecl SimTK::MatrixBase<double>::MatrixBase<double>(class MatrixBase<double>::MatrixCommitment const &,int,int,double const &)'::`1'::dtor$0\" (?dtor$0@?0???0?$MatrixBase@N@SimTK@@QEAA@AEBVMatrixCommitment@1@HHAEBN@Z@4HA)\n2>ExampleKneeJoint.obj : warning LNK4217: locally defined symbol ??0?$MatrixHelper@N@SimTK@@QEAA@HHAEBVMatrixCommitment@1@HH@Z (public: __cdecl SimTK::MatrixHelper<double>::MatrixHelper<double>(int,int,class SimTK::MatrixCommitment const &,int,int)) imported in function \"public: __cdecl SimTK::MatrixBase<double>::MatrixBase<double>(class SimTK::MatrixCommitment const &,int,int)\" (??0?$MatrixBase@N@SimTK@@QEAA@AEBVMatrixCommitment@1@HH@Z)\n2>ExampleKneeJoint.obj : warning LNK4217: locally defined symbol ??0?$MatrixHelper@N@SimTK@@QEAA@AEBVMatrixCommitment@1@AEBV01@AEBVDeepCopy@01@@Z (public: __cdecl SimTK::MatrixHelper<double>::MatrixHelper<double>(class SimTK::MatrixCommitment const &,class SimTK::MatrixHelper<double> const &,class SimTK::MatrixHelper<double>::DeepCopy const &)) imported in function \"class SimTK::Vector_<double> __cdecl SimTK::operator*<double>(class SimTK::VectorBase<double> const &,double const &)\" (??$?DN@SimTK@@YA?AV?$Vector_@N@0@AEBV?$VectorBase@N@0@AEBN@Z)\n2>ExampleKneeJoint.obj : warning LNK4217: locally defined symbol ?copyAssign@?$MatrixHelper@N@SimTK@@QEAAAEAV12@AEBV12@@Z (public: class SimTK::MatrixHelper<double> & __cdecl SimTK::MatrixHelper<double>::copyAssign(class SimTK::MatrixHelper<double> const &)) imported in function \"public: class SimTK::MatrixBase<double> & __cdecl SimTK::MatrixBase<double>::operator=(class SimTK::MatrixBase<double> const &)\" (??4?$MatrixBase@N@SimTK@@QEAAAEAV01@AEBV01@@Z)\n2>ExampleKneeJoint.obj : warning LNK4217: locally defined symbol ?updElt@?$MatrixHelper@N@SimTK@@QEAAPEANHH@Z (public: double * __cdecl SimTK::MatrixHelper<double>::updElt(int,int)) imported in function \"public: class SimTK::MatrixBase<double> & __cdecl SimTK::MatrixBase<double>::elementwiseAddScalarInPlace<double>(double const &)\" (??$elementwiseAddScalarInPlace@N@?$MatrixBase@N@SimTK@@QEAAAEAV01@AEBN@Z)\n2>ExampleKneeJoint.obj : warning LNK4217: locally defined symbol ?getElt@?$MatrixHelper@N@SimTK@@QEBAPEBNH@Z (public: double const * __cdecl SimTK::MatrixHelper<double>::getElt(int)const ) imported in function \"public: double const & __cdecl SimTK::VectorBase<double>::operator[](int)const \" (??A?$VectorBase@N@SimTK@@QEBAAEBNH@Z)\n2>ExampleKneeJoint.obj : warning LNK4217: locally defined symbol ?updElt@?$MatrixHelper@N@SimTK@@QEAAPEANH@Z (public: double * __cdecl SimTK::MatrixHelper<double>::updElt(int)) imported in function \"public: double & __cdecl SimTK::VectorBase<double>::operator[](int)\" (??A?$VectorBase@N@SimTK@@QEAAAEANH@Z)\n2>ExampleKneeJoint.obj : warning LNK4217: locally defined symbol ?fillWith@?$MatrixHelper@N@SimTK@@QEAAXPEBN@Z (public: void __cdecl SimTK::MatrixHelper<double>::fillWith(double const *)) imported in function \"public: __cdecl SimTK::MatrixBase<double>::MatrixBase<double>(class SimTK::MatrixCommitment const &,int,int,double const &)\" (??0?$MatrixBase@N@SimTK@@QEAA@AEBVMatrixCommitment@1@HHAEBN@Z)\n2>ExampleKneeJoint.obj : warning LNK4217: locally defined symbol ?copyInByRowsFromCpp@?$MatrixHelper@N@SimTK@@QEAAXPEBN@Z (public: void __cdecl SimTK::MatrixHelper<double>::copyInByRowsFromCpp(double const *)) imported in function \"public: __cdecl SimTK::MatrixBase<double>::MatrixBase<double>(class SimTK::MatrixCommitment const &,int,int,double const *)\" (??0?$MatrixBase@N@SimTK@@QEAA@AEBVMatrixCommitment@1@HHPEBN@Z)\n2>ExampleKneeJoint.obj : warning LNK4217: locally defined symbol ?scaleBy@?$MatrixHelper@N@SimTK@@QEAAXAEBN@Z (public: void __cdecl SimTK::MatrixHelper<double>::scaleBy(double const &)) imported in function \"class SimTK::Vector_<double> __cdecl SimTK::operator*<double>(class SimTK::VectorBase<double> const &,double const &)\" (??$?DN@SimTK@@YA?AV?$Vector_@N@0@AEBV?$VectorBase@N@0@AEBN@Z)\n2>ExampleKneeJoint.obj : warning LNK4217: locally defined symbol ?nrow@?$MatrixHelper@N@SimTK@@QEBAHXZ (public: int __cdecl SimTK::MatrixHelper<double>::nrow(void)const ) imported in function \"public: class SimTK::MatrixBase<double> & __cdecl SimTK::MatrixBase<double>::elementwiseAddScalarInPlace<double>(double const &)\" (??$elementwiseAddScalarInPlace@N@?$MatrixBase@N@SimTK@@QEAAAEAV01@AEBN@Z)\n2>ExampleKneeJoint.obj : warning LNK4217: locally defined symbol ?ncol@?$MatrixHelper@N@SimTK@@QEBAHXZ (public: int __cdecl SimTK::MatrixHelper<double>::ncol(void)const ) imported in function \"public: class SimTK::MatrixBase<double> & __cdecl SimTK::MatrixBase<double>::elementwiseAddScalarInPlace<double>(double const &)\" (??$elementwiseAddScalarInPlace@N@?$MatrixBase@N@SimTK@@QEAAAEAV01@AEBN@Z)\n2>ExampleKneeJoint.obj : warning LNK4217: locally defined symbol ?nelt@?$MatrixHelper@N@SimTK@@QEBA_JXZ (public: __int64 __cdecl SimTK::MatrixHelper<double>::nelt(void)const ) imported in function \"public: virtual double __cdecl SimTK::Function_<double>::Linear::calcValue(class SimTK::Vector_<double> const &)const \" (?calcValue@Linear@?$Function_@N@SimTK@@UEBANAEBV?$Vector_@N@3@@Z)\n2>ExampleKneeJoint.obj : warning LNK4217: locally defined symbol ?getCharacterCommitment@?$MatrixHelper@N@SimTK@@QEBAAEBVMatrixCommitment@2@XZ (public: class SimTK::MatrixCommitment const & __cdecl SimTK::MatrixHelper<double>::getCharacterCommitment(void)const ) imported in function \"class SimTK::Vector_<double> __cdecl SimTK::operator*<double>(class SimTK::VectorBase<double> const &,double const &)\" (??$?DN@SimTK@@YA?AV?$Vector_@N@0@AEBV?$VectorBase@N@0@AEBN@Z)\n2>ExampleKneeJoint.obj : warning LNK4217: locally defined symbol ?deleteRepIfOwner@?$MatrixHelper@N@SimTK@@QEAAXXZ (public: void __cdecl SimTK::MatrixHelper<double>::deleteRepIfOwner(void)) imported in function \"class SimTK::Vector_<double> __cdecl SimTK::operator*<double>(class SimTK::VectorBase<double> const &,double const &)\" (??$?DN@SimTK@@YA?AV?$Vector_@N@0@AEBV?$VectorBase@N@0@AEBN@Z)\n2>ExampleKneeJoint.obj : warning LNK4217: locally defined symbol ??1Subsystem@SimTK@@QEAA@XZ (public: __cdecl SimTK::Subsystem::~Subsystem(void)) imported in function main\n2>ExampleKneeJoint.obj : warning LNK4217: locally defined symbol ?setUseUniformBackground@System@SimTK@@QEAAAEAV12@_N@Z (public: class SimTK::System & __cdecl SimTK::System::setUseUniformBackground(bool)) imported in function main\n2>ExampleKneeJoint.obj : warning LNK4217: locally defined symbol ?realizeTopology@System@SimTK@@QEBAAEBVState@2@XZ (public: class SimTK::State const & __cdecl SimTK::System::realizeTopology(void)const ) imported in function main\n2>ExampleKneeJoint.obj : warning LNK4217: locally defined symbol ?getDefaultState@System@SimTK@@QEBAAEBVState@2@XZ (public: class SimTK::State const & __cdecl SimTK::System::getDefaultState(void)const ) imported in function main\n2>ExampleKneeJoint.obj : warning LNK4217: locally defined symbol ?realizeModel@System@SimTK@@QEBAXAEAVState@2@@Z (public: void __cdecl SimTK::System::realizeModel(class SimTK::State &)const ) imported in function main\n2>ExampleKneeJoint.obj : warning LNK4217: locally defined symbol ??1System@SimTK@@QEAA@XZ (public: __cdecl SimTK::System::~System(void)) imported in function main\n2>ExampleKneeJoint.obj : warning LNK4217: locally defined symbol ?getDefaultSubsystem@System@SimTK@@QEBAAEBVDefaultSystemSubsystem@2@XZ (public: class SimTK::DefaultSystemSubsystem const & __cdecl SimTK::System::getDefaultSubsystem(void)const ) imported in function main\n2>ExampleKneeJoint.obj : warning LNK4217: locally defined symbol ?addEventReporter@DefaultSystemSubsystem@SimTK@@QEBAXPEAVScheduledEventReporter@2@@Z (public: void __cdecl SimTK::DefaultSystemSubsystem::addEventReporter(class SimTK::ScheduledEventReporter *)const ) imported in function main\n2>ExampleKneeJoint.obj : warning LNK4217: locally defined symbol ??1DecorativeGeometry@SimTK@@QEAA@XZ (public: __cdecl SimTK::DecorativeGeometry::~DecorativeGeometry(void)) imported in function main\n2>ExampleKneeJoint.obj : warning LNK4217: locally defined symbol ?setColor@DecorativeGeometry@SimTK@@QEAAAEAV12@AEBV?$Vec@$02N$00@2@@Z (public: class SimTK::DecorativeGeometry & __cdecl SimTK::DecorativeGeometry::setColor(class SimTK::Vec<3,double,1> const &)) imported in function main\n2>ExampleKneeJoint.obj : warning LNK4217: locally defined symbol ?setOpacity@DecorativeGeometry@SimTK@@QEAAAEAV12@N@Z (public: class SimTK::DecorativeGeometry & __cdecl SimTK::DecorativeGeometry::setOpacity(double)) imported in function main\n2>ExampleKneeJoint.obj : warning LNK4217: locally defined symbol ??0DecorativeCylinder@SimTK@@QEAA@NN@Z (public: __cdecl SimTK::DecorativeCylinder::DecorativeCylinder(double,double)) imported in function main\n2>ExampleKneeJoint.obj : warning LNK4217: locally defined symbol ??1?$Function_@N@SimTK@@UEAA@XZ (public: virtual __cdecl SimTK::Function_<double>::~Function_<double>(void)) imported in function \"int `public: __cdecl SimTK::Spline_<double>::Spline_<double>(int,class Spline_<double>::Vector_<double> const &,class Spline_<double>::Vector_<double> const &)'::`1'::dtor$0\" (?dtor$0@?0???0?$Spline_@N@SimTK@@QEAA@HAEBV?$Vector_@N@1@0@Z@4HA)\n2>ExampleKneeJoint.obj : warning LNK4217: locally defined symbol ??1PeriodicEventReporter@SimTK@@UEAA@XZ (public: virtual __cdecl SimTK::PeriodicEventReporter::~PeriodicEventReporter(void)) imported in function \"public: virtual __cdecl MyEnergyReporter::~MyEnergyReporter(void)\" (??1MyEnergyReporter@@UEAA@XZ)\n2>ExampleKneeJoint.obj : warning LNK4217: locally defined symbol ??0PeriodicEventReporter@SimTK@@QEAA@N@Z (public: __cdecl SimTK::PeriodicEventReporter::PeriodicEventReporter(double)) imported in function \"public: __cdecl MyEnergyReporter::MyEnergyReporter(class SimTK::MultibodySystem const &,double)\" (??0MyEnergyReporter@@QEAA@AEBVMultibodySystem@SimTK@@N@Z)\n2>ExampleKneeJoint.obj : warning LNK4217: locally defined symbol ??1Integrator@SimTK@@QEAA@XZ (public: __cdecl SimTK::Integrator::~Integrator(void)) imported in function main\n2>ExampleKneeJoint.obj : warning LNK4217: locally defined symbol ?setAccuracy@Integrator@SimTK@@QEAAXN@Z (public: void __cdecl SimTK::Integrator::setAccuracy(double)) imported in function main\n2>ExampleKneeJoint.obj : warning LNK4217: locally defined symbol ??0TimeStepper@SimTK@@QEAA@AEBVSystem@1@AEAVIntegrator@1@@Z (public: __cdecl SimTK::TimeStepper::TimeStepper(class SimTK::System const &,class SimTK::Integrator &)) imported in function main\n2>ExampleKneeJoint.obj : warning LNK4217: locally defined symbol ??1TimeStepper@SimTK@@QEAA@XZ (public: __cdecl SimTK::TimeStepper::~TimeStepper(void)) imported in function main\n2>ExampleKneeJoint.obj : warning LNK4217: locally defined symbol ?initialize@TimeStepper@SimTK@@QEAAXAEBVState@2@@Z (public: void __cdecl SimTK::TimeStepper::initialize(class SimTK::State const &)) imported in function main\n2>ExampleKneeJoint.obj : warning LNK4217: locally defined symbol ?stepTo@TimeStepper@SimTK@@QEAA?AW4SuccessfulStepStatus@Integrator@2@N@Z (public: enum SimTK::Integrator::SuccessfulStepStatus __cdecl SimTK::TimeStepper::stepTo(double)) imported in function main\n2>ExampleKneeJoint.obj : warning LNK4217: locally defined symbol ??0RungeKuttaMersonIntegrator@SimTK@@QEAA@AEBVSystem@1@@Z (public: __cdecl SimTK::RungeKuttaMersonIntegrator::RungeKuttaMersonIntegrator(class SimTK::System const &)) imported in function main\n2>ExampleKneeJoint.obj : warning LNK4217: locally defined symbol ??1RungeKuttaMersonIntegrator@SimTK@@QEAA@XZ (public: __cdecl SimTK::RungeKuttaMersonIntegrator::~RungeKuttaMersonIntegrator(void)) imported in function main$dtor$9\n2>ExampleKneeJoint.obj : warning LNK4217: locally defined symbol ??0MultibodySystem@SimTK@@QEAA@XZ (public: __cdecl SimTK::MultibodySystem::MultibodySystem(void)) imported in function main\n2>ExampleKneeJoint.obj : warning LNK4217: locally defined symbol ?calcPotentialEnergy@MultibodySystem@SimTK@@QEBA?BNAEBVState@2@@Z (public: double const __cdecl SimTK::MultibodySystem::calcPotentialEnergy(class SimTK::State const &)const ) imported in function \"public: virtual void __cdecl MyEnergyReporter::handleEvent(class SimTK::State const &)const \" (?handleEvent@MyEnergyReporter@@UEBAXAEBVState@SimTK@@@Z)\n2>ExampleKneeJoint.obj : warning LNK4217: locally defined symbol ?calcKineticEnergy@MultibodySystem@SimTK@@QEBA?BNAEBVState@2@@Z (public: double const __cdecl SimTK::MultibodySystem::calcKineticEnergy(class SimTK::State const &)const ) imported in function \"public: virtual void __cdecl MyEnergyReporter::handleEvent(class SimTK::State const &)const \" (?handleEvent@MyEnergyReporter@@UEBAXAEBVState@SimTK@@@Z)\n2>ExampleKneeJoint.obj : warning LNK4217: locally defined symbol ??1Body@SimTK@@QEAA@XZ (public: __cdecl SimTK::Body::~Body(void)) imported in function main\n2>ExampleKneeJoint.obj : warning LNK4217: locally defined symbol ?addDecoration@Body@SimTK@@QEAAHAEBV?$Transform_@N@2@AEBVDecorativeGeometry@2@@Z (public: int __cdecl SimTK::Body::addDecoration(class SimTK::Transform_<double> const &,class SimTK::DecorativeGeometry const &)) imported in function main\n2>ExampleKneeJoint.obj : warning LNK4217: locally defined symbol ??0Rigid@Body@SimTK@@QEAA@AEBV?$MassProperties_@N@2@@Z (public: __cdecl SimTK::Body::Rigid::Rigid(class SimTK::MassProperties_<double> const &)) imported in function main\n2>ExampleKneeJoint.obj : warning LNK4217: locally defined symbol ??1?$PIMPLHandle@VMobilizedBody@SimTK@@VMobilizedBodyImpl@2@$00@SimTK@@IEAA@XZ (protected: __cdecl SimTK::PIMPLHandle<class SimTK::MobilizedBody,class SimTK::MobilizedBodyImpl,1>::~PIMPLHandle<class SimTK::MobilizedBody,class SimTK::MobilizedBodyImpl,1>(void)) imported in function main\n2>ExampleKneeJoint.obj : warning LNK4217: locally defined symbol ?getOneQ@MobilizedBody@SimTK@@QEBANAEBVState@2@H@Z (public: double __cdecl SimTK::MobilizedBody::getOneQ(class SimTK::State const &,int)const ) imported in function \"public: virtual void __cdecl MyStop::calcForce(class SimTK::State const &,class SimTK::Vector_<class SimTK::Vec<2,class SimTK::Vec<3,double,1>,1> > &,class SimTK::Vector_<class SimTK::Vec<3,double,1> > &,class SimTK::Vector_<double> &)const \" (?calcForce@MyStop@@UEBAXAEBVState@SimTK@@AEAV?$Vector_@V?$Vec@$01V?$Vec@$02N$00@SimTK@@$00@SimTK@@@3@AEAV?$Vector_@V?$Vec@$02N$00@SimTK@@@3@AEAV?$Vector_@N@3@@Z)\n2>ExampleKneeJoint.obj : warning LNK4217: locally defined symbol ?setOneQ@MobilizedBody@SimTK@@QEBAXAEAVState@2@HN@Z (public: void __cdecl SimTK::MobilizedBody::setOneQ(class SimTK::State &,int,double)const ) imported in function main\n2>ExampleKneeJoint.obj : warning LNK4217: locally defined symbol ?setOneU@MobilizedBody@SimTK@@QEBAXAEAVState@2@HN@Z (public: void __cdecl SimTK::MobilizedBody::setOneU(class SimTK::State &,int,double)const ) imported in function main\n2>ExampleKneeJoint.obj : warning LNK4217: locally defined symbol ?updOneFromUPartition@MobilizedBody@SimTK@@QEBAAEANAEBVState@2@HAEAV?$Vector_@N@2@@Z (public: double & __cdecl SimTK::MobilizedBody::updOneFromUPartition(class SimTK::State const &,int,class SimTK::Vector_<double> &)const ) imported in function \"public: virtual void __cdecl MyStop::calcForce(class SimTK::State const &,class SimTK::Vector_<class SimTK::Vec<2,class SimTK::Vec<3,double,1>,1> > &,class SimTK::Vector_<class SimTK::Vec<3,double,1> > &,class SimTK::Vector_<double> &)const \" (?calcForce@MyStop@@UEBAXAEBVState@SimTK@@AEAV?$Vector_@V?$Vec@$01V?$Vec@$02N$00@SimTK@@$00@SimTK@@@3@AEAV?$Vector_@V?$Vec@$02N$00@SimTK@@@3@AEAV?$Vector_@N@3@@Z)\n2>ExampleKneeJoint.obj : warning LNK4217: locally defined symbol ??0Pin@MobilizedBody@SimTK@@QEAA@AEAV12@AEBV?$Transform_@N@2@AEBVBody@2@1W4Direction@12@@Z (public: __cdecl SimTK::MobilizedBody::Pin::Pin(class SimTK::MobilizedBody &,class SimTK::Transform_<double> const &,class SimTK::Body const &,class SimTK::Transform_<double> const &,enum SimTK::MobilizedBody::Direction)) imported in function main\n2>ExampleKneeJoint.obj : warning LNK4217: locally defined symbol ??0SimbodyMatterSubsystem@SimTK@@QEAA@AEAVMultibodySystem@1@@Z (public: __cdecl SimTK::SimbodyMatterSubsystem::SimbodyMatterSubsystem(class SimTK::MultibodySystem &)) imported in function main\n2>ExampleKneeJoint.obj : warning LNK4217: locally defined symbol ?updGround@SimbodyMatterSubsystem@SimTK@@QEAAAEAVGround@MobilizedBody@2@XZ (public: class SimTK::MobilizedBody::Ground & __cdecl SimTK::SimbodyMatterSubsystem::updGround(void)) imported in function main\n2>ExampleKneeJoint.obj : warning LNK4217: locally defined symbol ?setShowDefaultGeometry@SimbodyMatterSubsystem@SimTK@@QEAAX_N@Z (public: void __cdecl SimTK::SimbodyMatterSubsystem::setShowDefaultGeometry(bool)) imported in function main\n2>ExampleKneeJoint.obj : warning LNK4217: locally defined symbol ?setUseEulerAngles@SimbodyMatterSubsystem@SimTK@@QEBAXAEAVState@2@_N@Z (public: void __cdecl SimTK::SimbodyMatterSubsystem::setUseEulerAngles(class SimTK::State &,bool)const ) imported in function main\n2>ExampleKneeJoint.obj : warning LNK4217: locally defined symbol ??0Visualizer@SimTK@@QEAA@AEBVMultibodySystem@1@@Z (public: __cdecl SimTK::Visualizer::Visualizer(class SimTK::MultibodySystem const &)) imported in function main\n2>ExampleKneeJoint.obj : warning LNK4217: locally defined symbol ??1Visualizer@SimTK@@QEAA@XZ (public: __cdecl SimTK::Visualizer::~Visualizer(void)) imported in function main\n2>ExampleKneeJoint.obj : warning LNK4217: locally defined symbol ??0Reporter@Visualizer@SimTK@@QEAA@AEBV12@N@Z (public: __cdecl SimTK::Visualizer::Reporter::Reporter(class SimTK::Visualizer const &,double)) imported in function main\n2>ExampleKneeJoint.obj : warning LNK4217: locally defined symbol ??1Reporter@Visualizer@SimTK@@UEAA@XZ (public: virtual __cdecl SimTK::Visualizer::Reporter::~Reporter(void)) imported in function \"public: virtual void * __cdecl SimTK::Visualizer::Reporter::`scalar deleting destructor'(unsigned int)\" (??_GReporter@Visualizer@SimTK@@UEAAPEAXI@Z)\n2>ExampleKneeJoint.obj : warning LNK4049: locally defined symbol ?NegYAxis@SimTK@@3VNegYDirection@CoordinateDirection@1@B (class SimTK::CoordinateDirection::NegYDirection const SimTK::NegYAxis) imported\n2>ExampleKneeJoint.obj : warning LNK4049: locally defined symbol ?Pi@SimTK@@3NB (double const SimTK::Pi) imported\n2>ExampleKneeJoint.obj : warning LNK4049: locally defined symbol ?Red@SimTK@@3V?$Vec@$02N$00@1@B (class SimTK::Vec<3,double,1> const SimTK::Red) imported\n2>ExampleKneeJoint.obj : warning LNK4049: locally defined symbol ?Orange@SimTK@@3V?$Vec@$02N$00@1@B (class SimTK::Vec<3,double,1> const SimTK::Orange) imported\n2>ExampleKneeJoint.obj : warning LNK4217: locally defined symbol ??_7?$Function_@N@SimTK@@6B@ (const SimTK::Function_<double>::`vftable') imported in function \"public: virtual __cdecl SimTK::Spline_<double>::~Spline_<double>(void)\" (??1?$Spline_@N@SimTK@@UEAA@XZ)\n2>ExampleKneeJoint.obj : error LNK2019: unresolved external symbol \"__declspec(dllimport) public: __cdecl SimTK::DecorativeCylinder::~DecorativeCylinder(void)\" (__imp_??1DecorativeCylinder@SimTK@@QEAA@XZ) referenced in function main$dtor$9\n2>ExampleKneeJoint.obj : error LNK2019: unresolved external symbol \"__declspec(dllimport) public: static void __cdecl SimTK::GCVSPLUtil::gcvspl(class SimTK::Vector_<double> const &,class SimTK::Vector_<double> const &,class SimTK::Vector_<double> const &,double,int,int,double,class SimTK::Vector_<double> &,class SimTK::Vector_<double> &,int &)\" (__imp_?gcvspl@GCVSPLUtil@SimTK@@SAXAEBV?$Vector_@N@2@00NHHNAEAV32@1AEAH@Z) referenced in function \"public: static class SimTK::SplineFitter<double> __cdecl SimTK::SplineFitter<double>::fitFromGCV(int,class SimTK::Vector_<double> const &,class SimTK::Vector_<double> const &)\" (?fitFromGCV@?$SplineFitter@N@SimTK@@SA?AV12@HAEBV?$Vector_@N@2@0@Z)\n2>ExampleKneeJoint.obj : error LNK2019: unresolved external symbol \"__declspec(dllimport) public: static double __cdecl SimTK::GCVSPLUtil::splder(int,int,double,class SimTK::Vector_<double> const &,class SimTK::Vector_<double> const &)\" (__imp_?splder@GCVSPLUtil@SimTK@@SANHHNAEBV?$Vector_@N@2@0@Z) referenced in function \"public: double __cdecl SimTK::Spline_<double>::calcDerivative(int,double)const \" (?calcDerivative@?$Spline_@N@SimTK@@QEBANHN@Z)\n2>ExampleKneeJoint.obj : error LNK2019: unresolved external symbol \"__declspec(dllimport) public: __cdecl SimTK::MultibodySystem::~MultibodySystem(void)\" (__imp_??1MultibodySystem@SimTK@@QEAA@XZ) referenced in function main$dtor$9\n2>ExampleKneeJoint.obj : error LNK2019: unresolved external symbol \"__declspec(dllimport) public: __cdecl SimTK::Body::Rigid::~Rigid(void)\" (__imp_??1Rigid@Body@SimTK@@QEAA@XZ) referenced in function main$dtor$9\n2>ExampleKneeJoint.obj : error LNK2019: unresolved external symbol \"__declspec(dllimport) public: __cdecl SimTK::MobilizedBody::FunctionBased::FunctionBased(class SimTK::MobilizedBody &,class SimTK::Transform_<double> const &,class SimTK::Body const &,class SimTK::Transform_<double> const &,int,class std::vector<class SimTK::Function_<double> const *,class std::allocator<class SimTK::Function_<double> const *> > const &,class std::vector<class std::vector<int,class std::allocator<int> >,class std::allocator<class std::vector<int,class std::allocator<int> > > > const &,enum SimTK::MobilizedBody::Direction)\" (__imp_??0FunctionBased@MobilizedBody@SimTK@@QEAA@AEAV12@AEBV?$Transform_@N@2@AEBVBody@2@1HAEBV?$vector@PEBV?$Function_@N@SimTK@@V?$allocator@PEBV?$Function_@N@SimTK@@@std@@@std@@AEBV?$vector@V?$vector@HV?$allocator@H@std@@@std@@V?$allocator@V?$vector@HV?$allocator@H@std@@@std@@@2@@6@W4Direction@12@@Z) referenced in function main\n2>ExampleKneeJoint.obj : error LNK2019: unresolved external symbol \"__declspec(dllimport) public: __cdecl SimTK::MobilizedBody::FunctionBased::~FunctionBased(void)\" (__imp_??1FunctionBased@MobilizedBody@SimTK@@QEAA@XZ) referenced in function main$dtor$9\n2>ExampleKneeJoint.obj : error LNK2019: unresolved external symbol \"__declspec(dllimport) public: __cdecl SimTK::MobilizedBody::Pin::~Pin(void)\" (__imp_??1Pin@MobilizedBody@SimTK@@QEAA@XZ) referenced in function main$dtor$9\n2>ExampleKneeJoint.obj : error LNK2019: unresolved external symbol \"__declspec(dllimport) public: __cdecl SimTK::GeneralForceSubsystem::GeneralForceSubsystem(class SimTK::MultibodySystem &)\" (__imp_??0GeneralForceSubsystem@SimTK@@QEAA@AEAVMultibodySystem@1@@Z) referenced in function main\n2>ExampleKneeJoint.obj : error LNK2019: unresolved external symbol \"__declspec(dllimport) public: __cdecl SimTK::GeneralForceSubsystem::~GeneralForceSubsystem(void)\" (__imp_??1GeneralForceSubsystem@SimTK@@QEAA@XZ) referenced in function main$dtor$9\n2>ExampleKneeJoint.obj : error LNK2019: unresolved external symbol \"__declspec(dllimport) protected: __cdecl SimTK::PIMPLHandle<class SimTK::Force,class SimTK::ForceImpl,1>::~PIMPLHandle<class SimTK::Force,class SimTK::ForceImpl,1>(void)\" (__imp_??1?$PIMPLHandle@VForce@SimTK@@VForceImpl@2@$00@SimTK@@IEAA@XZ) referenced in function main\n2>ExampleKneeJoint.obj : error LNK2019: unresolved external symbol \"__declspec(dllimport) public: __cdecl SimTK::Force::Custom::Custom(class SimTK::GeneralForceSubsystem &,class SimTK::Force::Custom::Implementation *)\" (__imp_??0Custom@Force@SimTK@@QEAA@AEAVGeneralForceSubsystem@2@PEAVImplementation@012@@Z) referenced in function main\n2>ExampleKneeJoint.obj : error LNK2019: unresolved external symbol \"__declspec(dllimport) public: __cdecl SimTK::Force::Gravity::Gravity(class SimTK::GeneralForceSubsystem &,class SimTK::SimbodyMatterSubsystem const &,class SimTK::UnitVec<double,1> const &,double,double)\" (__imp_??0Gravity@Force@SimTK@@QEAA@AEAVGeneralForceSubsystem@2@AEBVSimbodyMatterSubsystem@2@AEBV?$UnitVec@N$00@2@NN@Z) referenced in function main\n2>ExampleKneeJoint.obj : error LNK2019: unresolved external symbol \"__declspec(dllimport) public: __cdecl SimTK::Force::Gravity::~Gravity(void)\" (__imp_??1Gravity@Force@SimTK@@QEAA@XZ) referenced in function main$dtor$9\n2>ExampleKneeJoint.obj : error LNK2019: unresolved external symbol \"__declspec(dllimport) public: __cdecl SimTK::SimbodyMatterSubsystem::~SimbodyMatterSubsystem(void)\" (__imp_??1SimbodyMatterSubsystem@SimTK@@QEAA@XZ) referenced in function main$dtor$9\n2>ExampleKneeJoint.obj : error LNK2001: unresolved external symbol \"public: virtual void __cdecl SimTK::Force::Custom::Implementation::calcDecorativeGeometryAndAppend(class SimTK::State const &,class SimTK::Stage,class SimTK::Array_<class SimTK::DecorativeGeometry,unsigned int> &)const \" (?calcDecorativeGeometryAndAppend@Implementation@Custom@Force@SimTK@@UEBAXAEBVState@4@VStage@4@AEAV?$Array_@VDecorativeGeometry@SimTK@@I@4@@Z)\n2>ExampleKneeJoint.obj : error LNK2001: unresolved external symbol \"public: virtual bool __cdecl SimTK::Force::Custom::Implementation::dependsOnlyOnPositions(void)const \" (?dependsOnlyOnPositions@Implementation@Custom@Force@SimTK@@UEBA_NXZ)\n2>ExampleKneeJoint.obj : error LNK2001: unresolved external symbol \"public: virtual void __cdecl SimTK::Force::Custom::Implementation::realizeAcceleration(class SimTK::State const &)const \" (?realizeAcceleration@Implementation@Custom@Force@SimTK@@UEBAXAEBVState@4@@Z)\n2>ExampleKneeJoint.obj : error LNK2001: unresolved external symbol \"public: virtual void __cdecl SimTK::Force::Custom::Implementation::realizeDynamics(class SimTK::State const &)const \" (?realizeDynamics@Implementation@Custom@Force@SimTK@@UEBAXAEBVState@4@@Z)\n2>ExampleKneeJoint.obj : error LNK2001: unresolved external symbol \"public: virtual void __cdecl SimTK::Force::Custom::Implementation::realizeInstance(class SimTK::State const &)const \" (?realizeInstance@Implementation@Custom@Force@SimTK@@UEBAXAEBVState@4@@Z)\n2>ExampleKneeJoint.obj : error LNK2001: unresolved external symbol \"public: virtual void __cdecl SimTK::Force::Custom::Implementation::realizeModel(class SimTK::State &)const \" (?realizeModel@Implementation@Custom@Force@SimTK@@UEBAXAEAVState@4@@Z)\n2>ExampleKneeJoint.obj : error LNK2001: unresolved external symbol \"public: virtual void __cdecl SimTK::Force::Custom::Implementation::realizePosition(class SimTK::State const &)const \" (?realizePosition@Implementation@Custom@Force@SimTK@@UEBAXAEBVState@4@@Z)\n2>ExampleKneeJoint.obj : error LNK2001: unresolved external symbol \"public: virtual void __cdecl SimTK::Force::Custom::Implementation::realizeReport(class SimTK::State const &)const \" (?realizeReport@Implementation@Custom@Force@SimTK@@UEBAXAEBVState@4@@Z)\n2>ExampleKneeJoint.obj : error LNK2001: unresolved external symbol \"public: virtual void __cdecl SimTK::Force::Custom::Implementation::realizeTime(class SimTK::State const &)const \" (?realizeTime@Implementation@Custom@Force@SimTK@@UEBAXAEBVState@4@@Z)\n2>ExampleKneeJoint.obj : error LNK2001: unresolved external symbol \"public: virtual void __cdecl SimTK::Force::Custom::Implementation::realizeTopology(class SimTK::State &)const \" (?realizeTopology@Implementation@Custom@Force@SimTK@@UEBAXAEAVState@4@@Z)\n2>ExampleKneeJoint.obj : error LNK2001: unresolved external symbol \"public: virtual void __cdecl SimTK::Force::Custom::Implementation::realizeVelocity(class SimTK::State const &)const \" (?realizeVelocity@Implementation@Custom@Force@SimTK@@UEBAXAEBVState@4@@Z)\n2>ExampleKneeJoint.obj : error LNK2019: unresolved external symbol \"__declspec(dllimport) const SimTK::Force::Custom::Implementation::`vftable'\" (__imp_??_7Implementation@Custom@Force@SimTK@@6B@) referenced in function \"public: virtual __cdecl MyStop::~MyStop(void)\" (??1MyStop@@UEAA@XZ)\n2>C:\\Users\\chris\\Documents\\simbodyex-build\\RelWithDebInfo\\ExampleKneeJoint.exe : fatal error LNK1120: 27 unresolved externals\n```\n", "reactions": {"url": "https://api.github.com/repos/simbody/simbody/issues/389/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/simbody/simbody/issues/389/timeline", "performed_via_github_app": null}, {"url": "https://api.github.com/repos/simbody/simbody/issues/391", "repository_url": "https://api.github.com/repos/simbody/simbody", "labels_url": "https://api.github.com/repos/simbody/simbody/issues/391/labels{/name}", "comments_url": "https://api.github.com/repos/simbody/simbody/issues/391/comments", "events_url": "https://api.github.com/repos/simbody/simbody/issues/391/events", "html_url": "https://github.com/simbody/simbody/issues/391", "id": 86329825, "node_id": "MDU6SXNzdWU4NjMyOTgyNQ==", "number": 391, "title": "Create DEPRECATED macro as a holdover until we support C++14", "user": {"login": "chrisdembia", "id": 846001, "node_id": "MDQ6VXNlcjg0NjAwMQ==", "avatar_url": "https://avatars.githubusercontent.com/u/846001?v=4", "gravatar_id": "", "url": "https://api.github.com/users/chrisdembia", "html_url": "https://github.com/chrisdembia", "followers_url": "https://api.github.com/users/chrisdembia/followers", "following_url": "https://api.github.com/users/chrisdembia/following{/other_user}", "gists_url": "https://api.github.com/users/chrisdembia/gists{/gist_id}", "starred_url": "https://api.github.com/users/chrisdembia/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/chrisdembia/subscriptions", "organizations_url": "https://api.github.com/users/chrisdembia/orgs", "repos_url": "https://api.github.com/users/chrisdembia/repos", "events_url": "https://api.github.com/users/chrisdembia/events{/privacy}", "received_events_url": "https://api.github.com/users/chrisdembia/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2015-06-08T21:01:39Z", "updated_at": "2015-07-01T21:43:12Z", "closed_at": "2015-07-01T21:43:12Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "For compilers that support this C++14 feature, we can use `[[deprecated]]` directly. For those that don't, we can use `#warning` maybe.\n", "reactions": {"url": "https://api.github.com/repos/simbody/simbody/issues/391/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/simbody/simbody/issues/391/timeline", "performed_via_github_app": null}, {"url": "https://api.github.com/repos/simbody/simbody/issues/400", "repository_url": "https://api.github.com/repos/simbody/simbody", "labels_url": "https://api.github.com/repos/simbody/simbody/issues/400/labels{/name}", "comments_url": "https://api.github.com/repos/simbody/simbody/issues/400/comments", "events_url": "https://api.github.com/repos/simbody/simbody/issues/400/events", "html_url": "https://github.com/simbody/simbody/issues/400", "id": 88400455, "node_id": "MDU6SXNzdWU4ODQwMDQ1NQ==", "number": 400, "title": "Building version 3.3.1 from source on Ubuntu 14.04 causing single test failure", "user": {"login": "neildhir", "id": 5817673, "node_id": "MDQ6VXNlcjU4MTc2NzM=", "avatar_url": "https://avatars.githubusercontent.com/u/5817673?v=4", "gravatar_id": "", "url": "https://api.github.com/users/neildhir", "html_url": "https://github.com/neildhir", "followers_url": "https://api.github.com/users/neildhir/followers", "following_url": "https://api.github.com/users/neildhir/following{/other_user}", "gists_url": "https://api.github.com/users/neildhir/gists{/gist_id}", "starred_url": "https://api.github.com/users/neildhir/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/neildhir/subscriptions", "organizations_url": "https://api.github.com/users/neildhir/orgs", "repos_url": "https://api.github.com/users/neildhir/repos", "events_url": "https://api.github.com/users/neildhir/events{/privacy}", "received_events_url": "https://api.github.com/users/neildhir/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 7, "created_at": "2015-06-15T11:46:57Z", "updated_at": "2016-07-25T14:32:39Z", "closed_at": null, "author_association": "NONE", "active_lock_reason": null, "body": "When building simbody 3.3.1 from source (as required by OpenSim 3.2) one of the tests fails. \n\nFollowing these instructions https://github.com/simbody/simbody, and when it comes to running the tests via `ctest` (item three under the Linux **Build and Install** section) in the build directory, the following error message is given:\n\n```\n99% tests passed, 1 tests failed out of 97\n\nTotal Test time (real) =  17.55 sec\n\nThe following tests FAILED:\n     85 - TestCustomConstraints (Failed)\nErrors while running CTest\n```\n\nThe install directory is the default recommended `/usr/local/`.\n", "reactions": {"url": "https://api.github.com/repos/simbody/simbody/issues/400/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/simbody/simbody/issues/400/timeline", "performed_via_github_app": null}, {"url": "https://api.github.com/repos/simbody/simbody/issues/401", "repository_url": "https://api.github.com/repos/simbody/simbody", "labels_url": "https://api.github.com/repos/simbody/simbody/issues/401/labels{/name}", "comments_url": "https://api.github.com/repos/simbody/simbody/issues/401/comments", "events_url": "https://api.github.com/repos/simbody/simbody/issues/401/events", "html_url": "https://github.com/simbody/simbody/issues/401", "id": 89189915, "node_id": "MDU6SXNzdWU4OTE4OTkxNQ==", "number": 401, "title": "Matrix resizeKeep() should be smarter about space allocation", "user": {"login": "sherm1", "id": 4088016, "node_id": "MDQ6VXNlcjQwODgwMTY=", "avatar_url": "https://avatars.githubusercontent.com/u/4088016?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sherm1", "html_url": "https://github.com/sherm1", "followers_url": "https://api.github.com/users/sherm1/followers", "following_url": "https://api.github.com/users/sherm1/following{/other_user}", "gists_url": "https://api.github.com/users/sherm1/gists{/gist_id}", "starred_url": "https://api.github.com/users/sherm1/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sherm1/subscriptions", "organizations_url": "https://api.github.com/users/sherm1/orgs", "repos_url": "https://api.github.com/users/sherm1/repos", "events_url": "https://api.github.com/users/sherm1/events{/privacy}", "received_events_url": "https://api.github.com/users/sherm1/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 52267853, "node_id": "MDU6TGFiZWw1MjI2Nzg1Mw==", "url": "https://api.github.com/repos/simbody/simbody/labels/enhancement", "name": "enhancement", "color": "84b6eb", "default": true, "description": null}, {"id": 108217628, "node_id": "MDU6TGFiZWwxMDgyMTc2Mjg=", "url": "https://api.github.com/repos/simbody/simbody/labels/help%20wanted", "name": "help wanted", "color": "009800", "default": true, "description": null}, {"id": 110136914, "node_id": "MDU6TGFiZWwxMTAxMzY5MTQ=", "url": "https://api.github.com/repos/simbody/simbody/labels/speed", "name": "speed", "color": "f7c6c7", "default": false, "description": null}, {"id": 121484439, "node_id": "MDU6TGFiZWwxMjE0ODQ0Mzk=", "url": "https://api.github.com/repos/simbody/simbody/labels/OpenSim", "name": "OpenSim", "color": "006b75", "default": false, "description": null}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": {"url": "https://api.github.com/repos/simbody/simbody/milestones/1", "html_url": "https://github.com/simbody/simbody/milestone/1", "labels_url": "https://api.github.com/repos/simbody/simbody/milestones/1/labels", "id": 910475, "node_id": "MDk6TWlsZXN0b25lOTEwNDc1", "number": 1, "title": "Simbody 4.0", "description": "This milestone collects Issues and Pull Requests that must be dealt with before Simbody 4.0 can be released. This is a prerequisite for OpenSim 4.0.", "creator": {"login": "sherm1", "id": 4088016, "node_id": "MDQ6VXNlcjQwODgwMTY=", "avatar_url": "https://avatars.githubusercontent.com/u/4088016?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sherm1", "html_url": "https://github.com/sherm1", "followers_url": "https://api.github.com/users/sherm1/followers", "following_url": "https://api.github.com/users/sherm1/following{/other_user}", "gists_url": "https://api.github.com/users/sherm1/gists{/gist_id}", "starred_url": "https://api.github.com/users/sherm1/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sherm1/subscriptions", "organizations_url": "https://api.github.com/users/sherm1/orgs", "repos_url": "https://api.github.com/users/sherm1/repos", "events_url": "https://api.github.com/users/sherm1/events{/privacy}", "received_events_url": "https://api.github.com/users/sherm1/received_events", "type": "User", "site_admin": false}, "open_issues": 12, "closed_issues": 13, "state": "open", "created_at": "2014-12-19T18:48:14Z", "updated_at": "2015-12-23T21:15:41Z", "due_on": "2015-06-01T07:00:00Z", "closed_at": null}, "comments": 5, "created_at": "2015-06-18T03:46:24Z", "updated_at": "2018-01-18T04:46:27Z", "closed_at": null, "author_association": "MEMBER", "active_lock_reason": null, "body": "This gets used sometimes to build up a Matrix row by row or column by column. In that case it should act like std::vector and preallocate extra space when it runs out. Currently it just allocates what is asked for then copies the old data so naive use has O(n^2) complexity for adding n rows or columns.\n\n@klshrinidhi ran into this for the DataTable implementation in OpenSim.\n", "reactions": {"url": "https://api.github.com/repos/simbody/simbody/issues/401/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/simbody/simbody/issues/401/timeline", "performed_via_github_app": null}, {"url": "https://api.github.com/repos/simbody/simbody/issues/406", "repository_url": "https://api.github.com/repos/simbody/simbody", "labels_url": "https://api.github.com/repos/simbody/simbody/issues/406/labels{/name}", "comments_url": "https://api.github.com/repos/simbody/simbody/issues/406/comments", "events_url": "https://api.github.com/repos/simbody/simbody/issues/406/events", "html_url": "https://github.com/simbody/simbody/issues/406", "id": 92111853, "node_id": "MDU6SXNzdWU5MjExMTg1Mw==", "number": 406, "title": "Constructing a slider constraint, which enforces -a < body.x() < a", "user": {"login": "neildhir", "id": 5817673, "node_id": "MDQ6VXNlcjU4MTc2NzM=", "avatar_url": "https://avatars.githubusercontent.com/u/5817673?v=4", "gravatar_id": "", "url": "https://api.github.com/users/neildhir", "html_url": "https://github.com/neildhir", "followers_url": "https://api.github.com/users/neildhir/followers", "following_url": "https://api.github.com/users/neildhir/following{/other_user}", "gists_url": "https://api.github.com/users/neildhir/gists{/gist_id}", "starred_url": "https://api.github.com/users/neildhir/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/neildhir/subscriptions", "organizations_url": "https://api.github.com/users/neildhir/orgs", "repos_url": "https://api.github.com/users/neildhir/repos", "events_url": "https://api.github.com/users/neildhir/events{/privacy}", "received_events_url": "https://api.github.com/users/neildhir/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2015-06-30T14:38:27Z", "updated_at": "2015-06-30T16:25:20Z", "closed_at": "2015-06-30T16:22:59Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hello!\n\nI am trying to simulate the [inverted pendulum example](https://en.wikipedia.org/wiki/Inverted_pendulum), using a slider constraint. But I cannot seem to be able to figure out (I know very embarrassing) how to constrain the cart such that it is only allowed to move between say +/-1m from the origin `Vec3(0)` in the x-direction (as prescribed by the slider joint).\n\nI.e. I want to constrain this construction:\n\n``` c++\n    Body::Rigid cartInfo(MassProperties(1.0, Vec3(0), UnitInertia(1)));\n    cartInfo.addDecoration(\n        Transform(),\n        DecorativeBrick(Vec3(0.2,0.1,0.1)).setColor(Red));\n\n    // Create the linear slider object\n    MobilizedBody::Slider cart(\n        matter.Ground(), \n        Transform(Vec3(0)),\n        cartInfo,\n        Transform(Vec3(0.0,0.0,0.0)));\n```\n\nwhich has an inverted pendulum attached. \n\nWhy do we want to do this? The real experimental cart does unfortunately not have an infinite slider.\n\nThanks\n", "reactions": {"url": "https://api.github.com/repos/simbody/simbody/issues/406/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/simbody/simbody/issues/406/timeline", "performed_via_github_app": null}, {"url": "https://api.github.com/repos/simbody/simbody/issues/409", "repository_url": "https://api.github.com/repos/simbody/simbody", "labels_url": "https://api.github.com/repos/simbody/simbody/issues/409/labels{/name}", "comments_url": "https://api.github.com/repos/simbody/simbody/issues/409/comments", "events_url": "https://api.github.com/repos/simbody/simbody/issues/409/events", "html_url": "https://github.com/simbody/simbody/issues/409", "id": 93296469, "node_id": "MDU6SXNzdWU5MzI5NjQ2OQ==", "number": 409, "title": "Support for Continuous Collision Detection (CCD)?", "user": {"login": "Skylion007", "id": 2053727, "node_id": "MDQ6VXNlcjIwNTM3Mjc=", "avatar_url": "https://avatars.githubusercontent.com/u/2053727?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Skylion007", "html_url": "https://github.com/Skylion007", "followers_url": "https://api.github.com/users/Skylion007/followers", "following_url": "https://api.github.com/users/Skylion007/following{/other_user}", "gists_url": "https://api.github.com/users/Skylion007/gists{/gist_id}", "starred_url": "https://api.github.com/users/Skylion007/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Skylion007/subscriptions", "organizations_url": "https://api.github.com/users/Skylion007/orgs", "repos_url": "https://api.github.com/users/Skylion007/repos", "events_url": "https://api.github.com/users/Skylion007/events{/privacy}", "received_events_url": "https://api.github.com/users/Skylion007/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 52267853, "node_id": "MDU6TGFiZWw1MjI2Nzg1Mw==", "url": "https://api.github.com/repos/simbody/simbody/labels/enhancement", "name": "enhancement", "color": "84b6eb", "default": true, "description": null}, {"id": 62665552, "node_id": "MDU6TGFiZWw2MjY2NTU1Mg==", "url": "https://api.github.com/repos/simbody/simbody/labels/contact", "name": "contact", "color": "eb6420", "default": false, "description": null}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 13, "created_at": "2015-07-06T14:45:33Z", "updated_at": "2015-08-19T17:44:50Z", "closed_at": null, "author_association": "NONE", "active_lock_reason": null, "body": "So I am attempting to use simulate laminated robots in the robot simulation software Gazebo. So far, two engines DART and Simbody have produced the most accurate results for my simulation. Unfortunately, both physics engines fail on one key issue, they lack support (default) support for continuous collision detection. I was wondering if this physics currently has support for or plans on adding support for this feature within the next few weeks.\n\nI have [linked](https://github.com/dartsim/dart/issues/426) the previous discussion on how this issue relates to DART to further illustrate the issues I am having with collision detection. If you have any ideas for potential workarounds, any help would be appreciated.\n", "reactions": {"url": "https://api.github.com/repos/simbody/simbody/issues/409/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/simbody/simbody/issues/409/timeline", "performed_via_github_app": null}, {"url": "https://api.github.com/repos/simbody/simbody/issues/415", "repository_url": "https://api.github.com/repos/simbody/simbody", "labels_url": "https://api.github.com/repos/simbody/simbody/issues/415/labels{/name}", "comments_url": "https://api.github.com/repos/simbody/simbody/issues/415/comments", "events_url": "https://api.github.com/repos/simbody/simbody/issues/415/events", "html_url": "https://github.com/simbody/simbody/issues/415", "id": 97092470, "node_id": "MDU6SXNzdWU5NzA5MjQ3MA==", "number": 415, "title": "Add mesh collision support for Gazebo", "user": {"login": "Skylion007", "id": 2053727, "node_id": "MDQ6VXNlcjIwNTM3Mjc=", "avatar_url": "https://avatars.githubusercontent.com/u/2053727?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Skylion007", "html_url": "https://github.com/Skylion007", "followers_url": "https://api.github.com/users/Skylion007/followers", "following_url": "https://api.github.com/users/Skylion007/following{/other_user}", "gists_url": "https://api.github.com/users/Skylion007/gists{/gist_id}", "starred_url": "https://api.github.com/users/Skylion007/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Skylion007/subscriptions", "organizations_url": "https://api.github.com/users/Skylion007/orgs", "repos_url": "https://api.github.com/users/Skylion007/repos", "events_url": "https://api.github.com/users/Skylion007/events{/privacy}", "received_events_url": "https://api.github.com/users/Skylion007/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2015-07-24T16:59:49Z", "updated_at": "2016-03-31T22:01:18Z", "closed_at": null, "author_association": "NONE", "active_lock_reason": null, "body": "I am curious if you have an plans to add mesh support using Gazebo's API? I am in desperate need of a engine that supports closed loops as well as Simbody, but also support mesh collisions. Are there any plans to implement this any time soon? I noticed you added an STL reader last year, but I have not seen any activity on this front since.\n", "reactions": {"url": "https://api.github.com/repos/simbody/simbody/issues/415/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/simbody/simbody/issues/415/timeline", "performed_via_github_app": null}, {"url": "https://api.github.com/repos/simbody/simbody/issues/418", "repository_url": "https://api.github.com/repos/simbody/simbody", "labels_url": "https://api.github.com/repos/simbody/simbody/issues/418/labels{/name}", "comments_url": "https://api.github.com/repos/simbody/simbody/issues/418/comments", "events_url": "https://api.github.com/repos/simbody/simbody/issues/418/events", "html_url": "https://github.com/simbody/simbody/issues/418", "id": 97761922, "node_id": "MDU6SXNzdWU5Nzc2MTkyMg==", "number": 418, "title": "Replace NOEXCEPT_11 with noexcept when switching to VS2015.", "user": {"login": "chrisdembia", "id": 846001, "node_id": "MDQ6VXNlcjg0NjAwMQ==", "avatar_url": "https://avatars.githubusercontent.com/u/846001?v=4", "gravatar_id": "", "url": "https://api.github.com/users/chrisdembia", "html_url": "https://github.com/chrisdembia", "followers_url": "https://api.github.com/users/chrisdembia/followers", "following_url": "https://api.github.com/users/chrisdembia/following{/other_user}", "gists_url": "https://api.github.com/users/chrisdembia/gists{/gist_id}", "starred_url": "https://api.github.com/users/chrisdembia/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/chrisdembia/subscriptions", "organizations_url": "https://api.github.com/users/chrisdembia/orgs", "repos_url": "https://api.github.com/users/chrisdembia/repos", "events_url": "https://api.github.com/users/chrisdembia/events{/privacy}", "received_events_url": "https://api.github.com/users/chrisdembia/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2015-07-28T17:48:09Z", "updated_at": "2015-07-28T20:32:12Z", "closed_at": null, "author_association": "MEMBER", "active_lock_reason": null, "body": "Related: #410.\n", "reactions": {"url": "https://api.github.com/repos/simbody/simbody/issues/418/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/simbody/simbody/issues/418/timeline", "performed_via_github_app": null}, {"url": "https://api.github.com/repos/simbody/simbody/issues/420", "repository_url": "https://api.github.com/repos/simbody/simbody", "labels_url": "https://api.github.com/repos/simbody/simbody/issues/420/labels{/name}", "comments_url": "https://api.github.com/repos/simbody/simbody/issues/420/comments", "events_url": "https://api.github.com/repos/simbody/simbody/issues/420/events", "html_url": "https://github.com/simbody/simbody/issues/420", "id": 98224076, "node_id": "MDU6SXNzdWU5ODIyNDA3Ng==", "number": 420, "title": "Simbody has stability issues in Gazebo", "user": {"login": "Skylion007", "id": 2053727, "node_id": "MDQ6VXNlcjIwNTM3Mjc=", "avatar_url": "https://avatars.githubusercontent.com/u/2053727?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Skylion007", "html_url": "https://github.com/Skylion007", "followers_url": "https://api.github.com/users/Skylion007/followers", "following_url": "https://api.github.com/users/Skylion007/following{/other_user}", "gists_url": "https://api.github.com/users/Skylion007/gists{/gist_id}", "starred_url": "https://api.github.com/users/Skylion007/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Skylion007/subscriptions", "organizations_url": "https://api.github.com/users/Skylion007/orgs", "repos_url": "https://api.github.com/users/Skylion007/repos", "events_url": "https://api.github.com/users/Skylion007/events{/privacy}", "received_events_url": "https://api.github.com/users/Skylion007/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2015-07-30T17:43:27Z", "updated_at": "2015-07-30T20:36:15Z", "closed_at": null, "author_association": "NONE", "active_lock_reason": null, "body": "So I am having an issue where Simbody is crashing on a specific model in Gazebo. I have attached the world file and meshes on [bitbucket](https://bitbucket.org/osrf/gazebo/issues/1689/simbody-crashes-when-attempting-to-use-pid). I am not sure whether the error is part of Gazebo or part of Simbody so I decided to reference the issue in both places.\n", "reactions": {"url": "https://api.github.com/repos/simbody/simbody/issues/420/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/simbody/simbody/issues/420/timeline", "performed_via_github_app": null}, {"url": "https://api.github.com/repos/simbody/simbody/issues/422", "repository_url": "https://api.github.com/repos/simbody/simbody", "labels_url": "https://api.github.com/repos/simbody/simbody/issues/422/labels{/name}", "comments_url": "https://api.github.com/repos/simbody/simbody/issues/422/comments", "events_url": "https://api.github.com/repos/simbody/simbody/issues/422/events", "html_url": "https://github.com/simbody/simbody/issues/422", "id": 98845549, "node_id": "MDU6SXNzdWU5ODg0NTU0OQ==", "number": 422, "title": "SimTK::ThreadLocal crashes on thread-destruction cleanup", "user": {"login": "sherm1", "id": 4088016, "node_id": "MDQ6VXNlcjQwODgwMTY=", "avatar_url": "https://avatars.githubusercontent.com/u/4088016?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sherm1", "html_url": "https://github.com/sherm1", "followers_url": "https://api.github.com/users/sherm1/followers", "following_url": "https://api.github.com/users/sherm1/following{/other_user}", "gists_url": "https://api.github.com/users/sherm1/gists{/gist_id}", "starred_url": "https://api.github.com/users/sherm1/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sherm1/subscriptions", "organizations_url": "https://api.github.com/users/sherm1/orgs", "repos_url": "https://api.github.com/users/sherm1/repos", "events_url": "https://api.github.com/users/sherm1/events{/privacy}", "received_events_url": "https://api.github.com/users/sherm1/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 52267851, "node_id": "MDU6TGFiZWw1MjI2Nzg1MQ==", "url": "https://api.github.com/repos/simbody/simbody/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 9, "created_at": "2015-08-03T21:51:46Z", "updated_at": "2015-08-05T17:49:40Z", "closed_at": "2015-08-05T17:49:40Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "The `ThreadLocal<T>` class tries to maintain several file-scope static variables [here](https://github.com/simbody/simbody/blob/master/SimTKcommon/include/SimTKcommon/internal/ThreadLocal.h#L34), and also registers a destructor with pthreads via `pthread_key_create()`. That destructor ([cleanUpThreadLocalStorage()](https://github.com/simbody/simbody/blob/master/SimTKcommon/include/SimTKcommon/internal/ThreadLocal.h#L38)) references those file-scope statics. However, since that destructor doesn't get invoked until pthread end-of-program cleanup, the file-scope statics can get destructed first, causing `cleanUpThreadLocalStorage()` to throw an exception. This was observed in PR #414 when running on Windows (see discussion there).\n\n/cc @thomasklau, @chrisdembia \n", "reactions": {"url": "https://api.github.com/repos/simbody/simbody/issues/422/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/simbody/simbody/issues/422/timeline", "performed_via_github_app": null}, {"url": "https://api.github.com/repos/simbody/simbody/issues/424", "repository_url": "https://api.github.com/repos/simbody/simbody", "labels_url": "https://api.github.com/repos/simbody/simbody/issues/424/labels{/name}", "comments_url": "https://api.github.com/repos/simbody/simbody/issues/424/comments", "events_url": "https://api.github.com/repos/simbody/simbody/issues/424/events", "html_url": "https://github.com/simbody/simbody/issues/424", "id": 100182690, "node_id": "MDU6SXNzdWUxMDAxODI2OTA=", "number": 424, "title": "Trouble building with cmake (native and via IDE) in OS X Yosemite (10.10.4)", "user": {"login": "neildhir", "id": 5817673, "node_id": "MDQ6VXNlcjU4MTc2NzM=", "avatar_url": "https://avatars.githubusercontent.com/u/5817673?v=4", "gravatar_id": "", "url": "https://api.github.com/users/neildhir", "html_url": "https://github.com/neildhir", "followers_url": "https://api.github.com/users/neildhir/followers", "following_url": "https://api.github.com/users/neildhir/following{/other_user}", "gists_url": "https://api.github.com/users/neildhir/gists{/gist_id}", "starred_url": "https://api.github.com/users/neildhir/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/neildhir/subscriptions", "organizations_url": "https://api.github.com/users/neildhir/orgs", "repos_url": "https://api.github.com/users/neildhir/repos", "events_url": "https://api.github.com/users/neildhir/events{/privacy}", "received_events_url": "https://api.github.com/users/neildhir/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 17, "created_at": "2015-08-10T22:26:40Z", "updated_at": "2015-08-12T19:21:54Z", "closed_at": "2015-08-12T18:58:31Z", "author_association": "NONE", "active_lock_reason": null, "body": "Greetings, \n\nI've been experimenting a bit with the install options now available with simbody. I ended up trying with the install version via `brew install simbody`. Running that alone should, if my understanding is correct, take care of the full installation process.\n\nI tried running the basic pendulum example \n\n``` cpp\n// Simulate and visualise a 2-link chain:\n#include \"Simbody.h\"\n\nusing namespace SimTK;\nusing std::cout; using std::endl;\n\nclass PositionReporter : public PeriodicEventReporter {\npublic:\n    PositionReporter(const MultibodySystem& system, const MobilizedBody& body, Real interval) :\n        PeriodicEventReporter(interval), system(system), body(body) {\n    }\n\n    // Show x-y position of the pendulum weight as a function of time.\n    void handleEvent(const State& state) const {\n        system.realize(state, Stage::Position);\n        Vec3 pos = body.getBodyOriginLocation(state);\n        std::cout<<state.getTime()<<\"\\t\"<<pos[0]<<\"\\t\"<<pos[1]<<std::endl;\n    }\nprivate:\n    const MultibodySystem& system;\n    const MobilizedBody& body;\n};\n\nint main() {\ntry{// If anything goes wrong, an exception will be thrown.\n\n    // Define the system.\n    MultibodySystem system;\n    SimbodyMatterSubsystem matter(system);\n    GeneralForceSubsystem forces(system);\n    Force::Gravity gravity(forces, matter, -YAxis, 9.8);\n\n    // Describe mass and visualization properties for a generic body.\n    Body::Rigid bodyInfo(MassProperties(1.0, Vec3(0), UnitInertia(1)));\n    bodyInfo.addDecoration(Transform(), DecorativeSphere(0.1));\n\n    // Create the moving (mobilized) bodies of the pendulum.\n    MobilizedBody::Pin pendulum1(\n        matter.Ground(), \n        Transform(Vec3(0)),\n        bodyInfo,\n        Transform(Vec3(0, 1.0, 0)));\n\n    // MobilizedBody::Pin pendulum2(\n    //     pendulum1, \n    //     Transform(Vec3(0)),\n    //     bodyInfo, \n    //     Transform(Vec3(0, 0.5, 0)));\n\n    // Set up visualization.\n    Visualizer viz(system);\n    system.addEventReporter(new Visualizer::Reporter(viz, 0.01));\n\n    // Add event reporter\n    system.addEventReporter(new PositionReporter(system, pendulum1, 0.5));\n\n    // Initialize the system and state.\n    State state = system.realizeTopology();\n    pendulum1.setRate(state, 1.5); // The initial angular velocity of pendulum: ms^-1\n\n    // Simulate for n seconds.\n    RungeKuttaMersonIntegrator integ(system);\n    TimeStepper ts(system, integ);\n    ts.initialize(state);\n    ts.stepTo(50.0);\n} \ncatch (const std::exception& e) {\n    std::cout << \"ERROR: \" << e.what() << std::endl;\n    return 1;\n} \ncatch (...) {\n    std::cout << \"UNKNOWN EXCEPTION\\n\";\n    return 1;\n}\n    return 0;\n}\n```\n\nusing both CLion and stand-alone CMake 3.3.0 with simbody 3.5.3. I am consistently running into troubles with, what I believe, is the `SimbodyConfig.cmake` file.\n\nCLion returns as such:\n\n```\nError:The following variables are used in this project, but they are set to NOTFOUND.\nPlease set them or make sure they are set and tested correctly in the CMake files:\nSimbody_INCLUDE_DIR\n   used as include directory in directory /Users/path/to/project/files/Pendulum\n```\n\nSimiliarly the cmake-gui comes up with something similar:\n\n```\nThe C compiler identification is AppleClang 6.1.0.6020053\nThe CXX compiler identification is AppleClang 6.1.0.6020053\nCheck for working C compiler using: Xcode\nCheck for working C compiler using: Xcode -- works\nDetecting C compiler ABI info\nDetecting C compiler ABI info - done\nDetecting C compile features\nDetecting C compile features - done\nCheck for working CXX compiler using: Xcode\nCheck for working CXX compiler using: Xcode -- works\nDetecting CXX compiler ABI info\nDetecting CXX compiler ABI info - done\nDetecting CXX compile features\nDetecting CXX compile features - done\n/usr/local;/Developer\nCMake Error at /Applications/CMake.app/Contents/share/cmake-3.3/Modules/FindPackageHandleStandardArgs.cmake:148 (message):\n  Could NOT find Simbody (missing: Simbody_INCLUDE_DIR)\nCall Stack (most recent call first):\n  /Applications/CMake.app/Contents/share/cmake-3.3/Modules/FindPackageHandleStandardArgs.cmake:388 (_FPHSA_FAILURE_MESSAGE)\n  cmake/FindSimbody.cmake:271 (find_package_handle_standard_args)\n  CMakeLists.txt:18 (find_package)\n\n\nConfiguring incomplete, errors occurred!\nSee also \"/Users/path/to/project/files/Pendulum/build/CMakeFiles/CMakeOutput.log\".\n```\n\nMy `CMakeLists.txt` looks as such:\n\n```\n# CMakeLists.txt for making a Simbody-using executable.\n# This shows how to use the provided SimbodyConfig.cmake to locate a Simbody\n# installation on your machine so you can use it from your own code.\n\ncmake_minimum_required(VERSION 2.8)\nproject(Pendulum)\n\n# Main source (and) header files\nset(my_source_files Pendulum.cpp)\n#set(my_header_files myexe.h)\n\n# This depends on SimbodyConfig.cmake being located somewhere predictable\n# on your machine. If you have installed it somewhere that CMake won't be\n# able to guess, you'll need to tell find_package where to look.\nlist(APPEND CMAKE_MODULE_PATH \"${CMAKE_SOURCE_DIR}/cmake\")\nfind_package(Simbody REQUIRED)\n\ninclude_directories(${Simbody_INCLUDE_DIR})\nlink_directories(${Simbody_LIB_DIR})\n\nadd_executable(Pendulum ${my_source_files})\ntarget_link_libraries(Pendulum ${Simbody_LIBRARIES})\n```\n", "reactions": {"url": "https://api.github.com/repos/simbody/simbody/issues/424/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/simbody/simbody/issues/424/timeline", "performed_via_github_app": null}, {"url": "https://api.github.com/repos/simbody/simbody/issues/436", "repository_url": "https://api.github.com/repos/simbody/simbody", "labels_url": "https://api.github.com/repos/simbody/simbody/issues/436/labels{/name}", "comments_url": "https://api.github.com/repos/simbody/simbody/issues/436/comments", "events_url": "https://api.github.com/repos/simbody/simbody/issues/436/events", "html_url": "https://github.com/simbody/simbody/issues/436", "id": 105654996, "node_id": "MDU6SXNzdWUxMDU2NTQ5OTY=", "number": 436, "title": "Prescribed accelerations should be known by Velocity stage", "user": {"login": "sherm1", "id": 4088016, "node_id": "MDQ6VXNlcjQwODgwMTY=", "avatar_url": "https://avatars.githubusercontent.com/u/4088016?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sherm1", "html_url": "https://github.com/sherm1", "followers_url": "https://api.github.com/users/sherm1/followers", "following_url": "https://api.github.com/users/sherm1/following{/other_user}", "gists_url": "https://api.github.com/users/sherm1/gists{/gist_id}", "starred_url": "https://api.github.com/users/sherm1/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sherm1/subscriptions", "organizations_url": "https://api.github.com/users/sherm1/orgs", "repos_url": "https://api.github.com/users/sherm1/repos", "events_url": "https://api.github.com/users/sherm1/events{/privacy}", "received_events_url": "https://api.github.com/users/sherm1/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 52267853, "node_id": "MDU6TGFiZWw1MjI2Nzg1Mw==", "url": "https://api.github.com/repos/simbody/simbody/labels/enhancement", "name": "enhancement", "color": "84b6eb", "default": true, "description": null}, {"id": 57297924, "node_id": "MDU6TGFiZWw1NzI5NzkyNA==", "url": "https://api.github.com/repos/simbody/simbody/labels/state", "name": "state", "color": "fbca04", "default": false, "description": null}], "state": "open", "locked": false, "assignee": {"login": "sherm1", "id": 4088016, "node_id": "MDQ6VXNlcjQwODgwMTY=", "avatar_url": "https://avatars.githubusercontent.com/u/4088016?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sherm1", "html_url": "https://github.com/sherm1", "followers_url": "https://api.github.com/users/sherm1/followers", "following_url": "https://api.github.com/users/sherm1/following{/other_user}", "gists_url": "https://api.github.com/users/sherm1/gists{/gist_id}", "starred_url": "https://api.github.com/users/sherm1/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sherm1/subscriptions", "organizations_url": "https://api.github.com/users/sherm1/orgs", "repos_url": "https://api.github.com/users/sherm1/repos", "events_url": "https://api.github.com/users/sherm1/events{/privacy}", "received_events_url": "https://api.github.com/users/sherm1/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "sherm1", "id": 4088016, "node_id": "MDQ6VXNlcjQwODgwMTY=", "avatar_url": "https://avatars.githubusercontent.com/u/4088016?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sherm1", "html_url": "https://github.com/sherm1", "followers_url": "https://api.github.com/users/sherm1/followers", "following_url": "https://api.github.com/users/sherm1/following{/other_user}", "gists_url": "https://api.github.com/users/sherm1/gists{/gist_id}", "starred_url": "https://api.github.com/users/sherm1/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sherm1/subscriptions", "organizations_url": "https://api.github.com/users/sherm1/orgs", "repos_url": "https://api.github.com/users/sherm1/repos", "events_url": "https://api.github.com/users/sherm1/events{/privacy}", "received_events_url": "https://api.github.com/users/sherm1/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 0, "created_at": "2015-09-09T18:24:48Z", "updated_at": "2015-09-09T18:24:48Z", "closed_at": null, "author_association": "MEMBER", "active_lock_reason": null, "body": "Currently they are deferred until Dynamics stage since they are not needed until calculating accelerations. However, some (not-commonly-used) operators allow to compute accelerations from forces given as arguments. Those operators currently require realization through `Stage::Dynamics` meaning that built-in force elements get evaluated even if they aren't going to be used.\n\nIt would be better just to calculate prescribed accelerations in the Velocity constraint cache; they aren't usually expensive.\n", "reactions": {"url": "https://api.github.com/repos/simbody/simbody/issues/436/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/simbody/simbody/issues/436/timeline", "performed_via_github_app": null}, {"url": "https://api.github.com/repos/simbody/simbody/issues/439", "repository_url": "https://api.github.com/repos/simbody/simbody", "labels_url": "https://api.github.com/repos/simbody/simbody/issues/439/labels{/name}", "comments_url": "https://api.github.com/repos/simbody/simbody/issues/439/comments", "events_url": "https://api.github.com/repos/simbody/simbody/issues/439/events", "html_url": "https://github.com/simbody/simbody/issues/439", "id": 107758661, "node_id": "MDU6SXNzdWUxMDc3NTg2NjE=", "number": 439, "title": "Simbody and CMake changes needed to build using MinGW on Windows", "user": {"login": "sherm1", "id": 4088016, "node_id": "MDQ6VXNlcjQwODgwMTY=", "avatar_url": "https://avatars.githubusercontent.com/u/4088016?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sherm1", "html_url": "https://github.com/sherm1", "followers_url": "https://api.github.com/users/sherm1/followers", "following_url": "https://api.github.com/users/sherm1/following{/other_user}", "gists_url": "https://api.github.com/users/sherm1/gists{/gist_id}", "starred_url": "https://api.github.com/users/sherm1/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sherm1/subscriptions", "organizations_url": "https://api.github.com/users/sherm1/orgs", "repos_url": "https://api.github.com/users/sherm1/repos", "events_url": "https://api.github.com/users/sherm1/events{/privacy}", "received_events_url": "https://api.github.com/users/sherm1/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 52267853, "node_id": "MDU6TGFiZWw1MjI2Nzg1Mw==", "url": "https://api.github.com/repos/simbody/simbody/labels/enhancement", "name": "enhancement", "color": "84b6eb", "default": true, "description": null}, {"id": 54361018, "node_id": "MDU6TGFiZWw1NDM2MTAxOA==", "url": "https://api.github.com/repos/simbody/simbody/labels/build", "name": "build", "color": "bfe5bf", "default": false, "description": null}, {"id": 108217628, "node_id": "MDU6TGFiZWwxMDgyMTc2Mjg=", "url": "https://api.github.com/repos/simbody/simbody/labels/help%20wanted", "name": "help wanted", "color": "009800", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 22, "created_at": "2015-09-22T17:10:21Z", "updated_at": "2016-05-07T19:15:25Z", "closed_at": "2016-05-07T19:15:25Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "@gjacquenot reported success in building Simbody with MinGW and sent an email summarizing his changes; see comment below.\n\nIt would be great to get a pull request for the necessary changes. \n", "reactions": {"url": "https://api.github.com/repos/simbody/simbody/issues/439/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/simbody/simbody/issues/439/timeline", "performed_via_github_app": null}, {"url": "https://api.github.com/repos/simbody/simbody/issues/443", "repository_url": "https://api.github.com/repos/simbody/simbody", "labels_url": "https://api.github.com/repos/simbody/simbody/issues/443/labels{/name}", "comments_url": "https://api.github.com/repos/simbody/simbody/issues/443/comments", "events_url": "https://api.github.com/repos/simbody/simbody/issues/443/events", "html_url": "https://github.com/simbody/simbody/issues/443", "id": 111734908, "node_id": "MDU6SXNzdWUxMTE3MzQ5MDg=", "number": 443, "title": "SimTK Exception utilities should be usable in OpenSim too", "user": {"login": "sherm1", "id": 4088016, "node_id": "MDQ6VXNlcjQwODgwMTY=", "avatar_url": "https://avatars.githubusercontent.com/u/4088016?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sherm1", "html_url": "https://github.com/sherm1", "followers_url": "https://api.github.com/users/sherm1/followers", "following_url": "https://api.github.com/users/sherm1/following{/other_user}", "gists_url": "https://api.github.com/users/sherm1/gists{/gist_id}", "starred_url": "https://api.github.com/users/sherm1/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sherm1/subscriptions", "organizations_url": "https://api.github.com/users/sherm1/orgs", "repos_url": "https://api.github.com/users/sherm1/repos", "events_url": "https://api.github.com/users/sherm1/events{/privacy}", "received_events_url": "https://api.github.com/users/sherm1/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 52267853, "node_id": "MDU6TGFiZWw1MjI2Nzg1Mw==", "url": "https://api.github.com/repos/simbody/simbody/labels/enhancement", "name": "enhancement", "color": "84b6eb", "default": true, "description": null}, {"id": 121484439, "node_id": "MDU6TGFiZWwxMjE0ODQ0Mzk=", "url": "https://api.github.com/repos/simbody/simbody/labels/OpenSim", "name": "OpenSim", "color": "006b75", "default": false, "description": null}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": {"url": "https://api.github.com/repos/simbody/simbody/milestones/1", "html_url": "https://github.com/simbody/simbody/milestone/1", "labels_url": "https://api.github.com/repos/simbody/simbody/milestones/1/labels", "id": 910475, "node_id": "MDk6TWlsZXN0b25lOTEwNDc1", "number": 1, "title": "Simbody 4.0", "description": "This milestone collects Issues and Pull Requests that must be dealt with before Simbody 4.0 can be released. This is a prerequisite for OpenSim 4.0.", "creator": {"login": "sherm1", "id": 4088016, "node_id": "MDQ6VXNlcjQwODgwMTY=", "avatar_url": "https://avatars.githubusercontent.com/u/4088016?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sherm1", "html_url": "https://github.com/sherm1", "followers_url": "https://api.github.com/users/sherm1/followers", "following_url": "https://api.github.com/users/sherm1/following{/other_user}", "gists_url": "https://api.github.com/users/sherm1/gists{/gist_id}", "starred_url": "https://api.github.com/users/sherm1/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sherm1/subscriptions", "organizations_url": "https://api.github.com/users/sherm1/orgs", "repos_url": "https://api.github.com/users/sherm1/repos", "events_url": "https://api.github.com/users/sherm1/events{/privacy}", "received_events_url": "https://api.github.com/users/sherm1/received_events", "type": "User", "site_admin": false}, "open_issues": 12, "closed_issues": 13, "state": "open", "created_at": "2014-12-19T18:48:14Z", "updated_at": "2015-12-23T21:15:41Z", "due_on": "2015-06-01T07:00:00Z", "closed_at": null}, "comments": 3, "created_at": "2015-10-16T00:34:05Z", "updated_at": "2015-10-16T23:04:01Z", "closed_at": null, "author_association": "MEMBER", "active_lock_reason": null, "body": "The `SimTK::Exception` classes and macros provide good printf-like message formatting with file and line number inserted. Currently the formatting includes Simbody-specific verbiage, preventing its use from higher-level applications like OpenSim. This should be fixed so that the tools are available but the app-specific part of the formatting is adjustable. Would be nice to add in `__func__` too.\n\nSee [Exception.h](https://github.com/simbody/simbody/blob/master/SimTKcommon/include/SimTKcommon/internal/Exception.h) and [ExceptionMacros.h](https://github.com/simbody/simbody/blob/master/SimTKcommon/include/SimTKcommon/internal/ExceptionMacros.h).\n\nOne thought would be to leave only app-agnostic formatting in SimTK::Exception::Base, then derive SimbodyException and OpenSimException from Base to add in the app-specific text, and derive the rest of the exception subclasses from the appropriate one of those. Not sure if that would work.\n\n/cc @klshrinidhi, @aseth1, @chrisdembia, @tkuchida, @msdemers, @jenhicks\n", "reactions": {"url": "https://api.github.com/repos/simbody/simbody/issues/443/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/simbody/simbody/issues/443/timeline", "performed_via_github_app": null}, {"url": "https://api.github.com/repos/simbody/simbody/issues/448", "repository_url": "https://api.github.com/repos/simbody/simbody", "labels_url": "https://api.github.com/repos/simbody/simbody/issues/448/labels{/name}", "comments_url": "https://api.github.com/repos/simbody/simbody/issues/448/comments", "events_url": "https://api.github.com/repos/simbody/simbody/issues/448/events", "html_url": "https://github.com/simbody/simbody/issues/448", "id": 114322758, "node_id": "MDU6SXNzdWUxMTQzMjI3NTg=", "number": 448, "title": "Rotation and Transform initialization issue with empty Vec3", "user": {"login": "Gjacquenot", "id": 6797340, "node_id": "MDQ6VXNlcjY3OTczNDA=", "avatar_url": "https://avatars.githubusercontent.com/u/6797340?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Gjacquenot", "html_url": "https://github.com/Gjacquenot", "followers_url": "https://api.github.com/users/Gjacquenot/followers", "following_url": "https://api.github.com/users/Gjacquenot/following{/other_user}", "gists_url": "https://api.github.com/users/Gjacquenot/gists{/gist_id}", "starred_url": "https://api.github.com/users/Gjacquenot/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Gjacquenot/subscriptions", "organizations_url": "https://api.github.com/users/Gjacquenot/orgs", "repos_url": "https://api.github.com/users/Gjacquenot/repos", "events_url": "https://api.github.com/users/Gjacquenot/events{/privacy}", "received_events_url": "https://api.github.com/users/Gjacquenot/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2015-10-30T17:57:11Z", "updated_at": "2015-10-30T17:57:11Z", "closed_at": null, "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "I have just met a weird behaviour with `Vec3`, `Rotation` and `Transform`. The default constructor does not behave like other mathematical object like `Rotation`: it initializes to NaN. This is weird with the following code.\n\n```\n#include \"SimTKsimbody.h\"\nusing namespace SimTK;\nusing namespace std;\nint main()\n{\n    cout<<Transform()<<endl;\n    cout<<Transform(Rotation(),Vec3())<<endl;\n    cout<<Transform(Rotation(),Vec3(0.0))<<endl;\n    return 0;\n}\n```\n\nwhich gives\n\n```\n[1,0,0,0]\n[0,1,0,0]\n[0,0,1,0]\n[0,0,0,1]\n\n[1,0,0,nan]\n[0,1,0,nan]\n[0,0,1,nan]\n[0,0,0,1]\n\n[1,0,0,0]\n[0,1,0,0]\n[0,0,1,0]\n[0,0,0,1]\n```\n\nI have found this _feature_, while understanding that two colliding objects did not give contact efforts.\nI would have expected that some _function_, _method_ throws an exception to tell me that my transform matrix had _nan_.\n\nI can understand the `Vec3` default constructor, but it would be nice to check transform matrix when using it.\n\n@sherm1 already commented this issue:\n\n_Good catch -- I agree. It should check in Debug builds. The Vec3 default constructor intentionally leaves memory uninitialized (NaN in Debug) because of the memory-touching waste that would occur in large aggregates like Vector_<Vec3> if they were unnecessarily initialized to zero. But a Rotation and Transform are not supposed to be uninitialized._\n", "reactions": {"url": "https://api.github.com/repos/simbody/simbody/issues/448/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/simbody/simbody/issues/448/timeline", "performed_via_github_app": null}, {"url": "https://api.github.com/repos/simbody/simbody/issues/450", "repository_url": "https://api.github.com/repos/simbody/simbody", "labels_url": "https://api.github.com/repos/simbody/simbody/issues/450/labels{/name}", "comments_url": "https://api.github.com/repos/simbody/simbody/issues/450/comments", "events_url": "https://api.github.com/repos/simbody/simbody/issues/450/events", "html_url": "https://github.com/simbody/simbody/issues/450", "id": 114922826, "node_id": "MDU6SXNzdWUxMTQ5MjI4MjY=", "number": 450, "title": "Using static lapack/blas causes \"multiple definition\" errors", "user": {"login": "chrisdembia", "id": 846001, "node_id": "MDQ6VXNlcjg0NjAwMQ==", "avatar_url": "https://avatars.githubusercontent.com/u/846001?v=4", "gravatar_id": "", "url": "https://api.github.com/users/chrisdembia", "html_url": "https://github.com/chrisdembia", "followers_url": "https://api.github.com/users/chrisdembia/followers", "following_url": "https://api.github.com/users/chrisdembia/following{/other_user}", "gists_url": "https://api.github.com/users/chrisdembia/gists{/gist_id}", "starred_url": "https://api.github.com/users/chrisdembia/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/chrisdembia/subscriptions", "organizations_url": "https://api.github.com/users/chrisdembia/orgs", "repos_url": "https://api.github.com/users/chrisdembia/repos", "events_url": "https://api.github.com/users/chrisdembia/events{/privacy}", "received_events_url": "https://api.github.com/users/chrisdembia/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2015-11-03T22:15:16Z", "updated_at": "2015-11-04T01:01:22Z", "closed_at": null, "author_association": "MEMBER", "active_lock_reason": null, "body": "@Gjacquenot mentioned in #449 the following bug:\n\n> I would like to share some compilation issue I have faced:\n> I have tried to compile simbody with static version of Lapack and Blas with something like that -DBUILD_USING_OTHER_LAPACK:PATH=C:\\liblapack.a;C:\\libblas.a;\n> \n> Unfortunalety, I have faced multi definition problems at link time, since lapack and blas are used multiple times: for SimTKcommon and SimTKmath. (dlamch for example)\n> \n> I think the code should use the PRIVATE keyword with target_link_libraries to prevent this error.\n> \n> I guess each time a dynamic linking was done with Simbody and Lapack...\n\nThanks for raising this issue. I'm not sure I understand. Also I'm not sure the PRIVATE keyword is the right solution (Don't we want Simbody libraries to bring along their dependencies?) It sounds like lapack and blas should only be linked to SimTKmath and not to SimTKcommon.\n", "reactions": {"url": "https://api.github.com/repos/simbody/simbody/issues/450/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/simbody/simbody/issues/450/timeline", "performed_via_github_app": null}, {"url": "https://api.github.com/repos/simbody/simbody/issues/453", "repository_url": "https://api.github.com/repos/simbody/simbody", "labels_url": "https://api.github.com/repos/simbody/simbody/issues/453/labels{/name}", "comments_url": "https://api.github.com/repos/simbody/simbody/issues/453/comments", "events_url": "https://api.github.com/repos/simbody/simbody/issues/453/events", "html_url": "https://github.com/simbody/simbody/issues/453", "id": 115370503, "node_id": "MDU6SXNzdWUxMTUzNzA1MDM=", "number": 453, "title": "MinGW on Appveyor", "user": {"login": "chrisdembia", "id": 846001, "node_id": "MDQ6VXNlcjg0NjAwMQ==", "avatar_url": "https://avatars.githubusercontent.com/u/846001?v=4", "gravatar_id": "", "url": "https://api.github.com/users/chrisdembia", "html_url": "https://github.com/chrisdembia", "followers_url": "https://api.github.com/users/chrisdembia/followers", "following_url": "https://api.github.com/users/chrisdembia/following{/other_user}", "gists_url": "https://api.github.com/users/chrisdembia/gists{/gist_id}", "starred_url": "https://api.github.com/users/chrisdembia/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/chrisdembia/subscriptions", "organizations_url": "https://api.github.com/users/chrisdembia/orgs", "repos_url": "https://api.github.com/users/chrisdembia/repos", "events_url": "https://api.github.com/users/chrisdembia/events{/privacy}", "received_events_url": "https://api.github.com/users/chrisdembia/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 14, "created_at": "2015-11-05T20:46:43Z", "updated_at": "2015-11-10T14:21:35Z", "closed_at": null, "author_association": "MEMBER", "active_lock_reason": null, "body": "@Gjacquenot said in #452 :\n\n> By the way, do you know if it is possible to have Appveyor CI with MinGW? It would be really nice to have CI with MinGW, since MSVC 2015 seems really restrivtive to me.\n> \n> If Appveyor does not provide a MinGW compiler, and maybe we can download a file and unzip the compiler.\n\nI'm starting to try this out in https://github.com/simbody/simbody/tree/appveyor-mingw. I'm not sure though if @sherm1 would want appveyor to build with mingw.\n\nI think requiring MSVC 2015 on Windows is not as bad now as it used to be, since the MSVC Community version is free.\n", "reactions": {"url": "https://api.github.com/repos/simbody/simbody/issues/453/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/simbody/simbody/issues/453/timeline", "performed_via_github_app": null}, {"url": "https://api.github.com/repos/simbody/simbody/issues/454", "repository_url": "https://api.github.com/repos/simbody/simbody", "labels_url": "https://api.github.com/repos/simbody/simbody/issues/454/labels{/name}", "comments_url": "https://api.github.com/repos/simbody/simbody/issues/454/comments", "events_url": "https://api.github.com/repos/simbody/simbody/issues/454/events", "html_url": "https://github.com/simbody/simbody/issues/454", "id": 115370722, "node_id": "MDU6SXNzdWUxMTUzNzA3MjI=", "number": 454, "title": "With MSVC and user-supplied lapack/blas, Simbody should package up the user-supplied libs", "user": {"login": "chrisdembia", "id": 846001, "node_id": "MDQ6VXNlcjg0NjAwMQ==", "avatar_url": "https://avatars.githubusercontent.com/u/846001?v=4", "gravatar_id": "", "url": "https://api.github.com/users/chrisdembia", "html_url": "https://github.com/chrisdembia", "followers_url": "https://api.github.com/users/chrisdembia/followers", "following_url": "https://api.github.com/users/chrisdembia/following{/other_user}", "gists_url": "https://api.github.com/users/chrisdembia/gists{/gist_id}", "starred_url": "https://api.github.com/users/chrisdembia/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/chrisdembia/subscriptions", "organizations_url": "https://api.github.com/users/chrisdembia/orgs", "repos_url": "https://api.github.com/users/chrisdembia/repos", "events_url": "https://api.github.com/users/chrisdembia/events{/privacy}", "received_events_url": "https://api.github.com/users/chrisdembia/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2015-11-05T20:47:56Z", "updated_at": "2015-11-05T20:47:56Z", "closed_at": null, "author_association": "MEMBER", "active_lock_reason": null, "body": "I agree this would be good, but I think it's low priority since most of our MSVC users would not go through the hassle of getting their own lapack/blas.\n", "reactions": {"url": "https://api.github.com/repos/simbody/simbody/issues/454/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/simbody/simbody/issues/454/timeline", "performed_via_github_app": null}, {"url": "https://api.github.com/repos/simbody/simbody/issues/456", "repository_url": "https://api.github.com/repos/simbody/simbody", "labels_url": "https://api.github.com/repos/simbody/simbody/issues/456/labels{/name}", "comments_url": "https://api.github.com/repos/simbody/simbody/issues/456/comments", "events_url": "https://api.github.com/repos/simbody/simbody/issues/456/events", "html_url": "https://github.com/simbody/simbody/issues/456", "id": 118114868, "node_id": "MDU6SXNzdWUxMTgxMTQ4Njg=", "number": 456, "title": "Should add @Gjacquenot's elastic foundation theory test case", "user": {"login": "sherm1", "id": 4088016, "node_id": "MDQ6VXNlcjQwODgwMTY=", "avatar_url": "https://avatars.githubusercontent.com/u/4088016?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sherm1", "html_url": "https://github.com/sherm1", "followers_url": "https://api.github.com/users/sherm1/followers", "following_url": "https://api.github.com/users/sherm1/following{/other_user}", "gists_url": "https://api.github.com/users/sherm1/gists{/gist_id}", "starred_url": "https://api.github.com/users/sherm1/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sherm1/subscriptions", "organizations_url": "https://api.github.com/users/sherm1/orgs", "repos_url": "https://api.github.com/users/sherm1/repos", "events_url": "https://api.github.com/users/sherm1/events{/privacy}", "received_events_url": "https://api.github.com/users/sherm1/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 62665552, "node_id": "MDU6TGFiZWw2MjY2NTU1Mg==", "url": "https://api.github.com/repos/simbody/simbody/labels/contact", "name": "contact", "color": "eb6420", "default": false, "description": null}, {"id": 108217628, "node_id": "MDU6TGFiZWwxMDgyMTc2Mjg=", "url": "https://api.github.com/repos/simbody/simbody/labels/help%20wanted", "name": "help wanted", "color": "009800", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2015-11-20T19:56:52Z", "updated_at": "2015-11-27T19:55:10Z", "closed_at": "2015-11-27T19:55:10Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "@Gjacquenot wrote a test comparing a Hertz sphere with an equivalent Elastic Foundation sphere and measuring the dependency of force with depth. I'm filing this issue with the discussion to date copied in so we have a place to track it.\n", "reactions": {"url": "https://api.github.com/repos/simbody/simbody/issues/456/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/simbody/simbody/issues/456/timeline", "performed_via_github_app": null}, {"url": "https://api.github.com/repos/simbody/simbody/issues/468", "repository_url": "https://api.github.com/repos/simbody/simbody", "labels_url": "https://api.github.com/repos/simbody/simbody/issues/468/labels{/name}", "comments_url": "https://api.github.com/repos/simbody/simbody/issues/468/comments", "events_url": "https://api.github.com/repos/simbody/simbody/issues/468/events", "html_url": "https://github.com/simbody/simbody/issues/468", "id": 129922162, "node_id": "MDU6SXNzdWUxMjk5MjIxNjI=", "number": 468, "title": "Run-time errors when compiled on gcc with -fno-elide-constructors", "user": {"login": "scpeters", "id": 3650755, "node_id": "MDQ6VXNlcjM2NTA3NTU=", "avatar_url": "https://avatars.githubusercontent.com/u/3650755?v=4", "gravatar_id": "", "url": "https://api.github.com/users/scpeters", "html_url": "https://github.com/scpeters", "followers_url": "https://api.github.com/users/scpeters/followers", "following_url": "https://api.github.com/users/scpeters/following{/other_user}", "gists_url": "https://api.github.com/users/scpeters/gists{/gist_id}", "starred_url": "https://api.github.com/users/scpeters/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/scpeters/subscriptions", "organizations_url": "https://api.github.com/users/scpeters/orgs", "repos_url": "https://api.github.com/users/scpeters/repos", "events_url": "https://api.github.com/users/scpeters/events{/privacy}", "received_events_url": "https://api.github.com/users/scpeters/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2016-01-30T01:00:36Z", "updated_at": "2016-01-30T01:00:36Z", "closed_at": null, "author_association": "MEMBER", "active_lock_reason": null, "body": "I was exploring some [test failures in gazebo](https://bitbucket.org/osrf/gazebo/issues/1849/lcov-coverage-build-with-simbody-causes) when attempting to measure test coverage and found that all the tests  using simbody were failing. I managed to track it down to the `-fno-elide-constructors` gcc compiler flag (set [here](https://bitbucket.org/osrf/gazebo/src/7c23991510420e25940bee2c5566b083dc715ed3/cmake/DefaultCFlags.cmake?fileviewer=file-view-default#DefaultCFlags.cmake-34)).\n\nCompiling simbody with this flag leads to run-time errors (testing with gcc 4.8.4 on Ubuntu 14.04 trusty):\n\n```\n$ cmake .. -DCMAKE_CXX_FLAGS=\"-fno-elide-constructors\"\n...\n$ make -j8 TestAtomicInteger\n...\n$ gdb /TestAtomicInteger \n...\n(gdb) run\n...\n*** Error in `/data_fast/scpeters/ws/gazebo_physics/src/simbody/build2/TestAtomicInteger': double free or corruption (fasttop): 0x000000000060a350 ***\n\nProgram received signal SIGABRT, Aborted.\n0x00007ffff6fb2cc9 in __GI_raise (sig=sig@entry=6) at ../nptl/sysdeps/unix/sysv/linux/raise.c:56\n56  ../nptl/sysdeps/unix/sysv/linux/raise.c: No such file or directory.\n(gdb) bt\n#0  0x00007ffff6fb2cc9 in __GI_raise (sig=sig@entry=6) at ../nptl/sysdeps/unix/sysv/linux/raise.c:56\n#1  0x00007ffff6fb60d8 in __GI_abort () at abort.c:89\n#2  0x00007ffff6fef394 in __libc_message (do_abort=do_abort@entry=1, fmt=fmt@entry=0x7ffff70fdb28 \"*** Error in `%s': %s: 0x%s ***\\n\")\n    at ../sysdeps/posix/libc_fatal.c:175\n#3  0x00007ffff6ffb66e in malloc_printerr (ptr=<optimized out>, str=0x7ffff70fdcf0 \"double free or corruption (fasttop)\", action=1)\n    at malloc.c:4996\n#4  _int_free (av=<optimized out>, p=<optimized out>, have_lock=0) at malloc.c:3840\n#5  0x0000000000402aea in testOperators ()\n    at /data_fast/scpeters/ws/gazebo_physics/src/simbody/SimTKcommon/tests/TestAtomicInteger.cpp:71\n#6  0x0000000000402476 in main () at /data_fast/scpeters/ws/gazebo_physics/src/simbody/SimTKcommon/tests/TestAtomicInteger.cpp:144\n(gdb) \n```\n\nI don't know much about this compiler flag, but there's some info on [stackoverflow](http://stackoverflow.com/questions/27086573/when-and-why-would-i-use-fno-elide-constructors), as always.\n", "reactions": {"url": "https://api.github.com/repos/simbody/simbody/issues/468/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/simbody/simbody/issues/468/timeline", "performed_via_github_app": null}, {"url": "https://api.github.com/repos/simbody/simbody/issues/471", "repository_url": "https://api.github.com/repos/simbody/simbody", "labels_url": "https://api.github.com/repos/simbody/simbody/issues/471/labels{/name}", "comments_url": "https://api.github.com/repos/simbody/simbody/issues/471/comments", "events_url": "https://api.github.com/repos/simbody/simbody/issues/471/events", "html_url": "https://github.com/simbody/simbody/issues/471", "id": 133820048, "node_id": "MDU6SXNzdWUxMzM4MjAwNDg=", "number": 471, "title": "SimTK Exception thrown at TestGeo.cpp:99", "user": {"login": "worm2fed", "id": 6579275, "node_id": "MDQ6VXNlcjY1NzkyNzU=", "avatar_url": "https://avatars.githubusercontent.com/u/6579275?v=4", "gravatar_id": "", "url": "https://api.github.com/users/worm2fed", "html_url": "https://github.com/worm2fed", "followers_url": "https://api.github.com/users/worm2fed/followers", "following_url": "https://api.github.com/users/worm2fed/following{/other_user}", "gists_url": "https://api.github.com/users/worm2fed/gists{/gist_id}", "starred_url": "https://api.github.com/users/worm2fed/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/worm2fed/subscriptions", "organizations_url": "https://api.github.com/users/worm2fed/orgs", "repos_url": "https://api.github.com/users/worm2fed/repos", "events_url": "https://api.github.com/users/worm2fed/events{/privacy}", "received_events_url": "https://api.github.com/users/worm2fed/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 18, "created_at": "2016-02-15T21:20:57Z", "updated_at": "2019-01-24T16:19:20Z", "closed_at": null, "author_association": "NONE", "active_lock_reason": null, "body": "Hello. I can't pass TestGeo, there is output. Can u help me to fix this issue?\n\n```\nworm2fed@tarvos ~ $ /tmp/yaourt-tmp-worm2fed/aur-simbody/src/build/TestGeo \nStarting test TestGeo ...\n  testMiscGeo ...\n  testMiscGeo done. real/CPU ms: 0.0 / 0.0\n  testBox ...\n  testBox done. real/CPU ms: 0.0 / 0.0\n  testTriMeshBoundingSphere ...\n  testTriMeshBoundingSphere done. real/CPU ms: 33.9 / 33.9\nTest failed due to exception: SimTK Exception thrown at TestGeo.cpp:99:\n  Internal bug detected: Test condition failed.\n  (Assertion '(radius <= ritter.getRadius()*(1.01))' failed).\n  Please file an Issue at https://github.com/simbody/simbody/issues.\n  Include the above information and anything else needed to reproduce the problem.\n\nTestGeo done. real/CPU ms: 34.1 / 34.1\nworm2fed@tarvos ~ $ \n```\n", "reactions": {"url": "https://api.github.com/repos/simbody/simbody/issues/471/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/simbody/simbody/issues/471/timeline", "performed_via_github_app": null}, {"url": "https://api.github.com/repos/simbody/simbody/issues/474", "repository_url": "https://api.github.com/repos/simbody/simbody", "labels_url": "https://api.github.com/repos/simbody/simbody/issues/474/labels{/name}", "comments_url": "https://api.github.com/repos/simbody/simbody/issues/474/comments", "events_url": "https://api.github.com/repos/simbody/simbody/issues/474/events", "html_url": "https://github.com/simbody/simbody/issues/474", "id": 140026855, "node_id": "MDU6SXNzdWUxNDAwMjY4NTU=", "number": 474, "title": "Implement MeshFile primitive in SimTK::Visualizer", "user": {"login": "aymanhab", "id": 3972208, "node_id": "MDQ6VXNlcjM5NzIyMDg=", "avatar_url": "https://avatars.githubusercontent.com/u/3972208?v=4", "gravatar_id": "", "url": "https://api.github.com/users/aymanhab", "html_url": "https://github.com/aymanhab", "followers_url": "https://api.github.com/users/aymanhab/followers", "following_url": "https://api.github.com/users/aymanhab/following{/other_user}", "gists_url": "https://api.github.com/users/aymanhab/gists{/gist_id}", "starred_url": "https://api.github.com/users/aymanhab/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/aymanhab/subscriptions", "organizations_url": "https://api.github.com/users/aymanhab/orgs", "repos_url": "https://api.github.com/users/aymanhab/repos", "events_url": "https://api.github.com/users/aymanhab/events{/privacy}", "received_events_url": "https://api.github.com/users/aymanhab/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 52759897, "node_id": "MDU6TGFiZWw1Mjc1OTg5Nw==", "url": "https://api.github.com/repos/simbody/simbody/labels/visualization", "name": "visualization", "color": "bfd4f2", "default": false, "description": null}, {"id": 108217628, "node_id": "MDU6TGFiZWwxMDgyMTc2Mjg=", "url": "https://api.github.com/repos/simbody/simbody/labels/help%20wanted", "name": "help wanted", "color": "009800", "default": true, "description": null}, {"id": 121484439, "node_id": "MDU6TGFiZWwxMjE0ODQ0Mzk=", "url": "https://api.github.com/repos/simbody/simbody/labels/OpenSim", "name": "OpenSim", "color": "006b75", "default": false, "description": null}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2016-03-10T22:23:53Z", "updated_at": "2016-03-10T22:28:21Z", "closed_at": null, "author_association": "MEMBER", "active_lock_reason": null, "body": "Early in OpenSim 4.0 the types of primitives supported as DecorativeGeometry were expanded to include MeshFile, Torus, Arrow and Cone but the concrete class implementing the interface (DecorativeGeometryImplementation) for the API visualizer left the methods empty. OpenSim 4.0 will need the methods implemented so that the API visualizer and GUI behave the same.\n", "reactions": {"url": "https://api.github.com/repos/simbody/simbody/issues/474/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/simbody/simbody/issues/474/timeline", "performed_via_github_app": null}, {"url": "https://api.github.com/repos/simbody/simbody/issues/476", "repository_url": "https://api.github.com/repos/simbody/simbody", "labels_url": "https://api.github.com/repos/simbody/simbody/issues/476/labels{/name}", "comments_url": "https://api.github.com/repos/simbody/simbody/issues/476/comments", "events_url": "https://api.github.com/repos/simbody/simbody/issues/476/events", "html_url": "https://github.com/simbody/simbody/issues/476", "id": 141648818, "node_id": "MDU6SXNzdWUxNDE2NDg4MTg=", "number": 476, "title": "Creating RowVector_<Vec3> from Vector_<Vec3> throws exception upon access", "user": {"login": "chrisdembia", "id": 846001, "node_id": "MDQ6VXNlcjg0NjAwMQ==", "avatar_url": "https://avatars.githubusercontent.com/u/846001?v=4", "gravatar_id": "", "url": "https://api.github.com/users/chrisdembia", "html_url": "https://github.com/chrisdembia", "followers_url": "https://api.github.com/users/chrisdembia/followers", "following_url": "https://api.github.com/users/chrisdembia/following{/other_user}", "gists_url": "https://api.github.com/users/chrisdembia/gists{/gist_id}", "starred_url": "https://api.github.com/users/chrisdembia/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/chrisdembia/subscriptions", "organizations_url": "https://api.github.com/users/chrisdembia/orgs", "repos_url": "https://api.github.com/users/chrisdembia/repos", "events_url": "https://api.github.com/users/chrisdembia/events{/privacy}", "received_events_url": "https://api.github.com/users/chrisdembia/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2016-03-17T17:19:07Z", "updated_at": "2016-03-17T17:43:16Z", "closed_at": null, "author_association": "MEMBER", "active_lock_reason": null, "body": "The following code compiles:\n\n``` cpp\n#include <Simbody.h>\n\nusing namespace SimTK;\n\nint main() {\n    Vector_<Vec3> v(5);\n\n    RowVector_<Vec3> rv(v.size());\n\n    rv = ~v;\n\n    std::cout << rv << std::endl;\n}\n```\n\nBut throws the exception:\n\n```\nlibc++abi.dylib: terminating with uncaught exception of type SimTK::Exception::Cant: SimTK Exception thrown at MatrixHelperRep.h:601:\n  Can't perform operation: One-index getElt_() not available for 2D matrices\n```\n\nThis was originally reported over at https://github.com/opensim-org/opensim-core/issues/849, where @sherm1 said:\n\n> This probably indicates some constructors, conversions, and methods are missing from the RowVector class. I think it is less complete than Vector because it doesn't get much use. They are probably very simple things to add -- please file a Simbody issue so we don't lose track (PR would be good too if you're feeling brave!). Your code (above) is correct. I think the error you got when writing it out was due to a missing RowVector method causing it to attempt to use the base class Matrix for something that should have been overridden but wasn't (a bug).\n\nSo this issue is about creating the necessary methods to `RowVector_` (probably `RowVectorBase_`)? \n", "reactions": {"url": "https://api.github.com/repos/simbody/simbody/issues/476/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/simbody/simbody/issues/476/timeline", "performed_via_github_app": null}, {"url": "https://api.github.com/repos/simbody/simbody/issues/477", "repository_url": "https://api.github.com/repos/simbody/simbody", "labels_url": "https://api.github.com/repos/simbody/simbody/issues/477/labels{/name}", "comments_url": "https://api.github.com/repos/simbody/simbody/issues/477/comments", "events_url": "https://api.github.com/repos/simbody/simbody/issues/477/events", "html_url": "https://github.com/simbody/simbody/issues/477", "id": 144934936, "node_id": "MDU6SXNzdWUxNDQ5MzQ5MzY=", "number": 477, "title": "Conflict when used with Qt", "user": {"login": "mitkof6", "id": 4024976, "node_id": "MDQ6VXNlcjQwMjQ5NzY=", "avatar_url": "https://avatars.githubusercontent.com/u/4024976?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mitkof6", "html_url": "https://github.com/mitkof6", "followers_url": "https://api.github.com/users/mitkof6/followers", "following_url": "https://api.github.com/users/mitkof6/following{/other_user}", "gists_url": "https://api.github.com/users/mitkof6/gists{/gist_id}", "starred_url": "https://api.github.com/users/mitkof6/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mitkof6/subscriptions", "organizations_url": "https://api.github.com/users/mitkof6/orgs", "repos_url": "https://api.github.com/users/mitkof6/repos", "events_url": "https://api.github.com/users/mitkof6/events{/privacy}", "received_events_url": "https://api.github.com/users/mitkof6/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2016-03-31T15:30:35Z", "updated_at": "2016-04-07T12:40:29Z", "closed_at": "2016-04-07T12:40:29Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "When Simbody is included with Qt, there is a conflict with the definitions. Apparently the problem is the definition of qInfo:\n\nQt:\n`#define qInfo QMessageLogger(QT_MESSAGELOG_FILE, QT_MESSAGELOG_LINE, QT_MESSAGELOG_FUNC).info`\n\nSimbody::StateImpl.h\n`Array_<ContinuousVarInfo>      qInfo, uInfo, zInfo;`\n\n`2>d:\\lib\\simbody\\install\\master_3.6_x64_vs2015\\include\\SimTKcommon/internal/StateImpl.h(797): error C2059: syntax error: 'nullptr'\n2>d:\\lib\\simbody\\install\\master_3.6_x64_vs2015\\include\\SimTKcommon/internal/StateImpl.h(797): error C3484: syntax error: expected '->' before the return type\n2>d:\\lib\\simbody\\install\\master_3.6_x64_vs2015\\include\\SimTKcommon/internal/StateImpl.h(797): error C3613: missing return type after '->' ('int' assumed)\n2>d:\\lib\\simbody\\install\\master_3.6_x64_vs2015\\include\\SimTKcommon/internal/StateImpl.h(797): error C3646: 'info': unknown override specifier\n2>d:\\lib\\simbody\\install\\master_3.6_x64_vs2015\\include\\SimTKcommon/internal/StateImpl.h(797): error C3551: if a trailing return type is used then the leading return type shall be the single type-specifier 'auto' (not 'SimTK::Array_<SimTK::ContinuousVarInfo,unsigned int>')\n2>d:\\lib\\simbody\\install\\master_3.6_x64_vs2015\\include\\SimTKcommon/internal/StateImpl.h(797): error C2071: 'SimTK::PerSubsystemInfo::uInfo': illegal storage class\n2>d:\\lib\\simbody\\install\\master_3.6_x64_vs2015\\include\\SimTKcommon/internal/StateImpl.h(797): error C2071: 'SimTK::PerSubsystemInfo::zInfo': illegal storage class\n2>d:\\lib\\simbody\\install\\master_3.6_x64_vs2015\\include\\SimTKcommon/internal/StateImpl.h(690): error C2660: 'SimTK::PerSubsystemInfo::QMessageLogger': function does not take 3 arguments\n2>d:\\lib\\simbody\\install\\master_3.6_x64_vs2015\\include\\SimTKcommon/internal/StateImpl.h(690): error C2228: left of '.info' must have class/struct/union\n2>d:\\lib\\simbody\\install\\master_3.6_x64_vs2015\\include\\SimTKcommon/internal/StateImpl.h(690): error C2228: left of '.empty' must have class/struct/union\n2>d:\\lib\\simbody\\install\\master_3.6_x64_vs2015\\include\\SimTKcommon/internal/StateImpl.h(691): error C2660: 'SimTK::PerSubsystemInfo::QMessageLogger': function does not take 3 arguments\n2>d:\\lib\\simbody\\install\\master_3.6_x64_vs2015\\include\\SimTKcommon/internal/StateImpl.h(691): error C2228: left of '.info' must have class/struct/union\n2>d:\\lib\\simbody\\install\\master_3.6_x64_vs2015\\include\\SimTKcommon/internal/StateImpl.h(691): error C2228: left of '.back' must have class/struct/union\n2>d:\\lib\\simbody\\install\\master_3.6_x64_vs2015\\include\\SimTKcommon/internal/StateImpl.h(691): error C2530: 'last': references must be initialized\n2>d:\\lib\\simbody\\install\\master_3.6_x64_vs2015\\include\\SimTKcommon/internal/StateImpl.h(1070): error C2660: 'SimTK::PerSubsystemInfo::QMessageLogger': function does not take 3 arguments\n2>d:\\lib\\simbody\\install\\master_3.6_x64_vs2015\\include\\SimTKcommon/internal/StateImpl.h(1070): error C2228: left of '.info' must have class/struct/union\n2>d:\\lib\\simbody\\install\\master_3.6_x64_vs2015\\include\\SimTKcommon/internal/StateImpl.h(1070): error C2228: left of '.push_back' must have class/struct/union`\n", "reactions": {"url": "https://api.github.com/repos/simbody/simbody/issues/477/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/simbody/simbody/issues/477/timeline", "performed_via_github_app": null}, {"url": "https://api.github.com/repos/simbody/simbody/issues/482", "repository_url": "https://api.github.com/repos/simbody/simbody", "labels_url": "https://api.github.com/repos/simbody/simbody/issues/482/labels{/name}", "comments_url": "https://api.github.com/repos/simbody/simbody/issues/482/comments", "events_url": "https://api.github.com/repos/simbody/simbody/issues/482/events", "html_url": "https://github.com/simbody/simbody/issues/482", "id": 148057438, "node_id": "MDU6SXNzdWUxNDgwNTc0Mzg=", "number": 482, "title": "Compiler version check for gcc incorrecly fails", "user": {"login": "elen4", "id": 3841320, "node_id": "MDQ6VXNlcjM4NDEzMjA=", "avatar_url": "https://avatars.githubusercontent.com/u/3841320?v=4", "gravatar_id": "", "url": "https://api.github.com/users/elen4", "html_url": "https://github.com/elen4", "followers_url": "https://api.github.com/users/elen4/followers", "following_url": "https://api.github.com/users/elen4/following{/other_user}", "gists_url": "https://api.github.com/users/elen4/gists{/gist_id}", "starred_url": "https://api.github.com/users/elen4/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/elen4/subscriptions", "organizations_url": "https://api.github.com/users/elen4/orgs", "repos_url": "https://api.github.com/users/elen4/repos", "events_url": "https://api.github.com/users/elen4/events{/privacy}", "received_events_url": "https://api.github.com/users/elen4/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 15, "created_at": "2016-04-13T13:13:42Z", "updated_at": "2016-04-28T19:04:03Z", "closed_at": "2016-04-28T17:07:31Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "I tried to compile Simbody on an Ubuntu 14.04 LTS machine, with gcc 4.8.4 installed, as checked with `gcc --version`. Although the `SIMBODY_REQUIRED_GCC_VERSION` is 4.8.1, the check fails and issues a fatal error, because the version retrieved with the `gcc -dumpversion` command is in major.minor fomat, i.e., 4.8 ( https://bugs.launchpad.net/ubuntu/+source/gcc-4.8/+bug/1360404).\nSetting `SIMBODY_REQUIRED_GCC_VERSION` to 4.8 in the main CMakeLists.txt fixes this issue for me.\n", "reactions": {"url": "https://api.github.com/repos/simbody/simbody/issues/482/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/simbody/simbody/issues/482/timeline", "performed_via_github_app": null}, {"url": "https://api.github.com/repos/simbody/simbody/issues/483", "repository_url": "https://api.github.com/repos/simbody/simbody", "labels_url": "https://api.github.com/repos/simbody/simbody/issues/483/labels{/name}", "comments_url": "https://api.github.com/repos/simbody/simbody/issues/483/comments", "events_url": "https://api.github.com/repos/simbody/simbody/issues/483/events", "html_url": "https://github.com/simbody/simbody/issues/483", "id": 149042199, "node_id": "MDU6SXNzdWUxNDkwNDIxOTk=", "number": 483, "title": "AppVeyor failure in 32-bit on the master branch", "user": {"login": "chrisdembia", "id": 846001, "node_id": "MDQ6VXNlcjg0NjAwMQ==", "avatar_url": "https://avatars.githubusercontent.com/u/846001?v=4", "gravatar_id": "", "url": "https://api.github.com/users/chrisdembia", "html_url": "https://github.com/chrisdembia", "followers_url": "https://api.github.com/users/chrisdembia/followers", "following_url": "https://api.github.com/users/chrisdembia/following{/other_user}", "gists_url": "https://api.github.com/users/chrisdembia/gists{/gist_id}", "starred_url": "https://api.github.com/users/chrisdembia/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/chrisdembia/subscriptions", "organizations_url": "https://api.github.com/users/chrisdembia/orgs", "repos_url": "https://api.github.com/users/chrisdembia/repos", "events_url": "https://api.github.com/users/chrisdembia/events{/privacy}", "received_events_url": "https://api.github.com/users/chrisdembia/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 26, "created_at": "2016-04-18T05:00:01Z", "updated_at": "2016-04-19T03:14:52Z", "closed_at": "2016-04-18T23:33:12Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "PR #481 succeeded, but appveyor build on the master branch after the merge had one failure (https://ci.appveyor.com/project/opensim-org/simbody/build/822/job/4drq682gmlrgh0cy); TestMassProperties:\n\n![image](https://cloud.githubusercontent.com/assets/846001/14594116/b51c6356-04e7-11e6-97c5-d35d6eebbcf4.png)\n\n```\nStarting test TestMassProperties ...\n  testCrossProduct ...\n  testCrossProduct done. real/CPU ms: 0.1 / 0.0\n  testInertia ...\n  testInertia done. real/CPU ms: 0.0 / 0.0\n  testHalfCross ...\n  testHalfCross done. real/CPU ms: 0.0 / 0.0\n  testSpatialInertia ...\n  testSpatialInertia done. real/CPU ms: 0.0 / 0.0\n  testArticulatedInertia ...\n  testArticulatedInertia done. real/CPU ms: 0.0 / 0.0\nTest failed due to exception: SimTK Exception thrown at TestMassProperties.cpp:342:\n  Internal bug detected: Test condition failed.\n  (Assertion '(mabi(1,0) == ~massMoment)' failed).\n  Please file an Issue at https://github.com/simbody/simbody/issues.\n  Include the above information and anything else needed to reproduce the problem.\n\nTestMassProperties done. real/CPU ms: 0.2 / 0.0\n```\n\nThis means that the 32-bit binaries from this build were _not_ uploaded to appveyor.  I'm now going to restart the appveyor build to see if it succeeds now (the link from above will likely become stale).\n", "reactions": {"url": "https://api.github.com/repos/simbody/simbody/issues/483/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/simbody/simbody/issues/483/timeline", "performed_via_github_app": null}, {"url": "https://api.github.com/repos/simbody/simbody/issues/487", "repository_url": "https://api.github.com/repos/simbody/simbody", "labels_url": "https://api.github.com/repos/simbody/simbody/issues/487/labels{/name}", "comments_url": "https://api.github.com/repos/simbody/simbody/issues/487/comments", "events_url": "https://api.github.com/repos/simbody/simbody/issues/487/events", "html_url": "https://github.com/simbody/simbody/issues/487", "id": 151718845, "node_id": "MDU6SXNzdWUxNTE3MTg4NDU=", "number": 487, "title": "Describe how to get GCC 4.9 in Ubuntu 14.04 in the README", "user": {"login": "chrisdembia", "id": 846001, "node_id": "MDQ6VXNlcjg0NjAwMQ==", "avatar_url": "https://avatars.githubusercontent.com/u/846001?v=4", "gravatar_id": "", "url": "https://api.github.com/users/chrisdembia", "html_url": "https://github.com/chrisdembia", "followers_url": "https://api.github.com/users/chrisdembia/followers", "following_url": "https://api.github.com/users/chrisdembia/following{/other_user}", "gists_url": "https://api.github.com/users/chrisdembia/gists{/gist_id}", "starred_url": "https://api.github.com/users/chrisdembia/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/chrisdembia/subscriptions", "organizations_url": "https://api.github.com/users/chrisdembia/orgs", "repos_url": "https://api.github.com/users/chrisdembia/repos", "events_url": "https://api.github.com/users/chrisdembia/events{/privacy}", "received_events_url": "https://api.github.com/users/chrisdembia/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 59408209, "node_id": "MDU6TGFiZWw1OTQwODIwOQ==", "url": "https://api.github.com/repos/simbody/simbody/labels/documentation", "name": "documentation", "color": "bfdadc", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 9, "created_at": "2016-04-28T19:03:33Z", "updated_at": "2016-05-22T19:40:37Z", "closed_at": "2016-05-22T19:40:32Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "@elen4 suggested this in #482. The CHANGELOG gives instructions; we should copy them over to the README.\n", "reactions": {"url": "https://api.github.com/repos/simbody/simbody/issues/487/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/simbody/simbody/issues/487/timeline", "performed_via_github_app": null}, {"url": "https://api.github.com/repos/simbody/simbody/issues/494", "repository_url": "https://api.github.com/repos/simbody/simbody", "labels_url": "https://api.github.com/repos/simbody/simbody/issues/494/labels{/name}", "comments_url": "https://api.github.com/repos/simbody/simbody/issues/494/comments", "events_url": "https://api.github.com/repos/simbody/simbody/issues/494/events", "html_url": "https://github.com/simbody/simbody/issues/494", "id": 154916193, "node_id": "MDU6SXNzdWUxNTQ5MTYxOTM=", "number": 494, "title": "Using \"<NONAME>\" for sub/system names may not be great for XML format.", "user": {"login": "chrisdembia", "id": 846001, "node_id": "MDQ6VXNlcjg0NjAwMQ==", "avatar_url": "https://avatars.githubusercontent.com/u/846001?v=4", "gravatar_id": "", "url": "https://api.github.com/users/chrisdembia", "html_url": "https://github.com/chrisdembia", "followers_url": "https://api.github.com/users/chrisdembia/followers", "following_url": "https://api.github.com/users/chrisdembia/following{/other_user}", "gists_url": "https://api.github.com/users/chrisdembia/gists{/gist_id}", "starred_url": "https://api.github.com/users/chrisdembia/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/chrisdembia/subscriptions", "organizations_url": "https://api.github.com/users/chrisdembia/orgs", "repos_url": "https://api.github.com/users/chrisdembia/repos", "events_url": "https://api.github.com/users/chrisdembia/events{/privacy}", "received_events_url": "https://api.github.com/users/chrisdembia/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2016-05-15T16:11:47Z", "updated_at": "2016-05-15T22:03:27Z", "closed_at": null, "author_association": "MEMBER", "active_lock_reason": null, "body": "A few classes have the (default?) name `\"<NONAME>\"`, such as Guts, GutsRep (see [here](https://github.com/simbody/simbody/search?utf8=%E2%9C%93&q=%3CNONAME%3E)).\n\nThis causes elements to appear like so:\n\n``` xml\n<Subsystem name=\"4\" version=\"1\">\n<name>&lt;NONAME&gt;</name>\n...\n</Subsystem>\n```\n\nAlso, newlines appear as `&#x0A;` when in the value of an element.\n\nThese might not be actual issues; just wanted to raise it though.\n", "reactions": {"url": "https://api.github.com/repos/simbody/simbody/issues/494/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/simbody/simbody/issues/494/timeline", "performed_via_github_app": null}, {"url": "https://api.github.com/repos/simbody/simbody/issues/495", "repository_url": "https://api.github.com/repos/simbody/simbody", "labels_url": "https://api.github.com/repos/simbody/simbody/issues/495/labels{/name}", "comments_url": "https://api.github.com/repos/simbody/simbody/issues/495/comments", "events_url": "https://api.github.com/repos/simbody/simbody/issues/495/events", "html_url": "https://github.com/simbody/simbody/issues/495", "id": 156054359, "node_id": "MDU6SXNzdWUxNTYwNTQzNTk=", "number": 495, "title": "Windows Install Instruction are incorrect", "user": {"login": "jlong29", "id": 461203, "node_id": "MDQ6VXNlcjQ2MTIwMw==", "avatar_url": "https://avatars.githubusercontent.com/u/461203?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jlong29", "html_url": "https://github.com/jlong29", "followers_url": "https://api.github.com/users/jlong29/followers", "following_url": "https://api.github.com/users/jlong29/following{/other_user}", "gists_url": "https://api.github.com/users/jlong29/gists{/gist_id}", "starred_url": "https://api.github.com/users/jlong29/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jlong29/subscriptions", "organizations_url": "https://api.github.com/users/jlong29/orgs", "repos_url": "https://api.github.com/users/jlong29/repos", "events_url": "https://api.github.com/users/jlong29/events{/privacy}", "received_events_url": "https://api.github.com/users/jlong29/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2016-05-20T21:27:34Z", "updated_at": "2016-05-22T22:36:07Z", "closed_at": "2016-05-22T22:36:07Z", "author_association": "NONE", "active_lock_reason": null, "body": "The recommended version for installing Simbody using Visual Studio 2015 should be 3.5.3 and not 3.5.1. 3.5.1 does not compile under Visual Studio 2015, though it does under Visual Studio 2013.\n", "reactions": {"url": "https://api.github.com/repos/simbody/simbody/issues/495/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/simbody/simbody/issues/495/timeline", "performed_via_github_app": null}, {"url": "https://api.github.com/repos/simbody/simbody/issues/505", "repository_url": "https://api.github.com/repos/simbody/simbody", "labels_url": "https://api.github.com/repos/simbody/simbody/issues/505/labels{/name}", "comments_url": "https://api.github.com/repos/simbody/simbody/issues/505/comments", "events_url": "https://api.github.com/repos/simbody/simbody/issues/505/events", "html_url": "https://github.com/simbody/simbody/issues/505", "id": 158602181, "node_id": "MDU6SXNzdWUxNTg2MDIxODE=", "number": 505, "title": "Equality operator for which NaN == NaN", "user": {"login": "chrisdembia", "id": 846001, "node_id": "MDQ6VXNlcjg0NjAwMQ==", "avatar_url": "https://avatars.githubusercontent.com/u/846001?v=4", "gravatar_id": "", "url": "https://api.github.com/users/chrisdembia", "html_url": "https://github.com/chrisdembia", "followers_url": "https://api.github.com/users/chrisdembia/followers", "following_url": "https://api.github.com/users/chrisdembia/following{/other_user}", "gists_url": "https://api.github.com/users/chrisdembia/gists{/gist_id}", "starred_url": "https://api.github.com/users/chrisdembia/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/chrisdembia/subscriptions", "organizations_url": "https://api.github.com/users/chrisdembia/orgs", "repos_url": "https://api.github.com/users/chrisdembia/repos", "events_url": "https://api.github.com/users/chrisdembia/events{/privacy}", "received_events_url": "https://api.github.com/users/chrisdembia/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2016-06-06T05:17:48Z", "updated_at": "2016-06-08T07:42:50Z", "closed_at": null, "author_association": "MEMBER", "active_lock_reason": null, "body": "@sherm said in #504:\n\n>  I think what's really needed is a different equality operator (other than operator==) that returns true for NaN==NaN. Maybe something like template <class T> bool isSameAs(const T& thing1, const T& thing2) where the default implementation would just invoke operator==. GTest has something like that.\n", "reactions": {"url": "https://api.github.com/repos/simbody/simbody/issues/505/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/simbody/simbody/issues/505/timeline", "performed_via_github_app": null}, {"url": "https://api.github.com/repos/simbody/simbody/issues/507", "repository_url": "https://api.github.com/repos/simbody/simbody", "labels_url": "https://api.github.com/repos/simbody/simbody/issues/507/labels{/name}", "comments_url": "https://api.github.com/repos/simbody/simbody/issues/507/comments", "events_url": "https://api.github.com/repos/simbody/simbody/issues/507/events", "html_url": "https://github.com/simbody/simbody/issues/507", "id": 158832977, "node_id": "MDU6SXNzdWUxNTg4MzI5Nzc=", "number": 507, "title": "Serialization of Ground body has NaNs in inertia instead of Infinity", "user": {"login": "chrisdembia", "id": 846001, "node_id": "MDQ6VXNlcjg0NjAwMQ==", "avatar_url": "https://avatars.githubusercontent.com/u/846001?v=4", "gravatar_id": "", "url": "https://api.github.com/users/chrisdembia", "html_url": "https://github.com/chrisdembia", "followers_url": "https://api.github.com/users/chrisdembia/followers", "following_url": "https://api.github.com/users/chrisdembia/following{/other_user}", "gists_url": "https://api.github.com/users/chrisdembia/gists{/gist_id}", "starred_url": "https://api.github.com/users/chrisdembia/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/chrisdembia/subscriptions", "organizations_url": "https://api.github.com/users/chrisdembia/orgs", "repos_url": "https://api.github.com/users/chrisdembia/repos", "events_url": "https://api.github.com/users/chrisdembia/events{/privacy}", "received_events_url": "https://api.github.com/users/chrisdembia/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2016-06-07T04:00:49Z", "updated_at": "2016-06-07T14:54:56Z", "closed_at": "2016-06-07T14:54:56Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "[I think that the Ground body is created with an Infinity inertia](https://github.com/simbody/simbody/blob/d75d24cbe3f8a74bf7c3a0a7255eacd5a798777e/Simbody/src/BodyRep.h#L135). However, when serializing the MassProperties for ground, I get:\n\n``` xml\n                                <MassProperties version=\"1\">                                                                                                                   \n                                    <mass>Inf</mass>                                                                                                                           \n                                    <comInB>0 0 0</comInB>                                                                                                                     \n                                    <UnitInertia name=\"unitInertia_OB_B\" version=\"1\">                                                                                          \n                                        <I_OF_F>NaN 0 0&#x0A;0 NaN 0&#x0A;0 0 NaN</I_OF_F>                                                                                     \n                                    </UnitInertia>                                                                                                                             \n                                </MassProperties>\n```\n\nIs there some normalization or symmetrification procedure that is causing this? Is this OK? A potential problem is that constructing an Inertia matrix from NaNs throws an exception (in debug only, I think, from the `errChk()` method).\n\nNote that if I change the Ground's MassProperties initialization from `infiniteMassProperties(Infinity, Vec3(0), Inertia(Infinity))` to `infiniteMassProperties(Infinity, Vec3(0), UnitInertia(Infinity))` (to use `UnitInertia`) then the `Inf`s appear correctly in Xml:\n\n``` xml\n<MassProperties version=\"1\">\n    <mass>Inf</mass>\n    <comInB>0 0 0</comInB>\n    <UnitInertia name=\"unitInertia_OB_B\" version=\"1\">\n        <I_OF_F>Inf 0 0&#x0A;0 Inf 0&#x0A;0 0 Inf</I_OF_F>\n    </UnitInertia>\n</MassProperties>\n```\n", "reactions": {"url": "https://api.github.com/repos/simbody/simbody/issues/507/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/simbody/simbody/issues/507/timeline", "performed_via_github_app": null}, {"url": "https://api.github.com/repos/simbody/simbody/issues/509", "repository_url": "https://api.github.com/repos/simbody/simbody", "labels_url": "https://api.github.com/repos/simbody/simbody/issues/509/labels{/name}", "comments_url": "https://api.github.com/repos/simbody/simbody/issues/509/comments", "events_url": "https://api.github.com/repos/simbody/simbody/issues/509/events", "html_url": "https://github.com/simbody/simbody/issues/509", "id": 163908531, "node_id": "MDU6SXNzdWUxNjM5MDg1MzE=", "number": 509, "title": "Multithreaded Dynamic Triangle meshes?", "user": {"login": "danhambleton", "id": 1939589, "node_id": "MDQ6VXNlcjE5Mzk1ODk=", "avatar_url": "https://avatars.githubusercontent.com/u/1939589?v=4", "gravatar_id": "", "url": "https://api.github.com/users/danhambleton", "html_url": "https://github.com/danhambleton", "followers_url": "https://api.github.com/users/danhambleton/followers", "following_url": "https://api.github.com/users/danhambleton/following{/other_user}", "gists_url": "https://api.github.com/users/danhambleton/gists{/gist_id}", "starred_url": "https://api.github.com/users/danhambleton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/danhambleton/subscriptions", "organizations_url": "https://api.github.com/users/danhambleton/orgs", "repos_url": "https://api.github.com/users/danhambleton/repos", "events_url": "https://api.github.com/users/danhambleton/events{/privacy}", "received_events_url": "https://api.github.com/users/danhambleton/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2016-07-05T17:54:19Z", "updated_at": "2016-07-05T17:54:19Z", "closed_at": null, "author_association": "NONE", "active_lock_reason": null, "body": "Hi there,\n\nI'm not sure this is the right spot for this, but I'm reviewing Simbody for use in a commerical app. There are a couple key things that we need:\n- Dynamic triangle mesh support (rigid bodies with arbitrary collision geometry)\n- Multithreaded contact/timestep calculation\n\nI've been playing around with the examples a bit, and it looks like triangle meshes are supported. However, despite seeing some references to a WorkQueue and ParallelForceCalc, it was not clear if a rigidbody sim could be multithreaded. Is this possible? Is it an \"out of the box\" thing, or would we have to implement the threading mechanism in a custom way?\n", "reactions": {"url": "https://api.github.com/repos/simbody/simbody/issues/509/reactions", "total_count": 1, "+1": 1, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/simbody/simbody/issues/509/timeline", "performed_via_github_app": null}, {"url": "https://api.github.com/repos/simbody/simbody/issues/510", "repository_url": "https://api.github.com/repos/simbody/simbody", "labels_url": "https://api.github.com/repos/simbody/simbody/issues/510/labels{/name}", "comments_url": "https://api.github.com/repos/simbody/simbody/issues/510/comments", "events_url": "https://api.github.com/repos/simbody/simbody/issues/510/events", "html_url": "https://github.com/simbody/simbody/issues/510", "id": 164661539, "node_id": "MDU6SXNzdWUxNjQ2NjE1Mzk=", "number": 510, "title": "simbody includes and links statically a forked IpOpt library, whose symbols conflicts with system IpOpt ", "user": {"login": "traversaro", "id": 1857049, "node_id": "MDQ6VXNlcjE4NTcwNDk=", "avatar_url": "https://avatars.githubusercontent.com/u/1857049?v=4", "gravatar_id": "", "url": "https://api.github.com/users/traversaro", "html_url": "https://github.com/traversaro", "followers_url": "https://api.github.com/users/traversaro/followers", "following_url": "https://api.github.com/users/traversaro/following{/other_user}", "gists_url": "https://api.github.com/users/traversaro/gists{/gist_id}", "starred_url": "https://api.github.com/users/traversaro/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/traversaro/subscriptions", "organizations_url": "https://api.github.com/users/traversaro/orgs", "repos_url": "https://api.github.com/users/traversaro/repos", "events_url": "https://api.github.com/users/traversaro/events{/privacy}", "received_events_url": "https://api.github.com/users/traversaro/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 14, "created_at": "2016-07-09T10:37:45Z", "updated_at": "2017-12-19T21:30:40Z", "closed_at": "2017-11-13T18:44:08Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "- Debian bug report : https://bugs.debian.org/cgi-bin/bugreport.cgi?bug=830506\n- Gazebo bug report : https://bitbucket.org/osrf/gazebo/issues/2005/segfault-when-calling-ipopt-virtual-method\n\nQuoting @drdanz from the Debian bug report : \n\n> Simbody includes and links statically its private version of the ipopt library\n> in libSimTKmath.so exports its symbols.\n> \n> This causes issues when trying to link Ipopt and libSimTKmath in the same\n> executable or when an executable linked to libSimTKmath opens a plugin linked\n> to Ipopt (this happens for example when opening a plugin linked to Ipopt from\n> gazebo).\n\nAs I am able to understand from https://github.com/simbody/simbody/issues/348 , the simbody internal IpOpt is a fork of an old version of IpOpt, so using directly the system version in simbody is not a viable alternative.\nIn that case I guess not exporting the IpOpt symbols anymore (or exporting them as different symbols, for example by wrapping them in a different namespace) is the best solution, but I guess that that is technically a change of ABI, even if it is impossible for a 3rd party project to use those symbols as the internal IpOpt headers are not installed by simbody. \n\ncc @scpeters @j-rivero @aerydna @drdanz \n", "reactions": {"url": "https://api.github.com/repos/simbody/simbody/issues/510/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/simbody/simbody/issues/510/timeline", "performed_via_github_app": null}, {"url": "https://api.github.com/repos/simbody/simbody/issues/511", "repository_url": "https://api.github.com/repos/simbody/simbody", "labels_url": "https://api.github.com/repos/simbody/simbody/issues/511/labels{/name}", "comments_url": "https://api.github.com/repos/simbody/simbody/issues/511/comments", "events_url": "https://api.github.com/repos/simbody/simbody/issues/511/events", "html_url": "https://github.com/simbody/simbody/issues/511", "id": 166395896, "node_id": "MDU6SXNzdWUxNjYzOTU4OTY=", "number": 511, "title": "Simbody 3.5.3 does not include the GLUT headers if stored somewhere other than `/usr/include`.", "user": {"login": "moorepants", "id": 276007, "node_id": "MDQ6VXNlcjI3NjAwNw==", "avatar_url": "https://avatars.githubusercontent.com/u/276007?v=4", "gravatar_id": "", "url": "https://api.github.com/users/moorepants", "html_url": "https://github.com/moorepants", "followers_url": "https://api.github.com/users/moorepants/followers", "following_url": "https://api.github.com/users/moorepants/following{/other_user}", "gists_url": "https://api.github.com/users/moorepants/gists{/gist_id}", "starred_url": "https://api.github.com/users/moorepants/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/moorepants/subscriptions", "organizations_url": "https://api.github.com/users/moorepants/orgs", "repos_url": "https://api.github.com/users/moorepants/repos", "events_url": "https://api.github.com/users/moorepants/events{/privacy}", "received_events_url": "https://api.github.com/users/moorepants/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2016-07-19T18:04:40Z", "updated_at": "2018-01-09T00:54:45Z", "closed_at": null, "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Note from @chrisdembia:\n\n> i think this is a bug in simbody's cmake. the following file should have `include_directories(${GLUT_INCLUDE_DIR})`: https://github.com/simbody/simbody/blob/3dd798950b7cd8ba83e9338f0875c9647c8d09d4/Simbody/Visualizer/simbody-visualizer/CMakeLists.txt\n> i think we have gotten away without that b/c usually GLUT headers are in `/usr/include`\n\nYou can see the failure in action here:\n\nhttps://circleci.com/gh/conda-forge/staged-recipes/6341\n", "reactions": {"url": "https://api.github.com/repos/simbody/simbody/issues/511/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/simbody/simbody/issues/511/timeline", "performed_via_github_app": null}, {"url": "https://api.github.com/repos/simbody/simbody/issues/512", "repository_url": "https://api.github.com/repos/simbody/simbody", "labels_url": "https://api.github.com/repos/simbody/simbody/issues/512/labels{/name}", "comments_url": "https://api.github.com/repos/simbody/simbody/issues/512/comments", "events_url": "https://api.github.com/repos/simbody/simbody/issues/512/events", "html_url": "https://github.com/simbody/simbody/issues/512", "id": 166457983, "node_id": "MDU6SXNzdWUxNjY0NTc5ODM=", "number": 512, "title": "Hard-code relative path from SimTKsimbody library to simbody-visualizer", "user": {"login": "chrisdembia", "id": 846001, "node_id": "MDQ6VXNlcjg0NjAwMQ==", "avatar_url": "https://avatars.githubusercontent.com/u/846001?v=4", "gravatar_id": "", "url": "https://api.github.com/users/chrisdembia", "html_url": "https://github.com/chrisdembia", "followers_url": "https://api.github.com/users/chrisdembia/followers", "following_url": "https://api.github.com/users/chrisdembia/following{/other_user}", "gists_url": "https://api.github.com/users/chrisdembia/gists{/gist_id}", "starred_url": "https://api.github.com/users/chrisdembia/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/chrisdembia/subscriptions", "organizations_url": "https://api.github.com/users/chrisdembia/orgs", "repos_url": "https://api.github.com/users/chrisdembia/repos", "events_url": "https://api.github.com/users/chrisdembia/events{/privacy}", "received_events_url": "https://api.github.com/users/chrisdembia/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2016-07-19T23:01:23Z", "updated_at": "2017-04-10T17:33:52Z", "closed_at": "2017-04-10T17:33:52Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "Right now, we hard-code a full path to the installed location of the simbody-visualizer; see https://github.com/simbody/simbody/pull/64. It might be better to hard-code a relative path from the SimTKsimbody library file to the simbody-visualizer executable. This would allow us to relocate the installation and still find the visualizer without setting environment variables.\n", "reactions": {"url": "https://api.github.com/repos/simbody/simbody/issues/512/reactions", "total_count": 1, "+1": 1, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/simbody/simbody/issues/512/timeline", "performed_via_github_app": null}, {"url": "https://api.github.com/repos/simbody/simbody/issues/513", "repository_url": "https://api.github.com/repos/simbody/simbody", "labels_url": "https://api.github.com/repos/simbody/simbody/issues/513/labels{/name}", "comments_url": "https://api.github.com/repos/simbody/simbody/issues/513/comments", "events_url": "https://api.github.com/repos/simbody/simbody/issues/513/events", "html_url": "https://github.com/simbody/simbody/issues/513", "id": 167338646, "node_id": "MDU6SXNzdWUxNjczMzg2NDY=", "number": 513, "title": "Errors while installing v. 3.5.3.", "user": {"login": "neildhir", "id": 5817673, "node_id": "MDQ6VXNlcjU4MTc2NzM=", "avatar_url": "https://avatars.githubusercontent.com/u/5817673?v=4", "gravatar_id": "", "url": "https://api.github.com/users/neildhir", "html_url": "https://github.com/neildhir", "followers_url": "https://api.github.com/users/neildhir/followers", "following_url": "https://api.github.com/users/neildhir/following{/other_user}", "gists_url": "https://api.github.com/users/neildhir/gists{/gist_id}", "starred_url": "https://api.github.com/users/neildhir/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/neildhir/subscriptions", "organizations_url": "https://api.github.com/users/neildhir/orgs", "repos_url": "https://api.github.com/users/neildhir/repos", "events_url": "https://api.github.com/users/neildhir/events{/privacy}", "received_events_url": "https://api.github.com/users/neildhir/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 7, "created_at": "2016-07-25T10:50:52Z", "updated_at": "2016-07-25T15:13:09Z", "closed_at": null, "author_association": "NONE", "active_lock_reason": null, "body": "Hello!\n\nJust wanted to share some errors encountered whilst trying to install v. 3.5.3 on an Ubuntu 14.04 machine. \n\nSetting the install directory to `~/simbody` and then getting as far as `ctest -j8` yields the following error:\n\n```\n.\n.\n100/101 Test  #95: GazeboReactionForceWithAppliedForceCompliant ...   Passed    9.12 sec\n101/101 Test  #58: SemiExplicitEulerIntegratorTest ................   Passed   17.11 sec\n\n99% tests passed, 1 tests failed out of 101\n\nTotal Test time (real) =  19.96 sec\n\nThe following tests FAILED:\n     88 - TestCustomConstraints (Failed)\nErrors while running CTest\n```\n\nIgnoring the above and moving onto `sudo make -j8 install` yields:\n\n```\n.\n.\n.\nBuilt target TwoPendulums\nBuilt target TimsBoxHybrid\nBuilt target UnilateralPointContactWithFriction\n[100%] [100%] Built target UnilateralPointContact\nBuilt target WristMomentArm\nInstall the project...\n-- Install configuration: \"RelWithDebInfo\"\nCMake Error at cmake_install.cmake:36 (FILE):\n  file INSTALL destination: ~/simbody/share/doc/simbody/api is not a\n  directory.\n\n\nmake: *** [install] Error 1\n```\n\nThe structure of `~/simbody` upon receiving the above error is `~/simbody/share/doc/simbody/api` -  alas the directory has been made. Interestingly this all works if the install directory is kept as `/usr/local`.\n\nThoughts and ideas?\n", "reactions": {"url": "https://api.github.com/repos/simbody/simbody/issues/513/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/simbody/simbody/issues/513/timeline", "performed_via_github_app": null}, {"url": "https://api.github.com/repos/simbody/simbody/issues/514", "repository_url": "https://api.github.com/repos/simbody/simbody", "labels_url": "https://api.github.com/repos/simbody/simbody/issues/514/labels{/name}", "comments_url": "https://api.github.com/repos/simbody/simbody/issues/514/comments", "events_url": "https://api.github.com/repos/simbody/simbody/issues/514/events", "html_url": "https://github.com/simbody/simbody/issues/514", "id": 167526128, "node_id": "MDU6SXNzdWUxNjc1MjYxMjg=", "number": 514, "title": "Public interface for calcConstraintAccelerationErrors()", "user": {"login": "chrisdembia", "id": 846001, "node_id": "MDQ6VXNlcjg0NjAwMQ==", "avatar_url": "https://avatars.githubusercontent.com/u/846001?v=4", "gravatar_id": "", "url": "https://api.github.com/users/chrisdembia", "html_url": "https://github.com/chrisdembia", "followers_url": "https://api.github.com/users/chrisdembia/followers", "following_url": "https://api.github.com/users/chrisdembia/following{/other_user}", "gists_url": "https://api.github.com/users/chrisdembia/gists{/gist_id}", "starred_url": "https://api.github.com/users/chrisdembia/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/chrisdembia/subscriptions", "organizations_url": "https://api.github.com/users/chrisdembia/orgs", "repos_url": "https://api.github.com/users/chrisdembia/repos", "events_url": "https://api.github.com/users/chrisdembia/events{/privacy}", "received_events_url": "https://api.github.com/users/chrisdembia/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2016-07-26T05:49:36Z", "updated_at": "2016-07-28T14:48:47Z", "closed_at": "2016-07-28T14:48:47Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "Right now, there is an internal method `SimbodyMatterSubsystemRep::calcConstraintAccelerationErrors()`; this method is not available to Simbody users. I'd like to add a method `SimbodyMatterSubsystem::calcConstraintAccelerationErrors()`. This would be very similar to the presence of `SimbodyMatterSubsystemRep::calcBodyAccelerationFromUDot()` and `SimbodyMatterSubsystem::calcBodyAccelerationFromUDot()`. For example, the user method would accept non-contiguous input/output Vectors.\n\nI plan to add a test case in `TestConstraints`, based on some of the tests in `TestMassMatrix` and on `testConstraintMatrices()` in `TestConstraints`.\n\nI plan to use this method in OpenSim alongside computing an implicit form of the dynamics.\n", "reactions": {"url": "https://api.github.com/repos/simbody/simbody/issues/514/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/simbody/simbody/issues/514/timeline", "performed_via_github_app": null}, {"url": "https://api.github.com/repos/simbody/simbody/issues/516", "repository_url": "https://api.github.com/repos/simbody/simbody", "labels_url": "https://api.github.com/repos/simbody/simbody/issues/516/labels{/name}", "comments_url": "https://api.github.com/repos/simbody/simbody/issues/516/comments", "events_url": "https://api.github.com/repos/simbody/simbody/issues/516/events", "html_url": "https://github.com/simbody/simbody/issues/516", "id": 167945937, "node_id": "MDU6SXNzdWUxNjc5NDU5Mzc=", "number": 516, "title": "Add version dependency for LAPACK in readme", "user": {"login": "jstaf", "id": 7572993, "node_id": "MDQ6VXNlcjc1NzI5OTM=", "avatar_url": "https://avatars.githubusercontent.com/u/7572993?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jstaf", "html_url": "https://github.com/jstaf", "followers_url": "https://api.github.com/users/jstaf/followers", "following_url": "https://api.github.com/users/jstaf/following{/other_user}", "gists_url": "https://api.github.com/users/jstaf/gists{/gist_id}", "starred_url": "https://api.github.com/users/jstaf/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jstaf/subscriptions", "organizations_url": "https://api.github.com/users/jstaf/orgs", "repos_url": "https://api.github.com/users/jstaf/repos", "events_url": "https://api.github.com/users/jstaf/events{/privacy}", "received_events_url": "https://api.github.com/users/jstaf/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 9, "created_at": "2016-07-27T20:15:28Z", "updated_at": "2016-07-29T19:00:37Z", "closed_at": null, "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "I've compiled OpenSim 3.3 with Simbody 3.5.3 on CentOS 6. Anyhow number of `analyze` (OpenSim) runs were crashing with this extremely cryptic error (some, but not all runs would crash):\n\n```\n<rest of log appears normal>\n**    on entry to DLASCL parameter number 4 had an illegal value\n```\n\nIt turns out that this was caused by the CentOS 6 LAPACK libraries (3.2.1) being too old. Can you add a note in your Linux compilation instructions to indicate that a specific version of LAPACK is required? I ended up getting things to work by compiling against LAPACK 3.6.1.\n\nLAPACK itself can be built pretty easily like this (you then compile simbody with the -DBUILD_USING_OTHER_LAPACK option with cmake):\n\n```\ncmake ../lapack-3.6.1 -DCMAKE_INSTALL_PREFIX=../lapack-3.6.1-install/ -DCMAKE_BUILD_TYPE=RELEASE -DBUILD_SHARED_LIBS=ON\nmake -j 4\nmake install\n```\n", "reactions": {"url": "https://api.github.com/repos/simbody/simbody/issues/516/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/simbody/simbody/issues/516/timeline", "performed_via_github_app": null}, {"url": "https://api.github.com/repos/simbody/simbody/issues/519", "repository_url": "https://api.github.com/repos/simbody/simbody", "labels_url": "https://api.github.com/repos/simbody/simbody/issues/519/labels{/name}", "comments_url": "https://api.github.com/repos/simbody/simbody/issues/519/comments", "events_url": "https://api.github.com/repos/simbody/simbody/issues/519/events", "html_url": "https://github.com/simbody/simbody/issues/519", "id": 168846265, "node_id": "MDU6SXNzdWUxNjg4NDYyNjU=", "number": 519, "title": "convertRotationToQuaternion flips the sign of the quaternion elements", "user": {"login": "mitkof6", "id": 4024976, "node_id": "MDQ6VXNlcjQwMjQ5NzY=", "avatar_url": "https://avatars.githubusercontent.com/u/4024976?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mitkof6", "html_url": "https://github.com/mitkof6", "followers_url": "https://api.github.com/users/mitkof6/followers", "following_url": "https://api.github.com/users/mitkof6/following{/other_user}", "gists_url": "https://api.github.com/users/mitkof6/gists{/gist_id}", "starred_url": "https://api.github.com/users/mitkof6/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mitkof6/subscriptions", "organizations_url": "https://api.github.com/users/mitkof6/orgs", "repos_url": "https://api.github.com/users/mitkof6/repos", "events_url": "https://api.github.com/users/mitkof6/events{/privacy}", "received_events_url": "https://api.github.com/users/mitkof6/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 15, "created_at": "2016-08-02T10:03:16Z", "updated_at": "2021-04-01T15:08:47Z", "closed_at": "2021-04-01T15:08:47Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "It seems that in some cases almost identical Euler angles are reproduced by quaternion with flip signs. \n\nFor example:\n\n [0.003 -0.803  0.588 -0.099] ->  [173.508  9.350  72.959]\n [0.003  0.803  -0.588  0.099] -> [ 172.953  8.941  72.979]\n\nIn case that someone is calculating numerical derivatives, will get large values because of the sign change. I find that when I use the following implementation I avoid this kind of problem when I have to convert a rotation matrix to quaternion representation.\n\n```\nSimTK::Quaternion convertMatrixToQuaternion(const SimTK::Rotation & R)\n{\n```\n\n```\n    double qw, qx, qy, qz;\n    double tr = R[0][0] + R[1][1] + R[2][2];\n    if (tr > 0)\n    {\n        double S = sqrt(tr + 1.0) * 2; // S=4*qw\n        qw = 0.25 * S;\n        qx = (R[2][1] - R[1][2]) / S;\n        qy = (R[0][2] - R[2][0]) / S;\n        qz = (R[1][0] - R[0][1]) / S;\n    }\n    else if ((R[0][0] > R[1][1]) && (R[0][0] > R[2][2]))\n    {\n        double S = sqrt(1.0 + R[0][0] - R[1][1] - R[2][2]) * 2; // S=4*qx\n        qw = (R[2][1] - R[1][2]) / S;\n        qx = 0.25 * S;\n        qy = (R[0][1] + R[1][0]) / S;\n        qz = (R[0][2] + R[2][0]) / S;\n    }\n    else if (R[1][1] > R[2][2])\n    {\n        double S = sqrt(1.0 + R[1][1] - R[0][0] - R[2][2]) * 2; // S=4*qy\n        qw = (R[0][2] - R[2][0]) / S;\n        qx = (R[0][1] + R[1][0]) / S;\n        qy = 0.25 * S;\n        qz = (R[1][2] + R[2][1]) / S;\n    }\n    else\n    {\n        double S = sqrt(1.0 + R[2][2] - R[0][0] - R[1][1]) * 2; // S=4*qz\n        qw = (R[1][0] - R[0][1]) / S;\n        qx = (R[0][2] + R[2][0]) / S;\n        qy = (R[1][2] + R[2][1]) / S;\n        qz = 0.25 * S;\n    }\n    SimTK::Quaternion q(qw, qx, qy, qz);\n    q.normalize();\n```\n\n```\n    return q;\n} \n```\n", "reactions": {"url": "https://api.github.com/repos/simbody/simbody/issues/519/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/simbody/simbody/issues/519/timeline", "performed_via_github_app": null}, {"url": "https://api.github.com/repos/simbody/simbody/issues/520", "repository_url": "https://api.github.com/repos/simbody/simbody", "labels_url": "https://api.github.com/repos/simbody/simbody/issues/520/labels{/name}", "comments_url": "https://api.github.com/repos/simbody/simbody/issues/520/comments", "events_url": "https://api.github.com/repos/simbody/simbody/issues/520/events", "html_url": "https://github.com/simbody/simbody/issues/520", "id": 169303218, "node_id": "MDU6SXNzdWUxNjkzMDMyMTg=", "number": 520, "title": "Simbody CMAES Optimizer get stuck for high dimension problem", "user": {"login": "mitkof6", "id": 4024976, "node_id": "MDQ6VXNlcjQwMjQ5NzY=", "avatar_url": "https://avatars.githubusercontent.com/u/4024976?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mitkof6", "html_url": "https://github.com/mitkof6", "followers_url": "https://api.github.com/users/mitkof6/followers", "following_url": "https://api.github.com/users/mitkof6/following{/other_user}", "gists_url": "https://api.github.com/users/mitkof6/gists{/gist_id}", "starred_url": "https://api.github.com/users/mitkof6/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mitkof6/subscriptions", "organizations_url": "https://api.github.com/users/mitkof6/orgs", "repos_url": "https://api.github.com/users/mitkof6/repos", "events_url": "https://api.github.com/users/mitkof6/events{/privacy}", "received_events_url": "https://api.github.com/users/mitkof6/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 13, "created_at": "2016-08-04T06:50:47Z", "updated_at": "2016-12-06T23:25:07Z", "closed_at": null, "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "I am trying to perform Anderson F.C., el al., A Dynamic Optimization Solution for Vertical Jumping, and to find a solution through optimization. There is something that me and some students want to test. I took a code written from Carmichael and adapted it so I can have the same criterion as in the original paper. I choose CMAES, because the other optimization algorithms does not find a good solution (local minimum). The source code can be downloaded from [github](https://github.com/mitkof6/skyjump) and it uses OpenSim3.3.\n\nIn my implementation I have 24 muscles and I also choose the number of control nodes per muscle (so I can find the muscle control signal). When I have 9 control points I have 24 \\* 9 = 216 parameters and CMAES, initializes and runs normally. I wanted to add more control points and when I set p > 10 CMAES gets stuck in the initialization, and the objective function is not called at all. Is this a limitation to the algorithm?\n\nAlso, because I am lazy sometimes, I find that brute force can give you a good solution and does not get stuck in local minimum. Are you interested in a pure random optimization as an alternative algorithm to compliment Simbody optimization algorithms?\n", "reactions": {"url": "https://api.github.com/repos/simbody/simbody/issues/520/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/simbody/simbody/issues/520/timeline", "performed_via_github_app": null}, {"url": "https://api.github.com/repos/simbody/simbody/issues/522", "repository_url": "https://api.github.com/repos/simbody/simbody", "labels_url": "https://api.github.com/repos/simbody/simbody/issues/522/labels{/name}", "comments_url": "https://api.github.com/repos/simbody/simbody/issues/522/comments", "events_url": "https://api.github.com/repos/simbody/simbody/issues/522/events", "html_url": "https://github.com/simbody/simbody/issues/522", "id": 174106402, "node_id": "MDU6SXNzdWUxNzQxMDY0MDI=", "number": 522, "title": "Some simbody 3.5.3 tests fail on Ubuntu 14.04 LTS", "user": {"login": "neildhir", "id": 5817673, "node_id": "MDQ6VXNlcjU4MTc2NzM=", "avatar_url": "https://avatars.githubusercontent.com/u/5817673?v=4", "gravatar_id": "", "url": "https://api.github.com/users/neildhir", "html_url": "https://github.com/neildhir", "followers_url": "https://api.github.com/users/neildhir/followers", "following_url": "https://api.github.com/users/neildhir/following{/other_user}", "gists_url": "https://api.github.com/users/neildhir/gists{/gist_id}", "starred_url": "https://api.github.com/users/neildhir/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/neildhir/subscriptions", "organizations_url": "https://api.github.com/users/neildhir/orgs", "repos_url": "https://api.github.com/users/neildhir/repos", "events_url": "https://api.github.com/users/neildhir/events{/privacy}", "received_events_url": "https://api.github.com/users/neildhir/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 8, "created_at": "2016-08-30T19:39:37Z", "updated_at": "2016-10-14T21:56:30Z", "closed_at": null, "author_association": "NONE", "active_lock_reason": null, "body": "Following \n\n`ctest -j8`\n\nwe get\n\n```\n98% tests passed, 5 tests failed out of 202\n\nTotal Test time (real) =  32.44 sec\n\nThe following tests FAILED:\n    162 - TestReverseMobilizersStatic (Failed)\n    174 - GazeboReactionForceWithAppliedForceRigidStatic (Failed)\n    175 - TestCustomConstraints (Failed)\n    176 - TestCustomConstraintsStatic (Failed)\n    190 - GazeboReactionForceWithAppliedForceCompliantStatic (Failed)\nErrors while running CTest\n```\n\nThis is on a Ubuntu machine running 14.04 with `cmake version 3.2.2`. \n", "reactions": {"url": "https://api.github.com/repos/simbody/simbody/issues/522/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/simbody/simbody/issues/522/timeline", "performed_via_github_app": null}, {"url": "https://api.github.com/repos/simbody/simbody/issues/523", "repository_url": "https://api.github.com/repos/simbody/simbody", "labels_url": "https://api.github.com/repos/simbody/simbody/issues/523/labels{/name}", "comments_url": "https://api.github.com/repos/simbody/simbody/issues/523/comments", "events_url": "https://api.github.com/repos/simbody/simbody/issues/523/events", "html_url": "https://github.com/simbody/simbody/issues/523", "id": 178180992, "node_id": "MDU6SXNzdWUxNzgxODA5OTI=", "number": 523, "title": "Compilation failure with macOS 10.12 SDK", "user": {"login": "scpeters", "id": 3650755, "node_id": "MDQ6VXNlcjM2NTA3NTU=", "avatar_url": "https://avatars.githubusercontent.com/u/3650755?v=4", "gravatar_id": "", "url": "https://api.github.com/users/scpeters", "html_url": "https://github.com/scpeters", "followers_url": "https://api.github.com/users/scpeters/followers", "following_url": "https://api.github.com/users/scpeters/following{/other_user}", "gists_url": "https://api.github.com/users/scpeters/gists{/gist_id}", "starred_url": "https://api.github.com/users/scpeters/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/scpeters/subscriptions", "organizations_url": "https://api.github.com/users/scpeters/orgs", "repos_url": "https://api.github.com/users/scpeters/repos", "events_url": "https://api.github.com/users/scpeters/events{/privacy}", "received_events_url": "https://api.github.com/users/scpeters/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": {"login": "chrisdembia", "id": 846001, "node_id": "MDQ6VXNlcjg0NjAwMQ==", "avatar_url": "https://avatars.githubusercontent.com/u/846001?v=4", "gravatar_id": "", "url": "https://api.github.com/users/chrisdembia", "html_url": "https://github.com/chrisdembia", "followers_url": "https://api.github.com/users/chrisdembia/followers", "following_url": "https://api.github.com/users/chrisdembia/following{/other_user}", "gists_url": "https://api.github.com/users/chrisdembia/gists{/gist_id}", "starred_url": "https://api.github.com/users/chrisdembia/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/chrisdembia/subscriptions", "organizations_url": "https://api.github.com/users/chrisdembia/orgs", "repos_url": "https://api.github.com/users/chrisdembia/repos", "events_url": "https://api.github.com/users/chrisdembia/events{/privacy}", "received_events_url": "https://api.github.com/users/chrisdembia/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "chrisdembia", "id": 846001, "node_id": "MDQ6VXNlcjg0NjAwMQ==", "avatar_url": "https://avatars.githubusercontent.com/u/846001?v=4", "gravatar_id": "", "url": "https://api.github.com/users/chrisdembia", "html_url": "https://github.com/chrisdembia", "followers_url": "https://api.github.com/users/chrisdembia/followers", "following_url": "https://api.github.com/users/chrisdembia/following{/other_user}", "gists_url": "https://api.github.com/users/chrisdembia/gists{/gist_id}", "starred_url": "https://api.github.com/users/chrisdembia/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/chrisdembia/subscriptions", "organizations_url": "https://api.github.com/users/chrisdembia/orgs", "repos_url": "https://api.github.com/users/chrisdembia/repos", "events_url": "https://api.github.com/users/chrisdembia/events{/privacy}", "received_events_url": "https://api.github.com/users/chrisdembia/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 17, "created_at": "2016-09-20T21:10:08Z", "updated_at": "2016-10-02T03:59:48Z", "closed_at": "2016-09-22T22:51:10Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "A build failure of simbody 3.5.3 was reported in https://github.com/osrf/homebrew-simulation/issues/135 ([full details here](https://gist.github.com/bwithbroe/9247eaf889cdaf3e0a97f9df27682af6)) that can be summarized with the following error message:\n\n```\nIn file included from /tmp/simbody-20160920-28673-1o5ma3f/simbody-Simbody-3.5.3/SimTKcommon/src/Timing.cpp:33:\n/tmp/simbody-20160920-28673-1o5ma3f/simbody-Simbody-3.5.3/\nSimTKcommon/./include/SimTKcommon/internal/Timing.h:88:18:\nerror: typedef redefinition with different types ('long' vs 'enum clockid_t')\n    typedef long clockid_t;\n                 ^\n/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/\nDeveloper/SDKs/MacOSX10.12.sdk/usr/include/time.h:171:3: \nnote: previous definition is here\n} clockid_t;\n^\n```\n\nThey were using macOS 10.11 but with the macOS 10.12 SDK, which appears to define the `clockid_t` type. This will probably cause the same build failures on macOS 10.12 when it is released. Thanks to @bwithbroe and @uframer for reporting this issue.\n", "reactions": {"url": "https://api.github.com/repos/simbody/simbody/issues/523/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/simbody/simbody/issues/523/timeline", "performed_via_github_app": null}, {"url": "https://api.github.com/repos/simbody/simbody/issues/525", "repository_url": "https://api.github.com/repos/simbody/simbody", "labels_url": "https://api.github.com/repos/simbody/simbody/issues/525/labels{/name}", "comments_url": "https://api.github.com/repos/simbody/simbody/issues/525/comments", "events_url": "https://api.github.com/repos/simbody/simbody/issues/525/events", "html_url": "https://github.com/simbody/simbody/issues/525", "id": 180185909, "node_id": "MDU6SXNzdWUxODAxODU5MDk=", "number": 525, "title": "Compiler warning in SimTKCommon/internal/NTraits.h", "user": {"login": "klshrinidhi", "id": 1181669, "node_id": "MDQ6VXNlcjExODE2Njk=", "avatar_url": "https://avatars.githubusercontent.com/u/1181669?v=4", "gravatar_id": "", "url": "https://api.github.com/users/klshrinidhi", "html_url": "https://github.com/klshrinidhi", "followers_url": "https://api.github.com/users/klshrinidhi/followers", "following_url": "https://api.github.com/users/klshrinidhi/following{/other_user}", "gists_url": "https://api.github.com/users/klshrinidhi/gists{/gist_id}", "starred_url": "https://api.github.com/users/klshrinidhi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/klshrinidhi/subscriptions", "organizations_url": "https://api.github.com/users/klshrinidhi/orgs", "repos_url": "https://api.github.com/users/klshrinidhi/repos", "events_url": "https://api.github.com/users/klshrinidhi/events{/privacy}", "received_events_url": "https://api.github.com/users/klshrinidhi/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2016-09-29T23:12:20Z", "updated_at": "2016-09-29T23:12:20Z", "closed_at": null, "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Following line is causing `reference to a dereferenced null pointer is undefined behavior` warning: \n\n``` c++\nstatic T&       imag(T&)         { assert(false); return *reinterpret_cast<T*>(0); }\n```\n", "reactions": {"url": "https://api.github.com/repos/simbody/simbody/issues/525/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/simbody/simbody/issues/525/timeline", "performed_via_github_app": null}, {"url": "https://api.github.com/repos/simbody/simbody/issues/531", "repository_url": "https://api.github.com/repos/simbody/simbody", "labels_url": "https://api.github.com/repos/simbody/simbody/issues/531/labels{/name}", "comments_url": "https://api.github.com/repos/simbody/simbody/issues/531/comments", "events_url": "https://api.github.com/repos/simbody/simbody/issues/531/events", "html_url": "https://github.com/simbody/simbody/issues/531", "id": 181793335, "node_id": "MDU6SXNzdWUxODE3OTMzMzU=", "number": 531, "title": "README typo [hyperminor issue]", "user": {"login": "kidzik", "id": 981858, "node_id": "MDQ6VXNlcjk4MTg1OA==", "avatar_url": "https://avatars.githubusercontent.com/u/981858?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kidzik", "html_url": "https://github.com/kidzik", "followers_url": "https://api.github.com/users/kidzik/followers", "following_url": "https://api.github.com/users/kidzik/following{/other_user}", "gists_url": "https://api.github.com/users/kidzik/gists{/gist_id}", "starred_url": "https://api.github.com/users/kidzik/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kidzik/subscriptions", "organizations_url": "https://api.github.com/users/kidzik/orgs", "repos_url": "https://api.github.com/users/kidzik/repos", "events_url": "https://api.github.com/users/kidzik/events{/privacy}", "received_events_url": "https://api.github.com/users/kidzik/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2016-10-08T00:40:56Z", "updated_at": "2016-10-08T18:23:07Z", "closed_at": "2016-10-08T18:23:07Z", "author_association": "NONE", "active_lock_reason": null, "body": "In the ubuntu installation part there is\n\n```\nsudo apt-get install libsimbody-dev libsimbody-doc\n```\n\nshould be\n\n```\nsudo apt-get install libsimbody-dev simbody-doc\n```\n", "reactions": {"url": "https://api.github.com/repos/simbody/simbody/issues/531/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/simbody/simbody/issues/531/timeline", "performed_via_github_app": null}, {"url": "https://api.github.com/repos/simbody/simbody/issues/535", "repository_url": "https://api.github.com/repos/simbody/simbody", "labels_url": "https://api.github.com/repos/simbody/simbody/issues/535/labels{/name}", "comments_url": "https://api.github.com/repos/simbody/simbody/issues/535/comments", "events_url": "https://api.github.com/repos/simbody/simbody/issues/535/events", "html_url": "https://github.com/simbody/simbody/issues/535", "id": 185020404, "node_id": "MDU6SXNzdWUxODUwMjA0MDQ=", "number": 535, "title": "Add conda as an install option", "user": {"login": "moorepants", "id": 276007, "node_id": "MDQ6VXNlcjI3NjAwNw==", "avatar_url": "https://avatars.githubusercontent.com/u/276007?v=4", "gravatar_id": "", "url": "https://api.github.com/users/moorepants", "html_url": "https://github.com/moorepants", "followers_url": "https://api.github.com/users/moorepants/followers", "following_url": "https://api.github.com/users/moorepants/following{/other_user}", "gists_url": "https://api.github.com/users/moorepants/gists{/gist_id}", "starred_url": "https://api.github.com/users/moorepants/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/moorepants/subscriptions", "organizations_url": "https://api.github.com/users/moorepants/orgs", "repos_url": "https://api.github.com/users/moorepants/repos", "events_url": "https://api.github.com/users/moorepants/events{/privacy}", "received_events_url": "https://api.github.com/users/moorepants/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 10, "created_at": "2016-10-25T05:12:29Z", "updated_at": "2017-01-30T02:32:37Z", "closed_at": "2017-01-30T02:32:37Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "I've built Simbody for [conda](http://conda.pydata.org), a cross platform package manager, through the [conda-forge](https://conda-forge.github.io/) build system. Now, anyone one using Windows, Mac, or Linux can easily install binaries of Simbody if they have conda installed, using identical  commands. This shows how to install and run one of the examples:\n\n```\n$ conda config --add channels conda-forge\n$ conda install simbody\nFetching package metadata ...........\nSolving package specifications: ..........\n\nPackage plan for installation in environment /home/moorepants/miniconda3/envs/simbody:\n\nThe following NEW packages will be INSTALLED:\n\n    blas:        1.1-openblas            conda-forge\n    freeglut:    2.8.1-0                            \n    libgfortran: 3.0.0-1                            \n    openblas:    0.2.18-5                conda-forge\n    simbody:     3.5.3-blas_openblas_201 conda-forge [blas_openblas]\n\nLinking packages ...\n[      COMPLETE      ]|#######################################################################################################################################################################################| 100%\n$ $CONDA_PREFIX/lib/simbody/examples/ExampleGears\n```\n\nCompiling custom code that links to Simbody simply needs to include `$CONDA_PREFIX/lib` and `$CONDA_PREFIX/include/simbody` in the (c)make files. For example, the example in the readme can be run like so:\n\n```\n$ cmake .\n-- Configuring done\n-- Generating done\n-- Build files have been written to: /home/moorepants/simbody\n$ make\nScanning dependencies of target pendulum\n[ 50%] Building CXX object CMakeFiles/pendulum.dir/pendulum.cpp.o\n[100%] Linking CXX executable pendulum\n[100%] Built target pendulum\n$ ./pendulum \n```\n\nWith CMakeLists.txt as something like:\n\n```\ncmake_minimum_required(VERSION 2.8)\nproject(simbody_pendulum)\n\nadd_executable(pendulum pendulum.cpp)\n\ninclude_directories($ENV{CONDA_PREFIX}/include/simbody)\nlink_directories($ENV{CONDA_PREFIX}/lib)\ntarget_link_libraries(pendulum\n    $ENV{CONDA_PREFIX}/lib/libSimTKsimbody.so\n    $ENV{CONDA_PREFIX}/lib/libSimTKcommon.so\n    $ENV{CONDA_PREFIX}/lib/libSimTKmath.so)\n```\n\nand `pendulum.cpp` with the C++ source code for the example.\n\nThe build recipe is here: https://github.com/conda-forge/simbody-feedstock and the binaries are found here: https://anaconda.org/conda-forge/simbody/.\n\nMaybe you all would like to add this as an install option to your documentation?\n\nNote that I'm still working out a minor issue with the Windows build: https://github.com/conda-forge/simbody-feedstock/pull/4\n", "reactions": {"url": "https://api.github.com/repos/simbody/simbody/issues/535/reactions", "total_count": 2, "+1": 2, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/simbody/simbody/issues/535/timeline", "performed_via_github_app": null}, {"url": "https://api.github.com/repos/simbody/simbody/issues/537", "repository_url": "https://api.github.com/repos/simbody/simbody", "labels_url": "https://api.github.com/repos/simbody/simbody/issues/537/labels{/name}", "comments_url": "https://api.github.com/repos/simbody/simbody/issues/537/comments", "events_url": "https://api.github.com/repos/simbody/simbody/issues/537/events", "html_url": "https://github.com/simbody/simbody/issues/537", "id": 189198073, "node_id": "MDU6SXNzdWUxODkxOTgwNzM=", "number": 537, "title": "MultibodyGraphMaker incorrectly handles an intermediate massless body", "user": {"login": "aseth1", "id": 6494122, "node_id": "MDQ6VXNlcjY0OTQxMjI=", "avatar_url": "https://avatars.githubusercontent.com/u/6494122?v=4", "gravatar_id": "", "url": "https://api.github.com/users/aseth1", "html_url": "https://github.com/aseth1", "followers_url": "https://api.github.com/users/aseth1/followers", "following_url": "https://api.github.com/users/aseth1/following{/other_user}", "gists_url": "https://api.github.com/users/aseth1/gists{/gist_id}", "starred_url": "https://api.github.com/users/aseth1/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/aseth1/subscriptions", "organizations_url": "https://api.github.com/users/aseth1/orgs", "repos_url": "https://api.github.com/users/aseth1/repos", "events_url": "https://api.github.com/users/aseth1/events{/privacy}", "received_events_url": "https://api.github.com/users/aseth1/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 52267851, "node_id": "MDU6TGFiZWw1MjI2Nzg1MQ==", "url": "https://api.github.com/repos/simbody/simbody/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": {"login": "sherm1", "id": 4088016, "node_id": "MDQ6VXNlcjQwODgwMTY=", "avatar_url": "https://avatars.githubusercontent.com/u/4088016?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sherm1", "html_url": "https://github.com/sherm1", "followers_url": "https://api.github.com/users/sherm1/followers", "following_url": "https://api.github.com/users/sherm1/following{/other_user}", "gists_url": "https://api.github.com/users/sherm1/gists{/gist_id}", "starred_url": "https://api.github.com/users/sherm1/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sherm1/subscriptions", "organizations_url": "https://api.github.com/users/sherm1/orgs", "repos_url": "https://api.github.com/users/sherm1/repos", "events_url": "https://api.github.com/users/sherm1/events{/privacy}", "received_events_url": "https://api.github.com/users/sherm1/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "sherm1", "id": 4088016, "node_id": "MDQ6VXNlcjQwODgwMTY=", "avatar_url": "https://avatars.githubusercontent.com/u/4088016?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sherm1", "html_url": "https://github.com/sherm1", "followers_url": "https://api.github.com/users/sherm1/followers", "following_url": "https://api.github.com/users/sherm1/following{/other_user}", "gists_url": "https://api.github.com/users/sherm1/gists{/gist_id}", "starred_url": "https://api.github.com/users/sherm1/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sherm1/subscriptions", "organizations_url": "https://api.github.com/users/sherm1/orgs", "repos_url": "https://api.github.com/users/sherm1/repos", "events_url": "https://api.github.com/users/sherm1/events{/privacy}", "received_events_url": "https://api.github.com/users/sherm1/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 3, "created_at": "2016-11-14T19:11:08Z", "updated_at": "2017-12-01T02:11:49Z", "closed_at": "2017-12-01T02:11:49Z", "author_association": "NONE", "active_lock_reason": null, "body": "This issue was first raised in OpenSim [here](https://github.com/opensim-org/opensim-core/issues/1388)\r\n\r\nThe translation of a body (pelvis) is defined by two sliders. The first slider mobilizes a massless body and the second slider mobilizes the full mass of the pelvis. Two massive bodies (right and left thighs) mobilized by pins are connected to the pelvis.  \r\n\r\nThe MultigraphMaker introduces two FreeJoints and two slave bodies (a pair for each thigh)  which seems incorrect :\r\n```\r\nMULTIBODY GRAPH\r\n---------------\r\n\r\n10 BODIES:\r\n 0  0: ground mass=inf mob=-1 master=-1\r\n  jointsAsParent=[ 0 7 8]         jointsAsChild=[]        slaves=[]\r\n 1  1: Platform mass=1 mob=0 master=-1\r\n  jointsAsParent=[ 1]     jointsAsChild=[ 0]      slaves=[]\r\n 2  2: Pelvis_massless mass=0 mob=1 master=-1\r\n  jointsAsParent=[ 2]     jointsAsChild=[ 1]      slaves=[]\r\n 3  3: Pelvis mass=0.5 mob=2 master=-1\r\n  jointsAsParent=[ 3 4]   jointsAsChild=[ 2]      slaves=[]\r\n 4  1: LeftThigh mass=0.05 mob=3 master=-1\r\n  jointsAsParent=[ 5]     jointsAsChild=[ 3 7]    slaves=[ 8]\r\n 5  1: RightThigh mass=0.05 mob=5 master=-1\r\n  jointsAsParent=[ 6]     jointsAsChild=[ 4 8]    slaves=[ 9]\r\n 6  2: LeftShank mass=0.05 mob=4 master=-1\r\n  jointsAsParent=[]       jointsAsChild=[ 5]      slaves=[]\r\n 7  2: RightShank mass=0.05 mob=6 master=-1\r\n  jointsAsParent=[]       jointsAsChild=[ 6]      slaves=[]\r\n 8  4: #LeftThigh_slave_1 mass=nan mob=7 master=4\r\n  jointsAsParent=[]       jointsAsChild=[ 3]      slaves=[]\r\n 9  4: #RightThigh_slave_1 mass=nan mob=8 master=5\r\n  jointsAsParent=[]       jointsAsChild=[ 4]      slaves=[]\r\n\r\n9 JOINTS:\r\n 0  0:     PlatformToGround               ground->Platform              WeldJoint loopc=-1\r\n 1  1: PelvisMasslessToPlatform             Platform->Pelvis_massless      SliderJoint loopc=-1\r\n 2  2: PelvisToPelvisMassless      Pelvis_massless->Pelvis               SliderJoint loopc=-1\r\n 3  7:       LThighToPelvis               Pelvis->LeftThigh              PinJoint loopc=-1\r\n 4  8:       RThighToPelvis               Pelvis->RightThigh             PinJoint loopc=-1\r\n 5  4:       LShankToLThigh            LeftThigh->LeftShank              PinJoint loopc=-1\r\n 6  6:       RShankToRThigh           RightThigh->RightShank             PinJoint loopc=-1\r\n 7  3:    #ground_LeftThigh               ground->LeftThigh             FreeJoint loopc=-1  ADDED BASE JOINT\r\n 8  5:   #ground_RightThigh               ground->RightThigh            FreeJoint loopc=-1  ADDED BASE JOINT\r\n\r\n9 MOBILIZERS:\r\n 0  1:     PlatformToGround               ground->Platform              WeldJoint  0\r\n 1  2: PelvisMasslessToPlatform             Platform->Pelvis_massless      SliderJoint  1\r\n 2  3: PelvisToPelvisMassless      Pelvis_massless->Pelvis               SliderJoint  2\r\n 3  1:    #ground_LeftThigh               ground->LeftThigh             FreeJoint  7\r\n 4  2:       LShankToLThigh            LeftThigh->LeftShank              PinJoint  5\r\n 5  1:   #ground_RightThigh               ground->RightThigh            FreeJoint  8\r\n 6  2:       RShankToRThigh           RightThigh->RightShank             PinJoint  6\r\n 7  4:       LThighToPelvis               Pelvis->#LeftThigh_slave_1     PinJoint  3\r\n 8  4:       RThighToPelvis               Pelvis->#RightThigh_slave_1    PinJoint  4\r\n\r\n0 LOOP CONSTRAINTS:\r\n\r\n----- END OF MULTIBODY GRAPH.\r\n```\r\n\r\nTo verify that the issue is related to the initial massless slider body,  I added mass to the first slider body to yield the expected graph:\r\n```\r\n7 JOINTS:\r\n 0  0:     PlatformToGround               ground->Platform              WeldJoint loopc=-1\r\n 1  1: PelvisMasslessToPlatform             Platform->Pelvis_massless      SliderJoint loopc=-1\r\n 2  2: PelvisToPelvisMassless      Pelvis_massless->Pelvis               SliderJoint loopc=-1\r\n 3  3:       LThighToPelvis               Pelvis->LeftThigh              PinJoint loopc=-1\r\n 4  4:       RThighToPelvis               Pelvis->RightThigh             PinJoint loopc=-1\r\n 5  5:       LShankToLThigh            LeftThigh->LeftShank              PinJoint loopc=-1\r\n 6  6:       RShankToRThigh           RightThigh->RightShank             PinJoint loopc=-1\r\n\r\n7 MOBILIZERS:\r\n 0  1:     PlatformToGround               ground->Platform              WeldJoint  0\r\n 1  2: PelvisMasslessToPlatform             Platform->Pelvis_massless      SliderJoint  1\r\n 2  3: PelvisToPelvisMassless      Pelvis_massless->Pelvis               SliderJoint  2\r\n 3  4:       LThighToPelvis               Pelvis->LeftThigh              PinJoint  3\r\n 4  4:       RThighToPelvis               Pelvis->RightThigh             PinJoint  4\r\n 5  5:       LShankToLThigh            LeftThigh->LeftShank              PinJoint  5\r\n 6  5:       RShankToRThigh           RightThigh->RightShank             PinJoint  6\r\n\r\n0 LOOP CONSTRAINTS:\r\n```\r\n", "reactions": {"url": "https://api.github.com/repos/simbody/simbody/issues/537/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/simbody/simbody/issues/537/timeline", "performed_via_github_app": null}, {"url": "https://api.github.com/repos/simbody/simbody/issues/538", "repository_url": "https://api.github.com/repos/simbody/simbody", "labels_url": "https://api.github.com/repos/simbody/simbody/issues/538/labels{/name}", "comments_url": "https://api.github.com/repos/simbody/simbody/issues/538/comments", "events_url": "https://api.github.com/repos/simbody/simbody/issues/538/events", "html_url": "https://github.com/simbody/simbody/issues/538", "id": 190859151, "node_id": "MDU6SXNzdWUxOTA4NTkxNTE=", "number": 538, "title": "const Matrix methods should return const views", "user": {"login": "sherm1", "id": 4088016, "node_id": "MDQ6VXNlcjQwODgwMTY=", "avatar_url": "https://avatars.githubusercontent.com/u/4088016?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sherm1", "html_url": "https://github.com/sherm1", "followers_url": "https://api.github.com/users/sherm1/followers", "following_url": "https://api.github.com/users/sherm1/following{/other_user}", "gists_url": "https://api.github.com/users/sherm1/gists{/gist_id}", "starred_url": "https://api.github.com/users/sherm1/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sherm1/subscriptions", "organizations_url": "https://api.github.com/users/sherm1/orgs", "repos_url": "https://api.github.com/users/sherm1/repos", "events_url": "https://api.github.com/users/sherm1/events{/privacy}", "received_events_url": "https://api.github.com/users/sherm1/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 52267851, "node_id": "MDU6TGFiZWw1MjI2Nzg1MQ==", "url": "https://api.github.com/repos/simbody/simbody/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}, {"id": 108217628, "node_id": "MDU6TGFiZWwxMDgyMTc2Mjg=", "url": "https://api.github.com/repos/simbody/simbody/labels/help%20wanted", "name": "help wanted", "color": "009800", "default": true, "description": null}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2016-11-21T22:51:37Z", "updated_at": "2016-11-21T22:57:43Z", "closed_at": null, "author_association": "MEMBER", "active_lock_reason": null, "body": "The return type from the const overloads of methods like `Matrix::row()` should return `const` view objects. For example, `Matrix::row() const` should have return type `const RowVectorView`. \r\n\r\nThe reason is that if the compiler-generated temporary return object is used to invoke another method, for example:\r\n```c++\r\nconst Matrix mat; \r\ndouble eij = mat.row(i)[j]; // should invoke operator[]() const\r\n```\r\n\r\nThanks to @klshrinidhi for pointing this out in opensim-org/opensim-core#1410.", "reactions": {"url": "https://api.github.com/repos/simbody/simbody/issues/538/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/simbody/simbody/issues/538/timeline", "performed_via_github_app": null}, {"url": "https://api.github.com/repos/simbody/simbody/issues/543", "repository_url": "https://api.github.com/repos/simbody/simbody", "labels_url": "https://api.github.com/repos/simbody/simbody/issues/543/labels{/name}", "comments_url": "https://api.github.com/repos/simbody/simbody/issues/543/comments", "events_url": "https://api.github.com/repos/simbody/simbody/issues/543/events", "html_url": "https://github.com/simbody/simbody/issues/543", "id": 197378677, "node_id": "MDU6SXNzdWUxOTczNzg2Nzc=", "number": 543, "title": "Segmentation fault when creating Inertia object", "user": {"login": "david-haber", "id": 1696004, "node_id": "MDQ6VXNlcjE2OTYwMDQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1696004?v=4", "gravatar_id": "", "url": "https://api.github.com/users/david-haber", "html_url": "https://github.com/david-haber", "followers_url": "https://api.github.com/users/david-haber/followers", "following_url": "https://api.github.com/users/david-haber/following{/other_user}", "gists_url": "https://api.github.com/users/david-haber/gists{/gist_id}", "starred_url": "https://api.github.com/users/david-haber/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/david-haber/subscriptions", "organizations_url": "https://api.github.com/users/david-haber/orgs", "repos_url": "https://api.github.com/users/david-haber/repos", "events_url": "https://api.github.com/users/david-haber/events{/privacy}", "received_events_url": "https://api.github.com/users/david-haber/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2016-12-23T14:31:39Z", "updated_at": "2016-12-24T20:15:28Z", "closed_at": null, "author_association": "NONE", "active_lock_reason": null, "body": "We ran into a segmentation fault when executing the following code on Debian 8.5 and Simbody 3.4 (installed from apt-get).\r\n\r\n\r\nrigid_test.cc:\r\n```\r\n#include \"Simbody.h\"\r\n\r\nint main() {\r\n  SimTK::Inertia in(1.0);\r\n  return 0;\r\n}\r\n```\r\n\r\nWe used the following compiler command:\r\n\r\n`g++ -std=c++11 -std=gnu++11 -isystem /usr/include/simbody -Wall -g -Wfatal-errors -c -o rigid_test.o rigid_test.cc\r\ng++ -L/usr/lib/ -lSimTKsimbody -lSimTKmath -lSimTKcommon  rigid_test.o lib.a -o rigid_test`\r\n\r\nand receive the following error:\r\n\r\n```\r\nRunning rigid_test: Segmentation fault\r\n../mk/Makefile.inc:65: recipe for target 'rigid_test.run' failed\r\nmake: *** [rigid_test.run] Error 139\r\n\r\n0x00007ffff6bfc401 in ?? () from /usr/lib/x86_64-linux-gnu/libSimTKcommon.so.3.4\r\n(gdb) bt\r\n#0  0x00007ffff6bfc401 in ?? () from /usr/lib/x86_64-linux-gnu/libSimTKcommon.so.3.4\r\n#1  0x00007ffff7dea9ba in call_init (l=<optimized out>, argc=argc@entry=1, argv=argv@entry=0x7fffffffe6b8, env=env@entry=0x7fffffffe6c8) at dl-init.c:78\r\n#2  0x00007ffff7deaaa3 in call_init (env=0x7fffffffe6c8, argv=0x7fffffffe6b8, argc=1, l=<optimized out>) at dl-init.c:36\r\n#3  _dl_init (main_map=0x7ffff7ffe1a8, argc=1, argv=0x7fffffffe6b8, env=0x7fffffffe6c8) at dl-init.c:126\r\n#4  0x00007ffff7ddd1ca in _dl_start_user () from /lib64/ld-linux-x86-64.so.2\r\n#5  0x0000000000000001 in ?? ()\r\n#6  0x00007fffffffe8af in ?? ()\r\n#7  0x0000000000000000 in ?? ()\r\n```\r\n\r\nOur compiler version is: g++ (Debian 4.9.2-10) 4.9.2\r\n\r\nThis code seems quite trivial so we are wondering what is going on.", "reactions": {"url": "https://api.github.com/repos/simbody/simbody/issues/543/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/simbody/simbody/issues/543/timeline", "performed_via_github_app": null}, {"url": "https://api.github.com/repos/simbody/simbody/issues/544", "repository_url": "https://api.github.com/repos/simbody/simbody", "labels_url": "https://api.github.com/repos/simbody/simbody/issues/544/labels{/name}", "comments_url": "https://api.github.com/repos/simbody/simbody/issues/544/comments", "events_url": "https://api.github.com/repos/simbody/simbody/issues/544/events", "html_url": "https://github.com/simbody/simbody/issues/544", "id": 197380314, "node_id": "MDU6SXNzdWUxOTczODAzMTQ=", "number": 544, "title": "Segmentation fault in realizeTopology", "user": {"login": "david-haber", "id": 1696004, "node_id": "MDQ6VXNlcjE2OTYwMDQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1696004?v=4", "gravatar_id": "", "url": "https://api.github.com/users/david-haber", "html_url": "https://github.com/david-haber", "followers_url": "https://api.github.com/users/david-haber/followers", "following_url": "https://api.github.com/users/david-haber/following{/other_user}", "gists_url": "https://api.github.com/users/david-haber/gists{/gist_id}", "starred_url": "https://api.github.com/users/david-haber/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/david-haber/subscriptions", "organizations_url": "https://api.github.com/users/david-haber/orgs", "repos_url": "https://api.github.com/users/david-haber/repos", "events_url": "https://api.github.com/users/david-haber/events{/privacy}", "received_events_url": "https://api.github.com/users/david-haber/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2016-12-23T14:43:12Z", "updated_at": "2016-12-23T21:20:49Z", "closed_at": null, "author_association": "NONE", "active_lock_reason": null, "body": "We get a segmentation fault in realizeTopology() when executing the following code on Debian 8.5 and with Simbody 3.5.3 built from source.\r\n\r\nminimum_example0_test.cc:\r\n\r\n```\r\n#include \"Simbody.h\"\r\n\r\n#include <cstdio>\r\n\r\n#include \"dcmotor_simplified.hh\"\r\n\r\nint main() {\r\n    SimTK::MultibodySystem        system;\r\n    SimTK::SimbodyMatterSubsystem matter(system);\r\n    SimTK::GeneralForceSubsystem  forces(system);\r\n\r\n    SimTK::MobilizedBody::Pin rotor(matter.Ground(), SimTK::Body::Rigid());\r\n\r\n    std::cout << \"Before motor\" << std::endl;\r\n    DCMotorTest motor(forces, rotor);\r\n\r\n    std::cout << \"Before realizeTopology\" << std::endl;\r\n    system.realizeTopology();\r\n\r\n    std::cout << \"After realizeTopology\" << std::endl;\r\n\r\n    return 0;\r\n}\r\n```\r\n\r\ndcmotor_simplified.hh:\r\n\r\n```\r\n#pragma once\r\n\r\n#include \"Simbody.h\"\r\n\r\nclass DCMotorTest : public SimTK::Force::Custom {\r\npublic:\r\n\tDCMotorTest(SimTK::GeneralForceSubsystem &forces, const SimTK::MobilizedBody &mb);\r\n};\r\n```\r\n\r\ndcmotor_simplified.cc:\r\n\r\n```\r\n#include \"dcmotor_simplified.hh\"\r\n\r\n#include <cmath>\r\n\r\nclass MotorImplTest : public SimTK::Force::Custom::Implementation {\r\npublic:\r\n\tMotorImplTest(SimTK::SimbodyMatterSubsystem &f) : m_matter(f){};\r\n\r\n\tMotorImplTest(const SimTK::MobilizedBody &mb) : m_matter(mb.getMatterSubsystem()), m_mobod(mb) {}\r\n\r\n\tvoid calcForce(const SimTK::State &state,\r\n\t               SimTK::Vector_< SimTK::SpatialVec > & /*bodyForces*/,\r\n\t               SimTK::Vector_< SimTK::Vec3 > & /*particleForces*/,\r\n\t               SimTK::Vector &mobilityForces) const {}\r\n\r\n\tSimTK::Real calcPotentialEnergy(const SimTK::State & /*state*/) const { return 0; }\r\n\r\n\tvoid setVoltage(SimTK::State &state, SimTK::Real v) const {\r\n\t\tstd::cerr << \"m_voltageIX in set Voltage\" << m_voltageIx << std::endl;\r\n\t\tstate.updDiscreteVariable(SimTK::SubsystemIndex(0), m_voltageIx);\r\n\t}\r\n\r\n\tvoid realizeTopology(SimTK::State &state) const {\r\n\t\tstd::cout << \"Called realizeTopology in MotorImpl\" << std::endl;\r\n\t\tm_voltageIx =\r\n\t\t    m_matter.allocateDiscreteVariable(state, SimTK::Stage::Acceleration, new SimTK::Value< SimTK::Real >(0.0));\r\n\t\tstd::cout << \"m_voltageIx: \" << m_voltageIx << std::endl;\r\n\t}\r\n\r\nprivate:\r\n\tconst SimTK::SimbodyMatterSubsystem &m_matter;\r\n\tSimTK::MobilizedBody                 m_mobod;\r\n\tmutable SimTK::DiscreteVariableIndex m_voltageIx;\r\n};\r\n\r\nDCMotorTest::DCMotorTest(SimTK::GeneralForceSubsystem &forces, const SimTK::MobilizedBody &mb)\r\n    : SimTK::Force::Custom(forces, new MotorImplTest(mb)) {}\r\n\r\nvoid Foo(SimTK::State &state) {\r\n\tSimTK::SimbodyMatterSubsystem f;\r\n\tMotorImplTest                 t(f);\r\n\tt.setVoltage(state, 1.0);\r\n}\r\n```\r\n\r\nWe used the following commands for compilation:\r\n\r\n`g++ -std=c++11 -std=gnu++11 -isystem /usr/local/include/simbody -I/home/xxx/repos/exp-simmc -Wall -g  -Wfatal-errors -c -o dcmotor_simplified.o dcmotor_simplified.cc`\r\n`ar -v -q lib.a dcmotor_simplified.o\r\nar: creating lib.a\r\na - dcmotor_simplified.o`\r\n`g++ -std=c++11 -std=gnu++11 -isystem /usr/local/include/simbody -I/home/xxx/repos/exp-simmc -Wall -g  -Wfatal-errors -c -o minimum_example0_test.o minimum_example0_test.cc`\r\n`g++ -L/local/usr/lib/ -lSimTKsimbody -lSimTKmath -lSimTKcommon  minimum_example0_test.o lib.a -o minimum_example0_test`\r\n\r\nThis is the output:\r\n\r\n```\r\nRunning minimum_example0_test: Before motor\r\nBefore realizeTopology\r\nSegmentation fault\r\n../mk/Makefile.inc:65: recipe for target 'minimum_example0_test.run' failed\r\nmake: *** [minimum_example0_test.run] Error 139\r\n\r\n(gdb) bt\r\n#0  SimTK::CacheEntryInfo::registerWithPrerequisites (this=0x61c518, stateImpl=...) at /home/dh/repos/vendor-simbody/SimTKcommon/Simulation/src/State.cpp:1009\r\n#1  0x00007ffff7afc3cb in SimTK::StateImpl::allocateCacheEntryWithPrerequisites (this=0x615090, subsys=..., earliest=..., latest=..., latest@entry=..., qPre=qPre@entry=true, uPre=uPre@entry=false, zPre=false, discreteVars=..., cacheEntries=..., value=0x61cff0)\r\n    at /home/dh/repos/vendor-simbody/SimTKcommon/Simulation/include/SimTKcommon/internal/StateImpl.h:1213\r\n#2  0x00007ffff7aee687 in allocateCacheEntryWithPrerequisites (value=<optimized out>, cacheEntries=..., discreteVars=..., z=false, u=false, q=true, latest=..., earliest=..., subsys=..., this=0x614ff0) at /home/dh/repos/vendor-simbody/SimTKcommon/Simulation/include/SimTKcommon/internal/StateImpl.h:2470\r\n#3  SimbodyMatterSubsystemRep::realizeSubsystemTopologyImpl (this=0x616770, s=...) at /home/dh/repos/vendor-simbody/Simbody/src/SimbodyMatterSubsystemRep.cpp:394\r\n#4  0x00007ffff6de3f92 in SimTK::Subsystem::Guts::realizeSubsystemTopology (this=0x616770, s=...) at /home/dh/repos/vendor-simbody/SimTKcommon/Simulation/src/Subsystem.cpp:209\r\n#5  0x00007ffff7991298 in SimTK::MultibodySystemRep::realizeTopologyImpl (this=0x614ef0, s=...) at /home/dh/repos/vendor-simbody/Simbody/src/MultibodySystem.cpp:185\r\n#6  0x00007ffff6deb62d in SimTK::System::Guts::realizeTopology (this=0x614ef0) at /home/dh/repos/vendor-simbody/SimTKcommon/Simulation/src/System.cpp:358\r\n#7  0x0000000000404108 in main () at minimum_example0_test.cc:38\r\n```\r\n\r\nOur compiler version is: g++ (Debian 4.9.2-10) 4.9.2\r\n\r\nCould anyone help?\r\n", "reactions": {"url": "https://api.github.com/repos/simbody/simbody/issues/544/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/simbody/simbody/issues/544/timeline", "performed_via_github_app": null}, {"url": "https://api.github.com/repos/simbody/simbody/issues/545", "repository_url": "https://api.github.com/repos/simbody/simbody", "labels_url": "https://api.github.com/repos/simbody/simbody/issues/545/labels{/name}", "comments_url": "https://api.github.com/repos/simbody/simbody/issues/545/comments", "events_url": "https://api.github.com/repos/simbody/simbody/issues/545/events", "html_url": "https://github.com/simbody/simbody/issues/545", "id": 197424420, "node_id": "MDU6SXNzdWUxOTc0MjQ0MjA=", "number": 545, "title": "Debian installation of Simbody 3.5.3 doesn't include visualizer or examples", "user": {"login": "sherm1", "id": 4088016, "node_id": "MDQ6VXNlcjQwODgwMTY=", "avatar_url": "https://avatars.githubusercontent.com/u/4088016?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sherm1", "html_url": "https://github.com/sherm1", "followers_url": "https://api.github.com/users/sherm1/followers", "following_url": "https://api.github.com/users/sherm1/following{/other_user}", "gists_url": "https://api.github.com/users/sherm1/gists{/gist_id}", "starred_url": "https://api.github.com/users/sherm1/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sherm1/subscriptions", "organizations_url": "https://api.github.com/users/sherm1/orgs", "repos_url": "https://api.github.com/users/sherm1/repos", "events_url": "https://api.github.com/users/sherm1/events{/privacy}", "received_events_url": "https://api.github.com/users/sherm1/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "open", "locked": false, "assignee": {"login": "j-rivero", "id": 2098802, "node_id": "MDQ6VXNlcjIwOTg4MDI=", "avatar_url": "https://avatars.githubusercontent.com/u/2098802?v=4", "gravatar_id": "", "url": "https://api.github.com/users/j-rivero", "html_url": "https://github.com/j-rivero", "followers_url": "https://api.github.com/users/j-rivero/followers", "following_url": "https://api.github.com/users/j-rivero/following{/other_user}", "gists_url": "https://api.github.com/users/j-rivero/gists{/gist_id}", "starred_url": "https://api.github.com/users/j-rivero/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/j-rivero/subscriptions", "organizations_url": "https://api.github.com/users/j-rivero/orgs", "repos_url": "https://api.github.com/users/j-rivero/repos", "events_url": "https://api.github.com/users/j-rivero/events{/privacy}", "received_events_url": "https://api.github.com/users/j-rivero/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "j-rivero", "id": 2098802, "node_id": "MDQ6VXNlcjIwOTg4MDI=", "avatar_url": "https://avatars.githubusercontent.com/u/2098802?v=4", "gravatar_id": "", "url": "https://api.github.com/users/j-rivero", "html_url": "https://github.com/j-rivero", "followers_url": "https://api.github.com/users/j-rivero/followers", "following_url": "https://api.github.com/users/j-rivero/following{/other_user}", "gists_url": "https://api.github.com/users/j-rivero/gists{/gist_id}", "starred_url": "https://api.github.com/users/j-rivero/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/j-rivero/subscriptions", "organizations_url": "https://api.github.com/users/j-rivero/orgs", "repos_url": "https://api.github.com/users/j-rivero/repos", "events_url": "https://api.github.com/users/j-rivero/events{/privacy}", "received_events_url": "https://api.github.com/users/j-rivero/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 12, "created_at": "2016-12-23T20:43:46Z", "updated_at": "2018-11-20T21:58:09Z", "closed_at": null, "author_association": "MEMBER", "active_lock_reason": null, "body": "On Ubuntu 16.04 I installed Simbody with\r\n```\r\nsudo apt-get install libsimbody-dev simbody-doc\r\n```\r\nThe installation worked fine when I used the libraries (see issue #543). However, I couldn't find the `simbody-visualizer` executable or the example programs so I couldn't do anything with it other than link.\r\n\r\nAlso the documents installed in /usr/share/doc/simbody were still gzipped after installation.\r\n\r\n@j-rivero and @chrisdembia, is this expected behavior?", "reactions": {"url": "https://api.github.com/repos/simbody/simbody/issues/545/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/simbody/simbody/issues/545/timeline", "performed_via_github_app": null}, {"url": "https://api.github.com/repos/simbody/simbody/issues/547", "repository_url": "https://api.github.com/repos/simbody/simbody", "labels_url": "https://api.github.com/repos/simbody/simbody/issues/547/labels{/name}", "comments_url": "https://api.github.com/repos/simbody/simbody/issues/547/comments", "events_url": "https://api.github.com/repos/simbody/simbody/issues/547/events", "html_url": "https://github.com/simbody/simbody/issues/547", "id": 205412829, "node_id": "MDU6SXNzdWUyMDU0MTI4Mjk=", "number": 547, "title": "Const in HandleEvent definition", "user": {"login": "YuriOsokin", "id": 6566173, "node_id": "MDQ6VXNlcjY1NjYxNzM=", "avatar_url": "https://avatars.githubusercontent.com/u/6566173?v=4", "gravatar_id": "", "url": "https://api.github.com/users/YuriOsokin", "html_url": "https://github.com/YuriOsokin", "followers_url": "https://api.github.com/users/YuriOsokin/followers", "following_url": "https://api.github.com/users/YuriOsokin/following{/other_user}", "gists_url": "https://api.github.com/users/YuriOsokin/gists{/gist_id}", "starred_url": "https://api.github.com/users/YuriOsokin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/YuriOsokin/subscriptions", "organizations_url": "https://api.github.com/users/YuriOsokin/orgs", "repos_url": "https://api.github.com/users/YuriOsokin/repos", "events_url": "https://api.github.com/users/YuriOsokin/events{/privacy}", "received_events_url": "https://api.github.com/users/YuriOsokin/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-02-05T09:16:43Z", "updated_at": "2017-02-05T17:40:40Z", "closed_at": "2017-02-05T17:40:07Z", "author_association": "NONE", "active_lock_reason": null, "body": "I try to use another library for the control of the dynamical system, which I simulate in SimBody. I created the PeriodicEventHandler, which applies controlled force to the joints. The problem is that the HandleEvent callback has const in its declaration. The library I use does not have const method in it. So, I have a variety of problems with it. \r\nFor example:\r\nHandleEvent (..) const {\r\n  Joint.SetForce(net.predict(state.GetPosition()));\r\n}\r\nnet.predict() is not const.\r\n\r\nWhat is the preferred solution for the problem? And could you explain, please, why the HandleEvent method is const?\r\nThank you.\r\n", "reactions": {"url": "https://api.github.com/repos/simbody/simbody/issues/547/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/simbody/simbody/issues/547/timeline", "performed_via_github_app": null}, {"url": "https://api.github.com/repos/simbody/simbody/issues/549", "repository_url": "https://api.github.com/repos/simbody/simbody", "labels_url": "https://api.github.com/repos/simbody/simbody/issues/549/labels{/name}", "comments_url": "https://api.github.com/repos/simbody/simbody/issues/549/comments", "events_url": "https://api.github.com/repos/simbody/simbody/issues/549/events", "html_url": "https://github.com/simbody/simbody/issues/549", "id": 208801925, "node_id": "MDU6SXNzdWUyMDg4MDE5MjU=", "number": 549, "title": "Return from waitFromKeyHit() if simbody-visualizer is closed.", "user": {"login": "chrisdembia", "id": 846001, "node_id": "MDQ6VXNlcjg0NjAwMQ==", "avatar_url": "https://avatars.githubusercontent.com/u/846001?v=4", "gravatar_id": "", "url": "https://api.github.com/users/chrisdembia", "html_url": "https://github.com/chrisdembia", "followers_url": "https://api.github.com/users/chrisdembia/followers", "following_url": "https://api.github.com/users/chrisdembia/following{/other_user}", "gists_url": "https://api.github.com/users/chrisdembia/gists{/gist_id}", "starred_url": "https://api.github.com/users/chrisdembia/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/chrisdembia/subscriptions", "organizations_url": "https://api.github.com/users/chrisdembia/orgs", "repos_url": "https://api.github.com/users/chrisdembia/repos", "events_url": "https://api.github.com/users/chrisdembia/events{/privacy}", "received_events_url": "https://api.github.com/users/chrisdembia/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-02-20T07:22:26Z", "updated_at": "2017-02-20T07:43:58Z", "closed_at": "2017-02-20T07:43:37Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "I am writing an interactive MATLAB script using OpenSim and the simbody-visualizer. I am using `InputSilo::waitForKeyHit()` to start the simulation when the user hits any key in the simbody-visualizer, and to shut down the simbody-visualizer if the user hits the Escape key. This works great.\r\n\r\nHowever, if the user closes the simbody-visualizer executable without any key presses, then the MATLAB script hangs forever at the `waitForKeyHit()` call. MATLAB does not send Ctrl+C down to through to native code, so the only recourse is to kill MATLAB. \r\n\r\nWould it be possible for closing the simbody-visualizer to cause `waitForKeyHit()` to return?", "reactions": {"url": "https://api.github.com/repos/simbody/simbody/issues/549/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/simbody/simbody/issues/549/timeline", "performed_via_github_app": null}, {"url": "https://api.github.com/repos/simbody/simbody/issues/550", "repository_url": "https://api.github.com/repos/simbody/simbody", "labels_url": "https://api.github.com/repos/simbody/simbody/issues/550/labels{/name}", "comments_url": "https://api.github.com/repos/simbody/simbody/issues/550/comments", "events_url": "https://api.github.com/repos/simbody/simbody/issues/550/events", "html_url": "https://github.com/simbody/simbody/issues/550", "id": 208966008, "node_id": "MDU6SXNzdWUyMDg5NjYwMDg=", "number": 550, "title": "Issue running simbody on a headless server", "user": {"login": "spMohanty", "id": 1581312, "node_id": "MDQ6VXNlcjE1ODEzMTI=", "avatar_url": "https://avatars.githubusercontent.com/u/1581312?v=4", "gravatar_id": "", "url": "https://api.github.com/users/spMohanty", "html_url": "https://github.com/spMohanty", "followers_url": "https://api.github.com/users/spMohanty/followers", "following_url": "https://api.github.com/users/spMohanty/following{/other_user}", "gists_url": "https://api.github.com/users/spMohanty/gists{/gist_id}", "starred_url": "https://api.github.com/users/spMohanty/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/spMohanty/subscriptions", "organizations_url": "https://api.github.com/users/spMohanty/orgs", "repos_url": "https://api.github.com/users/spMohanty/repos", "events_url": "https://api.github.com/users/spMohanty/events{/privacy}", "received_events_url": "https://api.github.com/users/spMohanty/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2017-02-20T19:35:44Z", "updated_at": "2017-02-21T17:02:19Z", "closed_at": "2017-02-21T05:39:15Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi,\r\n\r\nSo I have been trying to run simbody (via OpenSim) on a headless server, and I keep getting this error :\r\n```\r\n(opensim-rl) ubuntu@ip-172-30-0-203:~/SDF/mohanty/osim-rl-grader/worker_dir$ xpra start :108\r\n(opensim-rl) ubuntu@ip-172-30-0-203:~/SDF/mohanty/osim-rl-grader/worker_dir$ Entering daemon mode; any further errors will be reported to:\r\n  /home/ubuntu/.xpra/:108.log\r\n\r\n(opensim-rl) ubuntu@ip-172-30-0-203:~/SDF/mohanty/osim-rl-grader/worker_dir$\r\n(opensim-rl) ubuntu@ip-172-30-0-203:~/SDF/mohanty/osim-rl-grader/worker_dir$ DISPLAY=:108 python simulate.py \r\n\r\nUpdating Model file from 30000 to latest format...\r\nLoaded model gait9dof18musc_Thelen_BigSpheres.osim from file /home/ubuntu/anaconda2/envs/opensim-rl/lib/python2.7/site-packages/osim/env/../models/gait9dof18musc.osim\r\npelvis\r\nfemur_r\r\ntibia_r\r\ntalus_r\r\ncalcn_r\r\ntoes_r\r\nfemur_l\r\ntibia_l\r\ntalus_l\r\ncalcn_l\r\ntoes_l\r\ntorso\r\nhead\r\nMovie Name\r\n0.0029046360869\r\n0.00562152964994\r\n0.00849470496178\r\n0.0132510904223\r\n0.0175715312362\r\n0.0190468281507\r\nstd::exception in 'bool OpenSim::Manager::integrate(SimTK::State &,double)': SimTK Exception thrown at VisualizerProtocol.cpp:378:\r\n  Error detected by Simbody method VisualizerProtocol: An attempt to write() 1 bytes to pipe 5 failed with errno=32 (Broken pipe).\r\n  (Required condition 'status!=-1' was not met.)\r\n\r\n-500\r\nterminate called after throwing an instance of 'SimTK::Exception::ErrorCheck'\r\n  what():  SimTK Exception thrown at VisualizerProtocol.cpp:372:\r\n  Error detected by Simbody method VisualizerProtocol: An attempt to write() 1 bytes to pipe 5 failed with errno=32 (Broken pipe).\r\n  (Required condition 'status!=-1' was not met.)\r\n\r\nAborted (core dumped)\r\n```\r\n\r\n\r\nI tried using both xvfb and xpra, the issue still remains.\r\n\r\nThe goal is to use a slightly modified version of simbody-visualiser to automatically save the movie at a particular location (which it obtains from an env variable)\r\n\r\nAny help or pointers will be really appreciated.", "reactions": {"url": "https://api.github.com/repos/simbody/simbody/issues/550/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/simbody/simbody/issues/550/timeline", "performed_via_github_app": null}, {"url": "https://api.github.com/repos/simbody/simbody/issues/556", "repository_url": "https://api.github.com/repos/simbody/simbody", "labels_url": "https://api.github.com/repos/simbody/simbody/issues/556/labels{/name}", "comments_url": "https://api.github.com/repos/simbody/simbody/issues/556/comments", "events_url": "https://api.github.com/repos/simbody/simbody/issues/556/events", "html_url": "https://github.com/simbody/simbody/issues/556", "id": 217493191, "node_id": "MDU6SXNzdWUyMTc0OTMxOTE=", "number": 556, "title": "simbody 3.5.3 compiling error in \"usr/local/include/..\" when building example on ubuntu 14.04", "user": {"login": "jiangfeiyi", "id": 26733254, "node_id": "MDQ6VXNlcjI2NzMzMjU0", "avatar_url": "https://avatars.githubusercontent.com/u/26733254?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jiangfeiyi", "html_url": "https://github.com/jiangfeiyi", "followers_url": "https://api.github.com/users/jiangfeiyi/followers", "following_url": "https://api.github.com/users/jiangfeiyi/following{/other_user}", "gists_url": "https://api.github.com/users/jiangfeiyi/gists{/gist_id}", "starred_url": "https://api.github.com/users/jiangfeiyi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jiangfeiyi/subscriptions", "organizations_url": "https://api.github.com/users/jiangfeiyi/orgs", "repos_url": "https://api.github.com/users/jiangfeiyi/repos", "events_url": "https://api.github.com/users/jiangfeiyi/events{/privacy}", "received_events_url": "https://api.github.com/users/jiangfeiyi/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2017-03-28T09:05:14Z", "updated_at": "2017-03-29T07:23:18Z", "closed_at": "2017-03-29T07:02:05Z", "author_association": "NONE", "active_lock_reason": null, "body": "I just installed simbody 3.5.3 on ubuntu 14.04, and tried to build example:\r\n~/simbody/examples/ExampleGears.cpp\r\nusing g++:\r\n`$ g++ ExampleGears.cpp`\r\n\r\nThen I got the error as below:\r\n\r\n> /usr/local/include/SimTKcommon/internal/MeasureImplementation.h:577:25: error: call of overloaded \u2018Value(double&)\u2019 is ambiguous\r\n                         ? this->getSubsystem().allocateCacheEntry\r\n                         ^\r\n/usr/local/include/SimTKcommon/internal/MeasureImplementation.h:577:25: note: candidates are:\r\nIn file included from /usr/local/include/SimTKcommon/basics.h:55:0,\r\n                 from /usr/local/include/SimTKcommon.h:32,\r\n                 from /usr/local/include/Simbody.h:38,\r\n                 from ExampleGears.cpp:24:\r\n/usr/local/include/SimTKcommon/internal/Value.h:126:5: note: SimTK::Value<T>::Value(const SimTK::Value<T>&) [with T = double]\r\n     Value(const Value& value) : m_thing(value.m_thing) {}\r\n     ^\r\n/usr/local/include/SimTKcommon/internal/Value.h:120:14: note: SimTK::Value<T>::Value(T) [with T = double]\r\n     explicit Value(const T&& value) : m_thing(std::move(value)) {}\r\n              ^\r\n/usr/local/include/SimTKcommon/internal/Value.h:115:14: note: SimTK::Value<T>::Value(const T&) [with T = double]\r\n     explicit Value(const T& value) : m_thing(value) {}\r\n\r\n\r\nI have no idea what cause this compiler error.\r\nIs there anybody got some ideas about it?\r\nThanks for your help.\r\n\r\n", "reactions": {"url": "https://api.github.com/repos/simbody/simbody/issues/556/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/simbody/simbody/issues/556/timeline", "performed_via_github_app": null}, {"url": "https://api.github.com/repos/simbody/simbody/issues/558", "repository_url": "https://api.github.com/repos/simbody/simbody", "labels_url": "https://api.github.com/repos/simbody/simbody/issues/558/labels{/name}", "comments_url": "https://api.github.com/repos/simbody/simbody/issues/558/comments", "events_url": "https://api.github.com/repos/simbody/simbody/issues/558/events", "html_url": "https://github.com/simbody/simbody/issues/558", "id": 218408645, "node_id": "MDU6SXNzdWUyMTg0MDg2NDU=", "number": 558, "title": "Add relative location from libSimTKsimbody.(so|dylib) to simbody-visualizer to the visualizer search path", "user": {"login": "chrisdembia", "id": 846001, "node_id": "MDQ6VXNlcjg0NjAwMQ==", "avatar_url": "https://avatars.githubusercontent.com/u/846001?v=4", "gravatar_id": "", "url": "https://api.github.com/users/chrisdembia", "html_url": "https://github.com/chrisdembia", "followers_url": "https://api.github.com/users/chrisdembia/followers", "following_url": "https://api.github.com/users/chrisdembia/following{/other_user}", "gists_url": "https://api.github.com/users/chrisdembia/gists{/gist_id}", "starred_url": "https://api.github.com/users/chrisdembia/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/chrisdembia/subscriptions", "organizations_url": "https://api.github.com/users/chrisdembia/orgs", "repos_url": "https://api.github.com/users/chrisdembia/repos", "events_url": "https://api.github.com/users/chrisdembia/events{/privacy}", "received_events_url": "https://api.github.com/users/chrisdembia/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2017-03-31T06:21:05Z", "updated_at": "2017-04-04T15:23:57Z", "closed_at": "2017-04-04T15:23:57Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "PR #64 cleverly inserted the build-time install location of the `simbody-visualizer` to the visualizer search path. However, for OpenSim users who get a binary distribution of OpenSim, this build-time absolute path will be incorrect. This is mostly a problem on macOS (on Windows, `simbody-visualizer` will be on the PATH for OpenSim users; on Linux, hopefully OpenSim will be installed into common system-wide directories), but is also a problem for Linux users installing into non-standard directories. \r\n\r\nThe specific use cases I am thinking of are OpenSim MATLAB and Python bindings.\r\n\r\nWhen using Simbody's shared libraries, the code that spawns the visualizer is always in libSimTKsimbody.(so|dylib). We also always know the relative location of the simbody-visualizer from libSimTKsimbody.(so|dylib) (so long as the installation is not reorganized). If we know the location of libSimTKsimbody.(so|dylib), then we can find the simbody-visualizer by combining this known location with the relative path of simbody-visualizer from SimTKsimbody. Fortunately, on most UNIX operating systems, it is possible to obtain the location of the shared library that has been loaded (http://stackoverflow.com/questions/1681060/library-path-when-dynamically-loaded):\r\n\r\n```cpp\r\n#include <dlfcn.h>\r\n__attribute__((constructor))\r\nvoid on_load(void) {\r\n    Dl_info dl_info;\r\n    dladdr((void *)on_load, &dl_info);\r\n    fprintf(stderr, \"module %s loaded\\n\", dl_info.dli_fname);\r\n}\r\n```\r\n\r\nI have tested this mechanism on macOS, and I have gotten it to work with OpenSim MATLAB and Python bindings.\r\n\r\n@sherm1 , would you be interested in a PR that adds `getParentDir(dl_info.dli_fname) + \"/\" + rel_path_of_simbody_visualizer_from_lib_dir` (pseudocode) to the visualizer search path on platforms where `dlfcn.h` is available?\r\n\r\nOn Windows, or when using static libraries (on any platform), I don't think it's possible to use this mechanism. Therefore, for Windows, it would be nice if the search path included the PATH environment variable. This would allow OpenSim to decrease its reliance on the OPENSIM_HOME environment variable, which we are hoping we will no longer need to set.", "reactions": {"url": "https://api.github.com/repos/simbody/simbody/issues/558/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/simbody/simbody/issues/558/timeline", "performed_via_github_app": null}, {"url": "https://api.github.com/repos/simbody/simbody/issues/561", "repository_url": "https://api.github.com/repos/simbody/simbody", "labels_url": "https://api.github.com/repos/simbody/simbody/issues/561/labels{/name}", "comments_url": "https://api.github.com/repos/simbody/simbody/issues/561/comments", "events_url": "https://api.github.com/repos/simbody/simbody/issues/561/events", "html_url": "https://github.com/simbody/simbody/issues/561", "id": 220983353, "node_id": "MDU6SXNzdWUyMjA5ODMzNTM=", "number": 561, "title": "Getting more done in GitHub with ZenHub", "user": {"login": "zarvis56", "id": 11449967, "node_id": "MDQ6VXNlcjExNDQ5OTY3", "avatar_url": "https://avatars.githubusercontent.com/u/11449967?v=4", "gravatar_id": "", "url": "https://api.github.com/users/zarvis56", "html_url": "https://github.com/zarvis56", "followers_url": "https://api.github.com/users/zarvis56/followers", "following_url": "https://api.github.com/users/zarvis56/following{/other_user}", "gists_url": "https://api.github.com/users/zarvis56/gists{/gist_id}", "starred_url": "https://api.github.com/users/zarvis56/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/zarvis56/subscriptions", "organizations_url": "https://api.github.com/users/zarvis56/orgs", "repos_url": "https://api.github.com/users/zarvis56/repos", "events_url": "https://api.github.com/users/zarvis56/events{/privacy}", "received_events_url": "https://api.github.com/users/zarvis56/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2017-04-11T15:06:22Z", "updated_at": "2017-09-20T03:56:23Z", "closed_at": "2017-09-20T03:56:23Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hola! @shahidul56 has created a [ZenHub](http://www.zenhub.com) account for the **simbody** organization. ZenHub is the only project management tool integrated natively in GitHub \u2013 created specifically for fast-moving, software-driven teams.\n\n----\n\n#### How do I use ZenHub?\n\nTo get set up with ZenHub, all you have to do is **[download the browser extension](https://www.zenhub.com?utm_source=ZHOnboarding)** and log in with your GitHub account. Once you do, you\u2019ll get access to ZenHub\u2019s complete feature-set immediately.\n\n#### What can ZenHub do?\n\nZenHub adds a series of enhancements directly inside the GitHub UI:\n\n- Real-time, customizable task boards for GitHub issues;\n- Multi-Repository burndown charts, estimates, and velocity tracking based on GitHub Milestones;\n- Personal to-do lists and task prioritization;\n- Time-saving shortcuts \u2013 like a quick repo switcher, a \u201cMove issue\u201d button, and much more.\n\n### [Add ZenHub to GitHub](https://www.zenhub.com?utm_source=ZHOnboarding)\n\n_Still curious? See [more ZenHub features](https://www.zenhub.com/features?utm_source=ZHOnboarding) or read [user reviews](https://chrome.google.com/webstore/detail/zenhub-for-github/ogcgkffhplmphkaahpmffcafajaocjbd/reviews). This issue was written by your friendly ZenHub bot, posted by request from @shahidul56._\n\n![ZenHub Board](https://cloud.githubusercontent.com/assets/8771909/11153956/233ac4a8-89f1-11e5-94b1-1569d3f38b4d.png)\n", "reactions": {"url": "https://api.github.com/repos/simbody/simbody/issues/561/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/simbody/simbody/issues/561/timeline", "performed_via_github_app": null}, {"url": "https://api.github.com/repos/simbody/simbody/issues/562", "repository_url": "https://api.github.com/repos/simbody/simbody", "labels_url": "https://api.github.com/repos/simbody/simbody/issues/562/labels{/name}", "comments_url": "https://api.github.com/repos/simbody/simbody/issues/562/comments", "events_url": "https://api.github.com/repos/simbody/simbody/issues/562/events", "html_url": "https://github.com/simbody/simbody/issues/562", "id": 221934758, "node_id": "MDU6SXNzdWUyMjE5MzQ3NTg=", "number": 562, "title": "Visualizer crashes on some sample examples", "user": {"login": "nikhil-bidgely", "id": 20637523, "node_id": "MDQ6VXNlcjIwNjM3NTIz", "avatar_url": "https://avatars.githubusercontent.com/u/20637523?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nikhil-bidgely", "html_url": "https://github.com/nikhil-bidgely", "followers_url": "https://api.github.com/users/nikhil-bidgely/followers", "following_url": "https://api.github.com/users/nikhil-bidgely/following{/other_user}", "gists_url": "https://api.github.com/users/nikhil-bidgely/gists{/gist_id}", "starred_url": "https://api.github.com/users/nikhil-bidgely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nikhil-bidgely/subscriptions", "organizations_url": "https://api.github.com/users/nikhil-bidgely/orgs", "repos_url": "https://api.github.com/users/nikhil-bidgely/repos", "events_url": "https://api.github.com/users/nikhil-bidgely/events{/privacy}", "received_events_url": "https://api.github.com/users/nikhil-bidgely/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-04-15T08:11:00Z", "updated_at": "2017-04-17T07:31:34Z", "closed_at": "2017-04-17T07:31:34Z", "author_association": "NONE", "active_lock_reason": null, "body": "Observed this bug this bug while using \"ExampleContactPlayground\" on 16.04 installed in virtual box. Simbody was installed using conda.\r\n\r\nOther related issues: \r\n[https://github.com/simbody/simbody/issues/155](url)\r\n[https://github.com/conda-forge/simbody-feedstock/issues/15](url)", "reactions": {"url": "https://api.github.com/repos/simbody/simbody/issues/562/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/simbody/simbody/issues/562/timeline", "performed_via_github_app": null}, {"url": "https://api.github.com/repos/simbody/simbody/issues/563", "repository_url": "https://api.github.com/repos/simbody/simbody", "labels_url": "https://api.github.com/repos/simbody/simbody/issues/563/labels{/name}", "comments_url": "https://api.github.com/repos/simbody/simbody/issues/563/comments", "events_url": "https://api.github.com/repos/simbody/simbody/issues/563/events", "html_url": "https://github.com/simbody/simbody/issues/563", "id": 230443565, "node_id": "MDU6SXNzdWUyMzA0NDM1NjU=", "number": 563, "title": "Simbody crashing during visualization when running with a fake display server", "user": {"login": "spMohanty", "id": 1581312, "node_id": "MDQ6VXNlcjE1ODEzMTI=", "avatar_url": "https://avatars.githubusercontent.com/u/1581312?v=4", "gravatar_id": "", "url": "https://api.github.com/users/spMohanty", "html_url": "https://github.com/spMohanty", "followers_url": "https://api.github.com/users/spMohanty/followers", "following_url": "https://api.github.com/users/spMohanty/following{/other_user}", "gists_url": "https://api.github.com/users/spMohanty/gists{/gist_id}", "starred_url": "https://api.github.com/users/spMohanty/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/spMohanty/subscriptions", "organizations_url": "https://api.github.com/users/spMohanty/orgs", "repos_url": "https://api.github.com/users/spMohanty/repos", "events_url": "https://api.github.com/users/spMohanty/events{/privacy}", "received_events_url": "https://api.github.com/users/spMohanty/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "open", "locked": false, "assignee": {"login": "aymanhab", "id": 3972208, "node_id": "MDQ6VXNlcjM5NzIyMDg=", "avatar_url": "https://avatars.githubusercontent.com/u/3972208?v=4", "gravatar_id": "", "url": "https://api.github.com/users/aymanhab", "html_url": "https://github.com/aymanhab", "followers_url": "https://api.github.com/users/aymanhab/followers", "following_url": "https://api.github.com/users/aymanhab/following{/other_user}", "gists_url": "https://api.github.com/users/aymanhab/gists{/gist_id}", "starred_url": "https://api.github.com/users/aymanhab/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/aymanhab/subscriptions", "organizations_url": "https://api.github.com/users/aymanhab/orgs", "repos_url": "https://api.github.com/users/aymanhab/repos", "events_url": "https://api.github.com/users/aymanhab/events{/privacy}", "received_events_url": "https://api.github.com/users/aymanhab/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "aymanhab", "id": 3972208, "node_id": "MDQ6VXNlcjM5NzIyMDg=", "avatar_url": "https://avatars.githubusercontent.com/u/3972208?v=4", "gravatar_id": "", "url": "https://api.github.com/users/aymanhab", "html_url": "https://github.com/aymanhab", "followers_url": "https://api.github.com/users/aymanhab/followers", "following_url": "https://api.github.com/users/aymanhab/following{/other_user}", "gists_url": "https://api.github.com/users/aymanhab/gists{/gist_id}", "starred_url": "https://api.github.com/users/aymanhab/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/aymanhab/subscriptions", "organizations_url": "https://api.github.com/users/aymanhab/orgs", "repos_url": "https://api.github.com/users/aymanhab/repos", "events_url": "https://api.github.com/users/aymanhab/events{/privacy}", "received_events_url": "https://api.github.com/users/aymanhab/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 13, "created_at": "2017-05-22T16:02:35Z", "updated_at": "2021-10-06T17:56:51Z", "closed_at": null, "author_association": "NONE", "active_lock_reason": null, "body": "Hi,\r\n\r\nI keep getting this error multiple times when running in visualization mode.\r\n```\r\nTraceback (most recent call last):\r\n  File \"/home/ubuntu/SDF/osim-rl-grader/worker_dir/simulate.py\", line 38, in <module>\r\n    env = RunEnv(True)\r\n  File \"/home/ubuntu/osim-rl/osim/env/run.py\", line 65, in __init__\r\n    manager.integrate(state)\r\n  File \"/home/ubuntu/anaconda2/envs/opensim-rl/lib/python2.7/site-packages/opensim/simulation.py\", line 38437, in integrate\r\n    return _simulation.Manager_integrate(self, s, dtFirst)\r\nRuntimeError: std::exception in 'bool OpenSim::Manager::integrate(SimTK::State &,double)': SimTK Exception thrown at VisualizerProtocol.cpp:490:\r\n  Error detected by Simbody method VisualizerProtocol: An attempt to write() 11160 bytes to pipe 6 failed with errno=32 (Broken pipe).\r\n  (Required condition 'status!=-1' was not met.)\r\n\r\nterminate called after throwing an instance of 'SimTK::Exception::ErrorCheck'\r\n  what():  SimTK Exception thrown at VisualizerProtocol.cpp:372:\r\n  Error detected by Simbody method VisualizerProtocol: An attempt to write() 1 bytes to pipe 6 failed with errno=32 (Broken pipe).\r\n  (Required condition 'status!=-1' was not met.)\r\n\r\nAborted (core dumped)\r\n```\r\n\r\nAnyone familiar with possible reasons why ?\r\nI am using a slightly modified version of simbody (https://github.com/spMohanty/simbody) to be able to force generation of frames on every render.\r\n\r\nI run it with a `xpra` fake display server for programmatic generation of the frames on the server. It seems to work completely fine when I test it locally on my laptop.\r\n\r\nwill really appreciate any insights.\r\n\r\nThanks,", "reactions": {"url": "https://api.github.com/repos/simbody/simbody/issues/563/reactions", "total_count": 1, "+1": 1, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/simbody/simbody/issues/563/timeline", "performed_via_github_app": null}, {"url": "https://api.github.com/repos/simbody/simbody/issues/564", "repository_url": "https://api.github.com/repos/simbody/simbody", "labels_url": "https://api.github.com/repos/simbody/simbody/issues/564/labels{/name}", "comments_url": "https://api.github.com/repos/simbody/simbody/issues/564/comments", "events_url": "https://api.github.com/repos/simbody/simbody/issues/564/events", "html_url": "https://github.com/simbody/simbody/issues/564", "id": 233572298, "node_id": "MDU6SXNzdWUyMzM1NzIyOTg=", "number": 564, "title": "Tests and examples do not run ", "user": {"login": "YuriOsokin", "id": 6566173, "node_id": "MDQ6VXNlcjY1NjYxNzM=", "avatar_url": "https://avatars.githubusercontent.com/u/6566173?v=4", "gravatar_id": "", "url": "https://api.github.com/users/YuriOsokin", "html_url": "https://github.com/YuriOsokin", "followers_url": "https://api.github.com/users/YuriOsokin/followers", "following_url": "https://api.github.com/users/YuriOsokin/following{/other_user}", "gists_url": "https://api.github.com/users/YuriOsokin/gists{/gist_id}", "starred_url": "https://api.github.com/users/YuriOsokin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/YuriOsokin/subscriptions", "organizations_url": "https://api.github.com/users/YuriOsokin/orgs", "repos_url": "https://api.github.com/users/YuriOsokin/repos", "events_url": "https://api.github.com/users/YuriOsokin/events{/privacy}", "received_events_url": "https://api.github.com/users/YuriOsokin/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2017-06-05T12:27:46Z", "updated_at": "2017-06-05T16:04:47Z", "closed_at": null, "author_association": "NONE", "active_lock_reason": null, "body": "Hello,\r\n\r\nI have downloaded the source code, build it with standard options with \"make\". It went well. Then I ran the \"./SimbodyInstallTest\". It opened the visualizer, draw the pendulum and stopped. Closing the visualizer window lead to following error in terminal \"freeglut  ERROR:  Function <glutPostRedisplay> called without first calling 'glutInit'\".\r\nIn example Pendulum in the SimBody build folder the visualizer window hangs up too. Closing the window leads to the following error: \"freeglut (simbody-visualizer): ERROR: Function <glutPostRedisplay> called with no current window defined.\" Then it prints the backtrace and then memory map.  The backtrace as is follows:\r\n*** Error in `simbody-visualizer': corrupted double-linked list: 0x09bdc218 ***\r\n======= Backtrace: =========\r\n/lib/i386-linux-gnu/libc.so.6(+0x67377)[0xb6fbb377]\r\n/lib/i386-linux-gnu/libc.so.6(+0x6d2f7)[0xb6fc12f7]\r\n/lib/i386-linux-gnu/libc.so.6(+0x6e326)[0xb6fc2326]\r\n/usr/lib/i386-linux-gnu/mesa/libGL.so.1(+0x4090f)[0xb767e90f]\r\n/usr/lib/i386-linux-gnu/mesa/libGL.so.1(glXDestroyContext+0x111)[0xb76530b1]\r\n/usr/lib/i386-linux-gnu/libglut.so.3(fgCloseWindow+0x44)[0xb7744364]\r\n/usr/lib/i386-linux-gnu/libglut.so.3(fgDestroyWindow+0xa8)[0xb7742b18]\r\n/usr/lib/i386-linux-gnu/libglut.so.3(fgDestroyMenu+0xef)[0xb7742cbf]\r\n/usr/lib/i386-linux-gnu/libglut.so.3(fgDestroyStructure+0x30)[0xb7742d70]\r\n/usr/lib/i386-linux-gnu/libglut.so.3(fgDeinitialize+0x70)[0xb773c100]\r\n/usr/lib/i386-linux-gnu/libglut.so.3(fgError+0xdf)[0xb773ea6f]\r\n/usr/lib/i386-linux-gnu/libglut.so.3(glutPostRedisplay+0x75)[0xb77346b5]\r\nsimbody-visualizer(_Z14listenForInputPv+0x2d69)[0x8059f99]\r\n/lib/i386-linux-gnu/libpthread.so.0(+0x6295)[0xb7303295]\r\n/lib/i386-linux-gnu/libc.so.6(clone+0x6e)[0xb703aeee]\r\n\r\nUbuntu 16.04, 32 bit\r\ncmake version 3.5.1\r\nGNU make 4.1\r\n/usr/bin/cc and /usr/bin/c++ are standard Ubuntu compilers version 5.4.0\r\n\r\nThanks, Yuri\r\n", "reactions": {"url": "https://api.github.com/repos/simbody/simbody/issues/564/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/simbody/simbody/issues/564/timeline", "performed_via_github_app": null}, {"url": "https://api.github.com/repos/simbody/simbody/issues/566", "repository_url": "https://api.github.com/repos/simbody/simbody", "labels_url": "https://api.github.com/repos/simbody/simbody/issues/566/labels{/name}", "comments_url": "https://api.github.com/repos/simbody/simbody/issues/566/comments", "events_url": "https://api.github.com/repos/simbody/simbody/issues/566/events", "html_url": "https://github.com/simbody/simbody/issues/566", "id": 236758622, "node_id": "MDU6SXNzdWUyMzY3NTg2MjI=", "number": 566, "title": "RowVector cannot be created with 0 elements", "user": {"login": "chrisdembia", "id": 846001, "node_id": "MDQ6VXNlcjg0NjAwMQ==", "avatar_url": "https://avatars.githubusercontent.com/u/846001?v=4", "gravatar_id": "", "url": "https://api.github.com/users/chrisdembia", "html_url": "https://github.com/chrisdembia", "followers_url": "https://api.github.com/users/chrisdembia/followers", "following_url": "https://api.github.com/users/chrisdembia/following{/other_user}", "gists_url": "https://api.github.com/users/chrisdembia/gists{/gist_id}", "starred_url": "https://api.github.com/users/chrisdembia/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/chrisdembia/subscriptions", "organizations_url": "https://api.github.com/users/chrisdembia/orgs", "repos_url": "https://api.github.com/users/chrisdembia/repos", "events_url": "https://api.github.com/users/chrisdembia/events{/privacy}", "received_events_url": "https://api.github.com/users/chrisdembia/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2017-06-19T01:15:01Z", "updated_at": "2017-06-19T02:30:37Z", "closed_at": null, "author_association": "MEMBER", "active_lock_reason": null, "body": "Constructing a RowVector as `RowVector rv(0)` results in a vector with `rv.size() == 1`. See #565 for a test case that shows this behavior. That test case gives the following error:\r\n\r\n```\r\nexception: SimTK Exception thrown at TestBigMatrix.cpp:295:\r\n  Internal bug detected: Test condition failed.\r\n  (Assertion '(rv0.size() == 0)' failed).\r\n  Please file an Issue at https://github.com/simbody/simbody/issues.\r\n  Include the above information and anything else needed to reproduce the problem.\r\n```", "reactions": {"url": "https://api.github.com/repos/simbody/simbody/issues/566/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/simbody/simbody/issues/566/timeline", "performed_via_github_app": null}, {"url": "https://api.github.com/repos/simbody/simbody/issues/567", "repository_url": "https://api.github.com/repos/simbody/simbody", "labels_url": "https://api.github.com/repos/simbody/simbody/issues/567/labels{/name}", "comments_url": "https://api.github.com/repos/simbody/simbody/issues/567/comments", "events_url": "https://api.github.com/repos/simbody/simbody/issues/567/events", "html_url": "https://github.com/simbody/simbody/issues/567", "id": 237622178, "node_id": "MDU6SXNzdWUyMzc2MjIxNzg=", "number": 567, "title": "States cannot be used with different Systems", "user": {"login": "chrisdembia", "id": 846001, "node_id": "MDQ6VXNlcjg0NjAwMQ==", "avatar_url": "https://avatars.githubusercontent.com/u/846001?v=4", "gravatar_id": "", "url": "https://api.github.com/users/chrisdembia", "html_url": "https://github.com/chrisdembia", "followers_url": "https://api.github.com/users/chrisdembia/followers", "following_url": "https://api.github.com/users/chrisdembia/following{/other_user}", "gists_url": "https://api.github.com/users/chrisdembia/gists{/gist_id}", "starred_url": "https://api.github.com/users/chrisdembia/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/chrisdembia/subscriptions", "organizations_url": "https://api.github.com/users/chrisdembia/orgs", "repos_url": "https://api.github.com/users/chrisdembia/repos", "events_url": "https://api.github.com/users/chrisdembia/events{/privacy}", "received_events_url": "https://api.github.com/users/chrisdembia/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 52267851, "node_id": "MDU6TGFiZWw1MjI2Nzg1MQ==", "url": "https://api.github.com/repos/simbody/simbody/labels/bug", "name": "bug", "color": "fc2929", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2017-06-21T18:20:01Z", "updated_at": "2017-08-15T15:02:32Z", "closed_at": "2017-08-15T15:02:32Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "When we added support for parallel calculation of forces, we coupled State objects to the System they came from, by caching `Force*`s from the System in the State (see [here](https://github.com/simbody/simbody/blob/master/Simbody/src/GeneralForceSubsystem.cpp#L643) and [here](https://github.com/simbody/simbody/blob/master/Simbody/src/GeneralForceSubsystem.cpp#L713)).  This prevents users from easily using a state from one instance of a System with a different but identical instance of the System.\r\n\r\nRelated: https://github.com/opensim-org/opensim-core/issues/1455, https://github.com/opensim-org/opensim-core/issues/1785", "reactions": {"url": "https://api.github.com/repos/simbody/simbody/issues/567/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/simbody/simbody/issues/567/timeline", "performed_via_github_app": null}, {"url": "https://api.github.com/repos/simbody/simbody/issues/572", "repository_url": "https://api.github.com/repos/simbody/simbody", "labels_url": "https://api.github.com/repos/simbody/simbody/issues/572/labels{/name}", "comments_url": "https://api.github.com/repos/simbody/simbody/issues/572/comments", "events_url": "https://api.github.com/repos/simbody/simbody/issues/572/events", "html_url": "https://github.com/simbody/simbody/issues/572", "id": 252468986, "node_id": "MDU6SXNzdWUyNTI0Njg5ODY=", "number": 572, "title": "Update README for Visual Studio 2017.", "user": {"login": "chrisdembia", "id": 846001, "node_id": "MDQ6VXNlcjg0NjAwMQ==", "avatar_url": "https://avatars.githubusercontent.com/u/846001?v=4", "gravatar_id": "", "url": "https://api.github.com/users/chrisdembia", "html_url": "https://github.com/chrisdembia", "followers_url": "https://api.github.com/users/chrisdembia/followers", "following_url": "https://api.github.com/users/chrisdembia/following{/other_user}", "gists_url": "https://api.github.com/users/chrisdembia/gists{/gist_id}", "starred_url": "https://api.github.com/users/chrisdembia/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/chrisdembia/subscriptions", "organizations_url": "https://api.github.com/users/chrisdembia/orgs", "repos_url": "https://api.github.com/users/chrisdembia/repos", "events_url": "https://api.github.com/users/chrisdembia/events{/privacy}", "received_events_url": "https://api.github.com/users/chrisdembia/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 54361018, "node_id": "MDU6TGFiZWw1NDM2MTAxOA==", "url": "https://api.github.com/repos/simbody/simbody/labels/build", "name": "build", "color": "bfe5bf", "default": false, "description": null}, {"id": 59408209, "node_id": "MDU6TGFiZWw1OTQwODIwOQ==", "url": "https://api.github.com/repos/simbody/simbody/labels/documentation", "name": "documentation", "color": "bfdadc", "default": true, "description": null}, {"id": 108217628, "node_id": "MDU6TGFiZWwxMDgyMTc2Mjg=", "url": "https://api.github.com/repos/simbody/simbody/labels/help%20wanted", "name": "help wanted", "color": "009800", "default": true, "description": null}], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-08-24T02:28:07Z", "updated_at": "2018-01-17T23:19:56Z", "closed_at": null, "author_association": "MEMBER", "active_lock_reason": null, "body": "The README provides instructions for building Simbody with VS 2015. However, it is now much easier to download VS 2017. We should update the README to provide instructions for building with VS 2017.", "reactions": {"url": "https://api.github.com/repos/simbody/simbody/issues/572/reactions", "total_count": 1, "+1": 1, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/simbody/simbody/issues/572/timeline", "performed_via_github_app": null}, {"url": "https://api.github.com/repos/simbody/simbody/issues/574", "repository_url": "https://api.github.com/repos/simbody/simbody", "labels_url": "https://api.github.com/repos/simbody/simbody/issues/574/labels{/name}", "comments_url": "https://api.github.com/repos/simbody/simbody/issues/574/comments", "events_url": "https://api.github.com/repos/simbody/simbody/issues/574/events", "html_url": "https://github.com/simbody/simbody/issues/574", "id": 253885795, "node_id": "MDU6SXNzdWUyNTM4ODU3OTU=", "number": 574, "title": "std::memcpy does not work with ADOL-C type adouble", "user": {"login": "antoinefalisse", "id": 19328993, "node_id": "MDQ6VXNlcjE5MzI4OTkz", "avatar_url": "https://avatars.githubusercontent.com/u/19328993?v=4", "gravatar_id": "", "url": "https://api.github.com/users/antoinefalisse", "html_url": "https://github.com/antoinefalisse", "followers_url": "https://api.github.com/users/antoinefalisse/followers", "following_url": "https://api.github.com/users/antoinefalisse/following{/other_user}", "gists_url": "https://api.github.com/users/antoinefalisse/gists{/gist_id}", "starred_url": "https://api.github.com/users/antoinefalisse/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/antoinefalisse/subscriptions", "organizations_url": "https://api.github.com/users/antoinefalisse/orgs", "repos_url": "https://api.github.com/users/antoinefalisse/repos", "events_url": "https://api.github.com/users/antoinefalisse/events{/privacy}", "received_events_url": "https://api.github.com/users/antoinefalisse/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-08-30T05:53:35Z", "updated_at": "2017-09-01T15:40:42Z", "closed_at": "2017-09-01T15:40:42Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "We are trying to bring automatic differentiation to Simbody using ADOL-C. We have observed that std::memcpy does not work with adoubles, since this will copy the location in the tape and results in a shallow copy rather than a deep copy. Instead of using std::memcpy, we have seen that we could use std::copy which works with adoubles. We read that std::copy would delegate to std::memcpy when it is appropriate. We therefore would like to change the calls to std::memcpy by std::copy.", "reactions": {"url": "https://api.github.com/repos/simbody/simbody/issues/574/reactions", "total_count": 1, "+1": 1, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/simbody/simbody/issues/574/timeline", "performed_via_github_app": null}, {"url": "https://api.github.com/repos/simbody/simbody/issues/577", "repository_url": "https://api.github.com/repos/simbody/simbody", "labels_url": "https://api.github.com/repos/simbody/simbody/issues/577/labels{/name}", "comments_url": "https://api.github.com/repos/simbody/simbody/issues/577/comments", "events_url": "https://api.github.com/repos/simbody/simbody/issues/577/events", "html_url": "https://github.com/simbody/simbody/issues/577", "id": 254693836, "node_id": "MDU6SXNzdWUyNTQ2OTM4MzY=", "number": 577, "title": "Bringing automatic differentiation to Simbody through ADOL-C", "user": {"login": "antoinefalisse", "id": 19328993, "node_id": "MDQ6VXNlcjE5MzI4OTkz", "avatar_url": "https://avatars.githubusercontent.com/u/19328993?v=4", "gravatar_id": "", "url": "https://api.github.com/users/antoinefalisse", "html_url": "https://github.com/antoinefalisse", "followers_url": "https://api.github.com/users/antoinefalisse/followers", "following_url": "https://api.github.com/users/antoinefalisse/following{/other_user}", "gists_url": "https://api.github.com/users/antoinefalisse/gists{/gist_id}", "starred_url": "https://api.github.com/users/antoinefalisse/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/antoinefalisse/subscriptions", "organizations_url": "https://api.github.com/users/antoinefalisse/orgs", "repos_url": "https://api.github.com/users/antoinefalisse/repos", "events_url": "https://api.github.com/users/antoinefalisse/events{/privacy}", "received_events_url": "https://api.github.com/users/antoinefalisse/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2017-09-01T16:39:47Z", "updated_at": "2018-03-01T07:09:35Z", "closed_at": null, "author_association": "MEMBER", "active_lock_reason": null, "body": "We have transformed part of Simbody to enable the use of automatic differentiation using ADOL-C which is an operator overloading tool. The key concept is the introduction of an active scalar type called _adouble_ whose real part is of the standard type _double_. All variables that may be considered as differentiable quantities should be declared as active and have _adouble_ as data type.\r\n\r\nWe are wondering what should be the best way to bring all our changes to Simbody. @chrisdembia suggested to create a branch _autodiff_ where we could progressively bring our changes through pull requests. Would that be an option?\r\n\r\nThe approach we have followed so far is that we assigned _Real_ to _adouble_ instead of _double_. In some cases, this does not require any further changes. In other cases, this requires adding cases (e.g. cases in NTraits such as Widest, Narrowest, isNumericallyEqual). To make sure our changes do not affect the original Simbody, we defined through CMake a pre-processor `SimTK_REAL_IS_ADOUBLE` and introduced our changes for instance by doing:\r\n```\r\n#ifdef SimTK_REAL_IS_ADOUBLE \r\n    template <> class NTraits<adouble>;\r\n#endif\r\n```\r\nIs that a valid option? In brief, the users would have the possibility, through CMake, to build the libraries using ADOL-C (this would be a third case after shared and static) and that would assign _Real_ to _adouble_.\r\n\r\nAlso, some parts of Simbody are not differentiable or are, currently, not transformed to be used with ADOL-C. This is the case for contact models but also when using Lapack, optimizers, or integrators. The approach we are following is that we would return a run time error if users are trying to use these features with automatic differentiation. Is that a good idea?\r\n\r\nWe have also developed a differentiable contact model which could be used with automatic differentiation. We are planning to bring it to Simbody (as a new class of SimTKsimbody).\r\n\r\nOur proposed timeline would be to have one library merged per month starting in October so that the code would be fully integrated in this new branch by the end of December. We would divide each library in a certain number of pull requests (e.g. one per week). This is of course only a suggestion :)", "reactions": {"url": "https://api.github.com/repos/simbody/simbody/issues/577/reactions", "total_count": 2, "+1": 2, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/simbody/simbody/issues/577/timeline", "performed_via_github_app": null}, {"url": "https://api.github.com/repos/simbody/simbody/issues/581", "repository_url": "https://api.github.com/repos/simbody/simbody", "labels_url": "https://api.github.com/repos/simbody/simbody/issues/581/labels{/name}", "comments_url": "https://api.github.com/repos/simbody/simbody/issues/581/comments", "events_url": "https://api.github.com/repos/simbody/simbody/issues/581/events", "html_url": "https://github.com/simbody/simbody/issues/581", "id": 260498413, "node_id": "MDU6SXNzdWUyNjA0OTg0MTM=", "number": 581, "title": "Clang warning about ignored explicit instantiation of Measure_<Vector>::Zero", "user": {"login": "chrisdembia", "id": 846001, "node_id": "MDQ6VXNlcjg0NjAwMQ==", "avatar_url": "https://avatars.githubusercontent.com/u/846001?v=4", "gravatar_id": "", "url": "https://api.github.com/users/chrisdembia", "html_url": "https://github.com/chrisdembia", "followers_url": "https://api.github.com/users/chrisdembia/followers", "following_url": "https://api.github.com/users/chrisdembia/following{/other_user}", "gists_url": "https://api.github.com/users/chrisdembia/gists{/gist_id}", "starred_url": "https://api.github.com/users/chrisdembia/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/chrisdembia/subscriptions", "organizations_url": "https://api.github.com/users/chrisdembia/orgs", "repos_url": "https://api.github.com/users/chrisdembia/repos", "events_url": "https://api.github.com/users/chrisdembia/events{/privacy}", "received_events_url": "https://api.github.com/users/chrisdembia/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-09-26T05:48:24Z", "updated_at": "2017-09-30T17:59:55Z", "closed_at": "2017-09-30T17:59:55Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "Apple Clang 9 gives the following warning:\r\n\r\n```cpp\r\n/Users/chris/repos/simbody/4/simbody/SimTKcommon/Simulation/src/Measure.cpp:62:1: warning:\r\n      explicit instantiation of 'Zero' that occurs after an explicit specialization\r\n      has no effect [-Winstantiation-after-specialization]\r\ntemplate class Measure_<Vector>::Zero;\r\n^\r\n/Users/chris/repos/simbody/4/simbody/SimTKcommon/Simulation/include/SimTKcommon/internal/Measure.h:376:27: note:\r\n      previous template specialization is here\r\nclass Measure_< Vector >::Zero : public Measure_< Vector >::Constant {\r\n\r\n```\r\n\r\nI could remove the explicit instantiations, but are they still useful with MSVC, considering that MSVC does not have two-phase lookup (although, newer versions of MSVC will have two-phase lookup)?", "reactions": {"url": "https://api.github.com/repos/simbody/simbody/issues/581/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/simbody/simbody/issues/581/timeline", "performed_via_github_app": null}, {"url": "https://api.github.com/repos/simbody/simbody/issues/582", "repository_url": "https://api.github.com/repos/simbody/simbody", "labels_url": "https://api.github.com/repos/simbody/simbody/issues/582/labels{/name}", "comments_url": "https://api.github.com/repos/simbody/simbody/issues/582/comments", "events_url": "https://api.github.com/repos/simbody/simbody/issues/582/events", "html_url": "https://github.com/simbody/simbody/issues/582", "id": 260532695, "node_id": "MDU6SXNzdWUyNjA1MzI2OTU=", "number": 582, "title": "error: 'class SimTK::ContactTrackerSubsystem' has no member named 'getContactSurfaceIndex';", "user": {"login": "fermionboson101", "id": 26332881, "node_id": "MDQ6VXNlcjI2MzMyODgx", "avatar_url": "https://avatars.githubusercontent.com/u/26332881?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fermionboson101", "html_url": "https://github.com/fermionboson101", "followers_url": "https://api.github.com/users/fermionboson101/followers", "following_url": "https://api.github.com/users/fermionboson101/following{/other_user}", "gists_url": "https://api.github.com/users/fermionboson101/gists{/gist_id}", "starred_url": "https://api.github.com/users/fermionboson101/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fermionboson101/subscriptions", "organizations_url": "https://api.github.com/users/fermionboson101/orgs", "repos_url": "https://api.github.com/users/fermionboson101/repos", "events_url": "https://api.github.com/users/fermionboson101/events{/privacy}", "received_events_url": "https://api.github.com/users/fermionboson101/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-09-26T08:19:56Z", "updated_at": "2017-09-26T15:39:26Z", "closed_at": null, "author_association": "NONE", "active_lock_reason": null, "body": "unable to run an example /simbody/examples/ExamplePendulum.cpp\r\nand it is giving an error.\r\n\r\n> /home/rahul/Documents/learnc++/Git/simbody/examples/ExampleContactPlayground.cpp: In member function 'virtual void MyReporter::handleEvent(const SimTK::State&) const':\r\n/home/rahul/Documents/learnc++/Git/simbody/examples/ExampleContactPlayground.cpp:160:33: warning: unused variable 'force' [-Wunused-variable]\r\n             const ContactForce& force = m_compliant.getContactForce(state,i);\r\n                                 ^~~~~\r\n/home/rahul/Documents/learnc++/Git/simbody/examples/ExampleContactPlayground.cpp: In function 'int main()':\r\n/home/rahul/Documents/learnc++/Git/simbody/examples/ExampleContactPlayground.cpp:408:33: **error: **'class SimTK::ContactTrackerSubsystem' has no member named 'getContactSurfaceIndex'; did you mean 'getContactSurface'?\r\n                    (int)tracker.getContactSurfaceIndex(mbx,i));\r\n                                 ^~~~~~~~~~~~~~~~~~~~~~>****\r\n\r\n", "reactions": {"url": "https://api.github.com/repos/simbody/simbody/issues/582/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/simbody/simbody/issues/582/timeline", "performed_via_github_app": null}, {"url": "https://api.github.com/repos/simbody/simbody/issues/584", "repository_url": "https://api.github.com/repos/simbody/simbody", "labels_url": "https://api.github.com/repos/simbody/simbody/issues/584/labels{/name}", "comments_url": "https://api.github.com/repos/simbody/simbody/issues/584/comments", "events_url": "https://api.github.com/repos/simbody/simbody/issues/584/events", "html_url": "https://github.com/simbody/simbody/issues/584", "id": 261871466, "node_id": "MDU6SXNzdWUyNjE4NzE0NjY=", "number": 584, "title": "Replace pthread with c++11 threading support", "user": {"login": "chrisdembia", "id": 846001, "node_id": "MDQ6VXNlcjg0NjAwMQ==", "avatar_url": "https://avatars.githubusercontent.com/u/846001?v=4", "gravatar_id": "", "url": "https://api.github.com/users/chrisdembia", "html_url": "https://github.com/chrisdembia", "followers_url": "https://api.github.com/users/chrisdembia/followers", "following_url": "https://api.github.com/users/chrisdembia/following{/other_user}", "gists_url": "https://api.github.com/users/chrisdembia/gists{/gist_id}", "starred_url": "https://api.github.com/users/chrisdembia/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/chrisdembia/subscriptions", "organizations_url": "https://api.github.com/users/chrisdembia/orgs", "repos_url": "https://api.github.com/users/chrisdembia/repos", "events_url": "https://api.github.com/users/chrisdembia/events{/privacy}", "received_events_url": "https://api.github.com/users/chrisdembia/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2017-09-30T20:52:41Z", "updated_at": "2018-01-08T02:44:09Z", "closed_at": "2018-01-08T02:44:09Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "Pthreads for windows has an LGPL license. In order to avoid that license, we should replace this library with C++11's std::thread, etc.\r\n\r\nI've already started to work on this, and I am a little more than halfway through.\r\n\r\n@sherm1 do you think you would you accept a PR (or PRs) for this?\r\n\r\nRelated: #422.\r\n\r\n- [x] AtomicInteger\r\n- [x] ThreadLocal\r\n- [x] ParallelWorkQueue\r\n- [x] ParallelExecutor\r\n- [x] VisualizerProtocol\r\n- [x] Visualizer_InputListener\r\n- [x] Visualizer\r\n- [x] simbody-visualizer\r\n- [x] Delete pthreads for windows files.\r\n- [x] Update changelog.\r\n  ", "reactions": {"url": "https://api.github.com/repos/simbody/simbody/issues/584/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/simbody/simbody/issues/584/timeline", "performed_via_github_app": null}, {"url": "https://api.github.com/repos/simbody/simbody/issues/589", "repository_url": "https://api.github.com/repos/simbody/simbody", "labels_url": "https://api.github.com/repos/simbody/simbody/issues/589/labels{/name}", "comments_url": "https://api.github.com/repos/simbody/simbody/issues/589/comments", "events_url": "https://api.github.com/repos/simbody/simbody/issues/589/events", "html_url": "https://github.com/simbody/simbody/issues/589", "id": 267486187, "node_id": "MDU6SXNzdWUyNjc0ODYxODc=", "number": 589, "title": "SimbodyConfig.cmake should handle BUILD_DYNAMIC_LIBRARIES=off", "user": {"login": "chrisdembia", "id": 846001, "node_id": "MDQ6VXNlcjg0NjAwMQ==", "avatar_url": "https://avatars.githubusercontent.com/u/846001?v=4", "gravatar_id": "", "url": "https://api.github.com/users/chrisdembia", "html_url": "https://github.com/chrisdembia", "followers_url": "https://api.github.com/users/chrisdembia/followers", "following_url": "https://api.github.com/users/chrisdembia/following{/other_user}", "gists_url": "https://api.github.com/users/chrisdembia/gists{/gist_id}", "starred_url": "https://api.github.com/users/chrisdembia/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/chrisdembia/subscriptions", "organizations_url": "https://api.github.com/users/chrisdembia/orgs", "repos_url": "https://api.github.com/users/chrisdembia/repos", "events_url": "https://api.github.com/users/chrisdembia/events{/privacy}", "received_events_url": "https://api.github.com/users/chrisdembia/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 54361018, "node_id": "MDU6TGFiZWw1NDM2MTAxOA==", "url": "https://api.github.com/repos/simbody/simbody/labels/build", "name": "build", "color": "bfe5bf", "default": false, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2017-10-22T18:13:16Z", "updated_at": "2018-01-08T22:54:00Z", "closed_at": "2018-01-08T22:54:00Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "PR #568 allows one to build only static libraries. However, [SimbodyConfig.cmake.in](https://github.com/simbody/simbody/blob/master/cmake/SimbodyConfig.cmake.in) does not handle this scenario. We should set `Simbody_LIBRARIES` to `Simbody_LIBRARIES-NOTFOUND` if shared libraries are not built.", "reactions": {"url": "https://api.github.com/repos/simbody/simbody/issues/589/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/simbody/simbody/issues/589/timeline", "performed_via_github_app": null}, {"url": "https://api.github.com/repos/simbody/simbody/issues/591", "repository_url": "https://api.github.com/repos/simbody/simbody", "labels_url": "https://api.github.com/repos/simbody/simbody/issues/591/labels{/name}", "comments_url": "https://api.github.com/repos/simbody/simbody/issues/591/comments", "events_url": "https://api.github.com/repos/simbody/simbody/issues/591/events", "html_url": "https://github.com/simbody/simbody/issues/591", "id": 275702458, "node_id": "MDU6SXNzdWUyNzU3MDI0NTg=", "number": 591, "title": "MobilizedBody::Translation::getMobilizerAcceleration() returns velocity", "user": {"login": "apalazzi", "id": 4243291, "node_id": "MDQ6VXNlcjQyNDMyOTE=", "avatar_url": "https://avatars.githubusercontent.com/u/4243291?v=4", "gravatar_id": "", "url": "https://api.github.com/users/apalazzi", "html_url": "https://github.com/apalazzi", "followers_url": "https://api.github.com/users/apalazzi/followers", "following_url": "https://api.github.com/users/apalazzi/following{/other_user}", "gists_url": "https://api.github.com/users/apalazzi/gists{/gist_id}", "starred_url": "https://api.github.com/users/apalazzi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/apalazzi/subscriptions", "organizations_url": "https://api.github.com/users/apalazzi/orgs", "repos_url": "https://api.github.com/users/apalazzi/repos", "events_url": "https://api.github.com/users/apalazzi/events{/privacy}", "received_events_url": "https://api.github.com/users/apalazzi/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2017-11-21T12:57:14Z", "updated_at": "2018-01-08T02:03:45Z", "closed_at": "2018-01-08T02:03:45Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi,\r\n\r\nBasically I'm using a MobilizedBody::Translation and when I call the getMobilizerAcceleration the result I get is the velocity and not the acceleration.\r\n\r\nFor more infos see this thread on the forum: [https://simtk.org/plugins/phpBB/viewtopicPhpbb.php?f=47&t=8426&p=0&start=0&view=&sid=07e017617cfa1528b294efabd1dbe21c](url)\r\n\r\nTested also with latest 3.5 from github.\r\n\r\nBye\r\nAndrea", "reactions": {"url": "https://api.github.com/repos/simbody/simbody/issues/591/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/simbody/simbody/issues/591/timeline", "performed_via_github_app": null}, {"url": "https://api.github.com/repos/simbody/simbody/issues/593", "repository_url": "https://api.github.com/repos/simbody/simbody", "labels_url": "https://api.github.com/repos/simbody/simbody/issues/593/labels{/name}", "comments_url": "https://api.github.com/repos/simbody/simbody/issues/593/comments", "events_url": "https://api.github.com/repos/simbody/simbody/issues/593/events", "html_url": "https://github.com/simbody/simbody/issues/593", "id": 278483754, "node_id": "MDU6SXNzdWUyNzg0ODM3NTQ=", "number": 593, "title": "Build fails with intel compiler. Error: more than one instance of overloaded function matches the argument list", "user": {"login": "CSPer", "id": 10060892, "node_id": "MDQ6VXNlcjEwMDYwODky", "avatar_url": "https://avatars.githubusercontent.com/u/10060892?v=4", "gravatar_id": "", "url": "https://api.github.com/users/CSPer", "html_url": "https://github.com/CSPer", "followers_url": "https://api.github.com/users/CSPer/followers", "following_url": "https://api.github.com/users/CSPer/following{/other_user}", "gists_url": "https://api.github.com/users/CSPer/gists{/gist_id}", "starred_url": "https://api.github.com/users/CSPer/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/CSPer/subscriptions", "organizations_url": "https://api.github.com/users/CSPer/orgs", "repos_url": "https://api.github.com/users/CSPer/repos", "events_url": "https://api.github.com/users/CSPer/events{/privacy}", "received_events_url": "https://api.github.com/users/CSPer/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2017-12-01T14:32:26Z", "updated_at": "2017-12-01T14:32:26Z", "closed_at": null, "author_association": "NONE", "active_lock_reason": null, "body": "The error message is as follows:\r\n\r\n      simbody-Simbody-3.5.4/SimTKcommon/SmallMatrix/include/SimTKcommon/internal/Vec.h(69): error: more than one instance of overloaded function \"SimTK::Impl::conformingSubtract\" matches the argument list:\r\n\r\n      function template \"void SimTK::Impl::conformingSubtract(const SimTK::Vec<1, E1, S1> &, const SimTK::Vec<1, E2, S2> &, SimTK::Vec<1, SimTK::CNT<E1>::Result<E2>::Sub, 1> &)\"\r\n\r\n      function template \"void SimTK::Impl::conformingSubtract(const SimTK::Vec<N, E1, S1> &, const SimTK::Vec<N, E2, S2> &, SimTK::Vec<N, SimTK::CNT<E1>::Result<E2>::Sub, 1> &)\"\r\n \r\n      argument types are: (const SimTK::Vec<1, double, 3>, const SimTK::Vec<1, SimTK::Real, 1>, SimTK::Vec<1, SimTK::Real, 1>)\r\n\r\n      conformingSubtract(reinterpret_cast<const Vec<N-1,E1,S1>&>(r1), \r\n      ^\r\n          detected during:\r\n            instantiation of \"void SimTK::Impl::conformingSubtract(const SimTK::Vec<N, E1, S1> &, const SimTK::Vec<N, E2, S2> &, SimTK::Vec<N, SimTK::CNT<E1>::Result<E2>::Sub, 1> &) [with N=2, E1=double, S1=3, E2=SimTK::Real={SimTK_Real={double}}, S2=1]\" at line 72\r\n            instantiation of \"void SimTK::Impl::conformingSubtract(const SimTK::Vec<N, E1, S1> &, const SimTK::Vec<N, E2, S2> &, SimTK::Vec<N, SimTK::CNT<E1>::Result<E2>::Sub, 1> &) [with N=3, E1=double, S1=3, E2=SimTK::Real={SimTK_Real={double}}, S2=1]\" at line 563\r\n            instantiation of \"SimTK::Vec<M, SimTK::CNT<ELT>::Result<EE>::Sub, 1> SimTK::Vec<M, ELT, STRIDE>::conformingSubtract(const SimTK::Vec<M, EE, SS> &) const [with M=3, ELT=double, STRIDE=3, EE=SimTK::Real={SimTK_Real={double}}, SS=1]\" at line 413 of \"simbody-Simbody-3.5.4/SimTKcommon/SmallMatrix/include/SimTKcommon/internal/ResultType.h\"\r\n            instantiation of \"SimTK::SubCNTs<NRow, 1, LArgDepth, SimTK::Vec<NRow, LE, LRS>, LCS, LRS, NRow, 1, RArgDepth, SimTK::Vec<NRow, RE, RRS>, RCS, RRS>::Type SimTK::SubCNTs<NRow, 1, LArgDepth, SimTK::Vec<NRow, LE, LRS>, LCS, LRS, NRow, 1, RArgDepth, SimTK::Vec<NRow, RE, RRS>, RCS, RRS>::perform(const SimTK::SubCNTs<NRow, 1, LArgDepth, SimTK::Vec<NRow, LE, LRS>, LCS, LRS, NRow, 1, RArgDepth, SimTK::Vec<NRow, RE, RRS>, RCS, RRS>::L &, const SimTK::SubCNTs<NRow, 1, LArgDepth, SimTK::Vec<NRow, LE, LRS>, LCS, LRS, NRow, 1, RArgDepth, SimTK::Vec<NRow, RE, RRS>, RCS, RRS>::R &) [with NRow=3, LArgDepth=1, LE=double, LCS=9, LRS=3, RArgDepth=1, RE=SimTK::Real={SimTK_Real={double}}, RCS=3, RRS=1]\" at line 1023\r\n            instantiation of \"SimTK::Vec<M, E1, S1>::Result<SimTK::Vec<M, E2, S2>>::Sub SimTK::operator-(const SimTK::Vec<M, E1, S1> &, const SimTK::Vec<M, E2, S2> &) [with M=3, E1=double, S1=3, E2=SimTK::Real={SimTK_Real={double}}, S2=1]\" at line 596 of \"simbody-Simbody-3.5.4/SimTKcommon/SmallMatrix/include/SimTKcommon/internal/Mat.h\"\r\n            instantiation of \"SimTK::Mat<M, N, ELT, CS, RS>::Result<SimTK::Mat<M, N, E2, CS2, RS2>>::Sub SimTK::Mat<M, N, ELT, CS, RS>::conformingSubtract(const SimTK::Mat<M, N, E2, CS2, RS2> &) const [with M=3, N=3, ELT=double, CS=1, RS=3, E2=SimTK::Real={SimTK_Real={double}}, CS2=3, RS2=1]\" at line 518 of \"simbody-Simbody-3.5.4/SimTKcommon/SmallMatrix/include/SimTKcommon/internal/ResultType.h\"\r\n            instantiation of \"SimTK::SubCNTs<NRow, NCol, LArgDepth, SimTK::Mat<NRow, NCol, LE, LCS, LRS>, LCS, LRS, NRow, NCol, RArgDepth, SimTK::Mat<NRow, NCol, RE, RCS, RRS>, RCS, RRS>::Type SimTK::SubCNTs<NRow, NCol, LArgDepth, SimTK::Mat<NRow, NCol, LE, LCS, LRS>, LCS, LRS, NRow, NCol, RArgDepth, SimTK::Mat<NRow, NCol, RE, RCS, RRS>, RCS, RRS>::perform(const SimTK::SubCNTs<NRow, NCol, LArgDepth, SimTK::Mat<NRow, NCol, LE, LCS, LRS>, LCS, LRS, NRow, NCol, RArgDepth, SimTK::Mat<NRow, NCol, RE, RCS, RRS>, RCS, RRS>::L &, const SimTK::SubCNTs<NRow, NCol, LArgDepth, SimTK::Mat<NRow, NCol, LE, LCS, LRS>, LCS, LRS, NRow, NCol, RArgDepth, SimTK::Mat<NRow, NCol, RE, RCS, RRS>, RCS, RRS>::R &) [with NRow=3, NCol=3, LArgDepth=1, LE=double, LCS=1, LRS=3, RArgDepth=1, RE=SimTK::Real={SimTK_Real={double}}, RCS=3, RRS=1]\" at line 1256 of \"simbody-Simbody-3.5.4/SimTKcommon/SmallMatrix/include/SimTKcommon/internal/Mat.h\"\r\n            instantiation of \"SimTK::Mat<M, N, EL, CSL, RSL>::Result<SimTK::Mat<M, N, ER, CSR, RSR>>::Sub SimTK::operator-(const SimTK::Mat<M, N, EL, CSL, RSL> &, const SimTK::Mat<M, N, ER, CSR, RSR> &) [with M=3, N=3, EL=double, CSL=1, RSL=3, ER=SimTK::Real={SimTK_Real={double}}, CSR=3, RSR=1]\" at line 760 of \"simbody-Simbody-3.5.4/SimTKcommon/Mechanics/include/SimTKcommon/internal/SpatialAlgebra.h\"\r\n\r\n\r\nWhen compiling via gcc, the error disappears and it builds successfully\r\n\r\n\r\n\r\n\r\n\r\n\r\n", "reactions": {"url": "https://api.github.com/repos/simbody/simbody/issues/593/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/simbody/simbody/issues/593/timeline", "performed_via_github_app": null}, {"url": "https://api.github.com/repos/simbody/simbody/issues/596", "repository_url": "https://api.github.com/repos/simbody/simbody", "labels_url": "https://api.github.com/repos/simbody/simbody/issues/596/labels{/name}", "comments_url": "https://api.github.com/repos/simbody/simbody/issues/596/comments", "events_url": "https://api.github.com/repos/simbody/simbody/issues/596/events", "html_url": "https://github.com/simbody/simbody/issues/596", "id": 281391772, "node_id": "MDU6SXNzdWUyODEzOTE3NzI=", "number": 596, "title": "Remove support for long double", "user": {"login": "antoinefalisse", "id": 19328993, "node_id": "MDQ6VXNlcjE5MzI4OTkz", "avatar_url": "https://avatars.githubusercontent.com/u/19328993?v=4", "gravatar_id": "", "url": "https://api.github.com/users/antoinefalisse", "html_url": "https://github.com/antoinefalisse", "followers_url": "https://api.github.com/users/antoinefalisse/followers", "following_url": "https://api.github.com/users/antoinefalisse/following{/other_user}", "gists_url": "https://api.github.com/users/antoinefalisse/gists{/gist_id}", "starred_url": "https://api.github.com/users/antoinefalisse/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/antoinefalisse/subscriptions", "organizations_url": "https://api.github.com/users/antoinefalisse/orgs", "repos_url": "https://api.github.com/users/antoinefalisse/repos", "events_url": "https://api.github.com/users/antoinefalisse/events{/privacy}", "received_events_url": "https://api.github.com/users/antoinefalisse/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2017-12-12T13:52:54Z", "updated_at": "2018-01-08T23:29:10Z", "closed_at": "2018-01-08T23:29:10Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "@sherm1, @chrisdembia, as previously discussed, I will work on a PR to remove support for` long double`.\r\n\r\nI scanned through all files of Simbody looking for `long double`. I listed 15 files using `long double` (+ 5 files mentioning `long double` in comments only) in SimTKcommon as well as 6 tests. I did not find any `long double` in `SimTKmath` and `SimTKsimbody`.\r\n\r\nI am wondering how I should deal with files such as `Constants.h` where the constants are defined using `long double` precision: eg `#define SimTK_PI     3. ... L`. Note that there could be other files where this `L` is used. \r\n\r\nWould it be too big to include all changes in a singlePR?", "reactions": {"url": "https://api.github.com/repos/simbody/simbody/issues/596/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/simbody/simbody/issues/596/timeline", "performed_via_github_app": null}, {"url": "https://api.github.com/repos/simbody/simbody/issues/604", "repository_url": "https://api.github.com/repos/simbody/simbody", "labels_url": "https://api.github.com/repos/simbody/simbody/issues/604/labels{/name}", "comments_url": "https://api.github.com/repos/simbody/simbody/issues/604/comments", "events_url": "https://api.github.com/repos/simbody/simbody/issues/604/events", "html_url": "https://github.com/simbody/simbody/issues/604", "id": 285982924, "node_id": "MDU6SXNzdWUyODU5ODI5MjQ=", "number": 604, "title": "MobilizedBody::Translation has confusing getMobilizerAcceleration() method", "user": {"login": "apalazzi", "id": 4243291, "node_id": "MDQ6VXNlcjQyNDMyOTE=", "avatar_url": "https://avatars.githubusercontent.com/u/4243291?v=4", "gravatar_id": "", "url": "https://api.github.com/users/apalazzi", "html_url": "https://github.com/apalazzi", "followers_url": "https://api.github.com/users/apalazzi/followers", "following_url": "https://api.github.com/users/apalazzi/following{/other_user}", "gists_url": "https://api.github.com/users/apalazzi/gists{/gist_id}", "starred_url": "https://api.github.com/users/apalazzi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/apalazzi/subscriptions", "organizations_url": "https://api.github.com/users/apalazzi/orgs", "repos_url": "https://api.github.com/users/apalazzi/repos", "events_url": "https://api.github.com/users/apalazzi/events{/privacy}", "received_events_url": "https://api.github.com/users/apalazzi/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2018-01-04T13:18:16Z", "updated_at": "2018-01-08T23:33:15Z", "closed_at": "2018-01-08T17:27:23Z", "author_association": "NONE", "active_lock_reason": null, "body": "[Edited by sherm: see my comment below for a revised description.\r\nThe original description is here:]\r\n\r\nthe method MobilizedBody::getMobilizerAcceleration() is overriden in MobilizedBody::Translation but is not declared virtual; if a Translation class is then created with new and its pointer stored in a MobilizedBody* pointer, the call to getMobilizerAcceleration ends up executing MobilizedBody::getMobilizerAcceleration() and not Translation::getMobilizerAcceleration().\r\n\r\nThat is:\r\n```\r\nMobilizedBody* mob=new MobilizedBody::Translation();\r\nmob->getMobilizerAcceleration(); // calls MobilizedBody::getMobilizerAcceleration\r\n```\r\n\r\nIf the method is supposed to be overriden in subclasses it should be declared as virtual; or, if the Translation::getMobilizerAcceleration method is generic enough it should be moved to MobilizedBody.\r\n\r\n  ", "reactions": {"url": "https://api.github.com/repos/simbody/simbody/issues/604/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/simbody/simbody/issues/604/timeline", "performed_via_github_app": null}, {"url": "https://api.github.com/repos/simbody/simbody/issues/606", "repository_url": "https://api.github.com/repos/simbody/simbody", "labels_url": "https://api.github.com/repos/simbody/simbody/issues/606/labels{/name}", "comments_url": "https://api.github.com/repos/simbody/simbody/issues/606/comments", "events_url": "https://api.github.com/repos/simbody/simbody/issues/606/events", "html_url": "https://github.com/simbody/simbody/issues/606", "id": 286605698, "node_id": "MDU6SXNzdWUyODY2MDU2OTg=", "number": 606, "title": "Release Simbody 3.6", "user": {"login": "chrisdembia", "id": 846001, "node_id": "MDQ6VXNlcjg0NjAwMQ==", "avatar_url": "https://avatars.githubusercontent.com/u/846001?v=4", "gravatar_id": "", "url": "https://api.github.com/users/chrisdembia", "html_url": "https://github.com/chrisdembia", "followers_url": "https://api.github.com/users/chrisdembia/followers", "following_url": "https://api.github.com/users/chrisdembia/following{/other_user}", "gists_url": "https://api.github.com/users/chrisdembia/gists{/gist_id}", "starred_url": "https://api.github.com/users/chrisdembia/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/chrisdembia/subscriptions", "organizations_url": "https://api.github.com/users/chrisdembia/orgs", "repos_url": "https://api.github.com/users/chrisdembia/repos", "events_url": "https://api.github.com/users/chrisdembia/events{/privacy}", "received_events_url": "https://api.github.com/users/chrisdembia/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 25, "created_at": "2018-01-07T22:29:43Z", "updated_at": "2018-02-22T00:18:05Z", "closed_at": "2018-02-21T23:59:17Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "As mentioned in #510, it would be nice to get a new release of Simbody into Ubuntu 18.04. As discussed with @sherm1, I will start preparing this release after #605 is merged. The version will be 3.6.\r\n\r\nIf OpenSim 4.0 requires additional changes to Simbody, we can create an additional release.\r\n\r\nHere is the TODO list for creating the release (based on #275):\r\n\r\n- [x] update changelog\r\n- [x] in README.md, replace \"3.5\" with \"3.6\"\r\n- [x] check that README.md is up to date\r\n- [x] read through tutorial, fix links and text as needed\r\n- [x] update version number for advanced user's manual\r\n- [x] check theory manual\r\n- [x] post doxygen on a new simbody repository (simbody-<version>-doxygen)\r\n- [ ] get @j-rivero's blessing on the debian subdirectory\r\n  - [x] make sure docs and examples will be included in the package. \r\n- [x] include fix for glut headers (#611, #511)\r\n- [x] update release date of 3.6 in the changelog (and in the debian files).\r\n- [x] make 3.6 branch\r\n- [x] make 3.6 release (tag)\r\n- ~[ ] delete 3.4 branch~\r\n- [x] update master branch to 3.7\r\n  - [x] add \"3.7\" section to CHANGELOG.md.\r\n- [x] update github.com/simbody/simbody-latest-doxygen to point to the latest release.\r\n- [x] announce release on forum\r\n\r\ncc @aseth1 @aymanhab @j-rivero @scpeters @traversaro\r\n  \r\n  \r\n  \r\n  ", "reactions": {"url": "https://api.github.com/repos/simbody/simbody/issues/606/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/simbody/simbody/issues/606/timeline", "performed_via_github_app": null}, {"url": "https://api.github.com/repos/simbody/simbody/issues/607", "repository_url": "https://api.github.com/repos/simbody/simbody", "labels_url": "https://api.github.com/repos/simbody/simbody/issues/607/labels{/name}", "comments_url": "https://api.github.com/repos/simbody/simbody/issues/607/comments", "events_url": "https://api.github.com/repos/simbody/simbody/issues/607/events", "html_url": "https://github.com/simbody/simbody/issues/607", "id": 286636143, "node_id": "MDU6SXNzdWUyODY2MzYxNDM=", "number": 607, "title": "Method deprecation not working on Windows any more", "user": {"login": "sherm1", "id": 4088016, "node_id": "MDQ6VXNlcjQwODgwMTY=", "avatar_url": "https://avatars.githubusercontent.com/u/4088016?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sherm1", "html_url": "https://github.com/sherm1", "followers_url": "https://api.github.com/users/sherm1/followers", "following_url": "https://api.github.com/users/sherm1/following{/other_user}", "gists_url": "https://api.github.com/users/sherm1/gists{/gist_id}", "starred_url": "https://api.github.com/users/sherm1/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sherm1/subscriptions", "organizations_url": "https://api.github.com/users/sherm1/orgs", "repos_url": "https://api.github.com/users/sherm1/repos", "events_url": "https://api.github.com/users/sherm1/events{/privacy}", "received_events_url": "https://api.github.com/users/sherm1/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-01-08T03:51:24Z", "updated_at": "2018-01-08T17:27:23Z", "closed_at": "2018-01-08T17:27:23Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "Simbody's `DEPRECATED_14()` macro is not functioning on Windows any more. I believe this is because warning 4996 has been disabled globally. That should only be disabled locally with pragma push/pop so that we can mark methods deprecated.\r\n\r\n@chrisdembia do you remember why 4996 got removed globally?", "reactions": {"url": "https://api.github.com/repos/simbody/simbody/issues/607/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/simbody/simbody/issues/607/timeline", "performed_via_github_app": null}, {"url": "https://api.github.com/repos/simbody/simbody/issues/619", "repository_url": "https://api.github.com/repos/simbody/simbody", "labels_url": "https://api.github.com/repos/simbody/simbody/issues/619/labels{/name}", "comments_url": "https://api.github.com/repos/simbody/simbody/issues/619/comments", "events_url": "https://api.github.com/repos/simbody/simbody/issues/619/events", "html_url": "https://github.com/simbody/simbody/issues/619", "id": 297085418, "node_id": "MDU6SXNzdWUyOTcwODU0MTg=", "number": 619, "title": "Limit the MobilizedBody motion", "user": {"login": "YuriOsokin", "id": 6566173, "node_id": "MDQ6VXNlcjY1NjYxNzM=", "avatar_url": "https://avatars.githubusercontent.com/u/6566173?v=4", "gravatar_id": "", "url": "https://api.github.com/users/YuriOsokin", "html_url": "https://github.com/YuriOsokin", "followers_url": "https://api.github.com/users/YuriOsokin/followers", "following_url": "https://api.github.com/users/YuriOsokin/following{/other_user}", "gists_url": "https://api.github.com/users/YuriOsokin/gists{/gist_id}", "starred_url": "https://api.github.com/users/YuriOsokin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/YuriOsokin/subscriptions", "organizations_url": "https://api.github.com/users/YuriOsokin/orgs", "repos_url": "https://api.github.com/users/YuriOsokin/repos", "events_url": "https://api.github.com/users/YuriOsokin/events{/privacy}", "received_events_url": "https://api.github.com/users/YuriOsokin/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2018-02-14T12:54:00Z", "updated_at": "2018-02-14T16:05:58Z", "closed_at": "2018-02-14T16:05:58Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hello,\r\n\r\nI want to limit the MobilizedBody motion. For example, to limit the Pin to angles of -1 rad to 1 rad. I did not find any simple way to do it, but to write an EventHandler, and set the force on the Pin, such, that will not allow the motion above the limits. The event is triggered when the angle is greater then 1 rad, and the force is set as exponent of current Pin angle minus limit angle.\r\nIs this a right approach, or there is a build-in way to limit the motion?\r\n\r\nThanks, Yuri ", "reactions": {"url": "https://api.github.com/repos/simbody/simbody/issues/619/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/simbody/simbody/issues/619/timeline", "performed_via_github_app": null}, {"url": "https://api.github.com/repos/simbody/simbody/issues/623", "repository_url": "https://api.github.com/repos/simbody/simbody", "labels_url": "https://api.github.com/repos/simbody/simbody/issues/623/labels{/name}", "comments_url": "https://api.github.com/repos/simbody/simbody/issues/623/comments", "events_url": "https://api.github.com/repos/simbody/simbody/issues/623/events", "html_url": "https://github.com/simbody/simbody/issues/623", "id": 299163726, "node_id": "MDU6SXNzdWUyOTkxNjM3MjY=", "number": 623, "title": "Doxygen for HuntCrossleyContact contains mangled equations", "user": {"login": "tkuchida", "id": 4203505, "node_id": "MDQ6VXNlcjQyMDM1MDU=", "avatar_url": "https://avatars.githubusercontent.com/u/4203505?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tkuchida", "html_url": "https://github.com/tkuchida", "followers_url": "https://api.github.com/users/tkuchida/followers", "following_url": "https://api.github.com/users/tkuchida/following{/other_user}", "gists_url": "https://api.github.com/users/tkuchida/gists{/gist_id}", "starred_url": "https://api.github.com/users/tkuchida/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tkuchida/subscriptions", "organizations_url": "https://api.github.com/users/tkuchida/orgs", "repos_url": "https://api.github.com/users/tkuchida/repos", "events_url": "https://api.github.com/users/tkuchida/events{/privacy}", "received_events_url": "https://api.github.com/users/tkuchida/received_events", "type": "User", "site_admin": false}, "labels": [{"id": 59408209, "node_id": "MDU6TGFiZWw1OTQwODIwOQ==", "url": "https://api.github.com/repos/simbody/simbody/labels/documentation", "name": "documentation", "color": "bfdadc", "default": true, "description": null}], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-02-21T23:08:36Z", "updated_at": "2018-02-22T01:31:55Z", "closed_at": "2018-02-22T01:31:55Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "https://simtk.org/api_docs/simbody/3.5/classSimTK_1_1HuntCrossleyContact.html#details\r\n\r\n![](https://user-images.githubusercontent.com/4203505/36510741-00346696-1719-11e8-997d-ba87974fa8ab.png)", "reactions": {"url": "https://api.github.com/repos/simbody/simbody/issues/623/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/simbody/simbody/issues/623/timeline", "performed_via_github_app": null}, {"url": "https://api.github.com/repos/simbody/simbody/issues/628", "repository_url": "https://api.github.com/repos/simbody/simbody", "labels_url": "https://api.github.com/repos/simbody/simbody/issues/628/labels{/name}", "comments_url": "https://api.github.com/repos/simbody/simbody/issues/628/comments", "events_url": "https://api.github.com/repos/simbody/simbody/issues/628/events", "html_url": "https://github.com/simbody/simbody/issues/628", "id": 307395357, "node_id": "MDU6SXNzdWUzMDczOTUzNTc=", "number": 628, "title": "Build simbody with vcpkg on windows", "user": {"login": "Fleischner", "id": 7933231, "node_id": "MDQ6VXNlcjc5MzMyMzE=", "avatar_url": "https://avatars.githubusercontent.com/u/7933231?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Fleischner", "html_url": "https://github.com/Fleischner", "followers_url": "https://api.github.com/users/Fleischner/followers", "following_url": "https://api.github.com/users/Fleischner/following{/other_user}", "gists_url": "https://api.github.com/users/Fleischner/gists{/gist_id}", "starred_url": "https://api.github.com/users/Fleischner/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Fleischner/subscriptions", "organizations_url": "https://api.github.com/users/Fleischner/orgs", "repos_url": "https://api.github.com/users/Fleischner/repos", "events_url": "https://api.github.com/users/Fleischner/events{/privacy}", "received_events_url": "https://api.github.com/users/Fleischner/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2018-03-21T19:54:29Z", "updated_at": "2018-03-22T17:36:16Z", "closed_at": null, "author_association": "NONE", "active_lock_reason": null, "body": "https://github.com/Microsoft/vcpkg is microsofts intended way to build libraries from source on windows.\r\n\r\nBring simbody to it too. All required deps are there:\r\nopenblas, lapack, opengl, freeglut\r\n\r\nAttached are the portfiles samples and the patched main CMakeLists:\r\n- Cmakelists changed at BUILD_USING_OTHER_LAPACK as I had problems to pass a Path with \";\" as cmake command option.\r\n- CMakeLists should also remove overrides for CXX_FLAGS. These get passed in by vcpkg\r\n- Portfiles not completly finished. I still get some failures on tests. (Maybe need to patch the lapack headers with the headers from the vcpkg lapack port)\r\n- Visualization disabled. Build problems, as the sources have lot of custom patches for windows. Should just use freeglut too.\r\n\r\n- Files renamed with .txt for upload\r\n\r\n\r\n[CMakeLists.txt](https://github.com/simbody/simbody/files/1835005/CMakeLists.txt)\r\n[CONTROL.txt](https://github.com/simbody/simbody/files/1835006/CONTROL.txt) \r\n[portfile.txt](https://github.com/simbody/simbody/files/1835004/portfile.txt)\r\n", "reactions": {"url": "https://api.github.com/repos/simbody/simbody/issues/628/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/simbody/simbody/issues/628/timeline", "performed_via_github_app": null}, {"url": "https://api.github.com/repos/simbody/simbody/issues/634", "repository_url": "https://api.github.com/repos/simbody/simbody", "labels_url": "https://api.github.com/repos/simbody/simbody/issues/634/labels{/name}", "comments_url": "https://api.github.com/repos/simbody/simbody/issues/634/comments", "events_url": "https://api.github.com/repos/simbody/simbody/issues/634/events", "html_url": "https://github.com/simbody/simbody/issues/634", "id": 320909039, "node_id": "MDU6SXNzdWUzMjA5MDkwMzk=", "number": 634, "title": "Release Simbody 3.6.1", "user": {"login": "chrisdembia", "id": 846001, "node_id": "MDQ6VXNlcjg0NjAwMQ==", "avatar_url": "https://avatars.githubusercontent.com/u/846001?v=4", "gravatar_id": "", "url": "https://api.github.com/users/chrisdembia", "html_url": "https://github.com/chrisdembia", "followers_url": "https://api.github.com/users/chrisdembia/followers", "following_url": "https://api.github.com/users/chrisdembia/following{/other_user}", "gists_url": "https://api.github.com/users/chrisdembia/gists{/gist_id}", "starred_url": "https://api.github.com/users/chrisdembia/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/chrisdembia/subscriptions", "organizations_url": "https://api.github.com/users/chrisdembia/orgs", "repos_url": "https://api.github.com/users/chrisdembia/repos", "events_url": "https://api.github.com/users/chrisdembia/events{/privacy}", "received_events_url": "https://api.github.com/users/chrisdembia/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2018-05-07T18:34:31Z", "updated_at": "2018-10-30T10:54:21Z", "closed_at": "2018-06-12T01:17:27Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "OpenSim 4.0 will be released in about 3 weeks. It would be great if the OpenSim release contained https://github.com/simbody/simbody/pull/633. I'd like to make a Simbody 3.6.1 release to include the #633.\r\n\r\n- [x] merge #633 into the `simbody-3.6` branch.\r\n- [x] update changelog\r\n- [x] in README.md, replace \"3.6\" with \"3.6.1\"\r\n- [x] update release date of 3.6.1 in the changelog.\r\n- [x] make 3.6.1 release (tag)\r\n- [x] announce release on forum", "reactions": {"url": "https://api.github.com/repos/simbody/simbody/issues/634/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/simbody/simbody/issues/634/timeline", "performed_via_github_app": null}, {"url": "https://api.github.com/repos/simbody/simbody/issues/636", "repository_url": "https://api.github.com/repos/simbody/simbody", "labels_url": "https://api.github.com/repos/simbody/simbody/issues/636/labels{/name}", "comments_url": "https://api.github.com/repos/simbody/simbody/issues/636/comments", "events_url": "https://api.github.com/repos/simbody/simbody/issues/636/events", "html_url": "https://github.com/simbody/simbody/issues/636", "id": 326712657, "node_id": "MDU6SXNzdWUzMjY3MTI2NTc=", "number": 636, "title": "Gazebo2Simbody can't generate correct simbody model for gazebo static model", "user": {"login": "jacknlliu", "id": 6220143, "node_id": "MDQ6VXNlcjYyMjAxNDM=", "avatar_url": "https://avatars.githubusercontent.com/u/6220143?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jacknlliu", "html_url": "https://github.com/jacknlliu", "followers_url": "https://api.github.com/users/jacknlliu/followers", "following_url": "https://api.github.com/users/jacknlliu/following{/other_user}", "gists_url": "https://api.github.com/users/jacknlliu/gists{/gist_id}", "starred_url": "https://api.github.com/users/jacknlliu/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jacknlliu/subscriptions", "organizations_url": "https://api.github.com/users/jacknlliu/orgs", "repos_url": "https://api.github.com/users/jacknlliu/repos", "events_url": "https://api.github.com/users/jacknlliu/events{/privacy}", "received_events_url": "https://api.github.com/users/jacknlliu/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2018-05-26T05:47:37Z", "updated_at": "2018-06-24T23:43:43Z", "closed_at": null, "author_association": "NONE", "active_lock_reason": null, "body": "From [gazebo issue 2466](https://bitbucket.org/osrf/gazebo/issues/2466/all-static-models-are-set-to-original), we find that the static model can't be set on correct pose in the gazebo world when using simbody physics engine.\r\n\r\nWe add two static models 'table', but they are all set on the origin point. But actually they should like\r\n\r\n![gazebo-ode-static-model](https://github.com/jacknlliu/development-issues/blob/master/assets/gazebo-ode-static-model.jpg?raw=true)\r\n\r\nBut using [examples/Gazebo2Simbody](https://github.com/simbody/simbody/blob/master/examples/Gazebo2Simbody/Gazebo2Simbody.cpp) or gazebo with simbody, we get something like\r\n\r\n![Gazebo2Simbody static model](https://github.com/jacknlliu/development-issues/blob/master/assets/gazebo2simbody-gazebo-static-model.png?raw=true) \r\n\r\nThe link frame seems right, but the visual parts of two static models are on the origin point.\r\n\r\nThe SDF file is [here](https://github.com/jacknlliu/development-issues/blob/master/assets/tables_test.sdf).\r\n\r\n\r\n \r\n", "reactions": {"url": "https://api.github.com/repos/simbody/simbody/issues/636/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/simbody/simbody/issues/636/timeline", "performed_via_github_app": null}, {"url": "https://api.github.com/repos/simbody/simbody/issues/637", "repository_url": "https://api.github.com/repos/simbody/simbody", "labels_url": "https://api.github.com/repos/simbody/simbody/issues/637/labels{/name}", "comments_url": "https://api.github.com/repos/simbody/simbody/issues/637/comments", "events_url": "https://api.github.com/repos/simbody/simbody/issues/637/events", "html_url": "https://github.com/simbody/simbody/issues/637", "id": 333365254, "node_id": "MDU6SXNzdWUzMzMzNjUyNTQ=", "number": 637, "title": "Analysis of EFF convergence algorithm", "user": {"login": "Gjacquenot", "id": 6797340, "node_id": "MDQ6VXNlcjY3OTczNDA=", "avatar_url": "https://avatars.githubusercontent.com/u/6797340?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Gjacquenot", "html_url": "https://github.com/Gjacquenot", "followers_url": "https://api.github.com/users/Gjacquenot/followers", "following_url": "https://api.github.com/users/Gjacquenot/following{/other_user}", "gists_url": "https://api.github.com/users/Gjacquenot/gists{/gist_id}", "starred_url": "https://api.github.com/users/Gjacquenot/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Gjacquenot/subscriptions", "organizations_url": "https://api.github.com/users/Gjacquenot/orgs", "repos_url": "https://api.github.com/users/Gjacquenot/repos", "events_url": "https://api.github.com/users/Gjacquenot/events{/privacy}", "received_events_url": "https://api.github.com/users/Gjacquenot/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2018-06-18T17:28:51Z", "updated_at": "2018-06-20T08:27:17Z", "closed_at": null, "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "I am using Simbody contact algorithm and I would like advice on the convergence of the program below. I am evaluating the contact forces between two boxes, and as I increase resolution of boxes geometries, result diverge. Result is exact with lowest resolution, but diverge to another value 20% higher. Maybe it is totally normal, however I would like experts advice (@sherm1 , @chrisdembia ;-))\r\n\r\nGeometries involved are a plane `ContactGeometry::HalfSpace()` and\r\na cube `PolygonalMesh::createBrickMesh`\r\n\r\nAnalytical solution is `stiffness * penetration * area_of_contact`, where `stiffness` is 100, `penetration` is 0.05\r\n\r\nNumerical solution can thus be compared to the analytical one.\r\n\r\nA cube of length 0.5 is created with `createBrickMesh(Vec3(0.25,0.05,0.25), i)`\r\nwhere is the resolution. `area_of_contact` is thus `0.5*0.5`\r\n\r\nResolution is progressively increased from 1 to 30. Results are exact for\r\nresolution=1 and 2, but increased with resolution and seems to stabilize\r\naround 20% higher.\r\n\r\nPenetration is set to 0.05 and center of the cube is placed at (0,0.25-0.25,0.0)\r\n\r\nForce is along Y axis.\r\n\r\nConvergence test were performed on similar case with sphere\r\nhttps://github.com/simbody/simbody/blob/master/Simbody/tests/TestElasticFoundationForce.cpp\r\n\r\nHere is the program\r\n\r\n\r\n    #include \"SimTKsimbody.h\"\r\n\r\n    using namespace SimTK;\r\n    using namespace std;\r\n\r\n    const Real TOL = 1e-5;\r\n\r\n    #define ASSERT(cond) {SimTK_ASSERT_ALWAYS(cond, \"Assertion failed\");}\r\n\r\n    template <class T>\r\n    void assertEqual(T val1, T val2) {\r\n        ASSERT(abs(val1-val2) < TOL || abs(val1-val2)/max(abs(val1), abs(val2)) < TOL);\r\n    }\r\n\r\n    template <int N>\r\n    void assertEqual(Vec<N> val1, Vec<N> val2) {\r\n        for (int i = 0; i < N; ++i)\r\n            assertEqual(val1[i], val2[i]);\r\n    }\r\n\r\n    /**\r\n     * Program to test convergence of EFF algorithm from collision of a box on a\r\n     * plane. Geometries involved are a plane `ContactGeometry::HalfSpace()` and\r\n     * a cube `PolygonalMesh::createBrickMesh`\r\n     * \r\n     * Analytical solution is stiffness * penetration * area_of_contact\r\n     *\r\n     * Numerical solution can thus be compared to the analytical one.\r\n     *\r\n     * A cube of length 0.5 is created with `createBrickMesh(Vec3(0.25,0.25,0.25), i)`\r\n     * where is the resolution.\r\n     *\r\n     * Resolution is progressively increased from 1 to 60. Result are exact for\r\n     * resolution=1 and 2, but increased with resolution and seems to stabilize\r\n     * around 20% higher.\r\n     *\r\n     * Penetration is set to 0.05 and center of the cube is placed at (0,0.25-0.05,0.0)\r\n     *\r\n     * Force is along Y axis.\r\n     * \r\n     * Convergence test were performed on similar case with sphere\r\n     * https://github.com/simbody/simbody/blob/master/Simbody/tests/TestElasticFoundationForce.cpp\r\n     */\r\n    void testEffBrickOnPlaneNewFormulation()\r\n    {\r\n        // Global stiffness of the contact: each material will have\r\n        // twice this stiffness to obtain this global stiffness in the contact\r\n        // 1/kG = 1/k1 + 1/k2\r\n        const Real stiffness = 100.0;\r\n        const Real dissipation = 0.0, us = 0.0, ud = 0.0, uv = 0.0;\r\n        const Real vt = 1.0;\r\n        const int maxLevel = 30;\r\n        const Real penetration = 0.05;\r\n        for (int i=1;i<maxLevel;++i)\r\n        {\r\n            // Creation of the classical problem\r\n            MultibodySystem system;\r\n            SimbodyMatterSubsystem matter(system);\r\n            ContactTrackerSubsystem tracker(system);\r\n            CompliantContactSubsystem contactForces(system, tracker);\r\n            contactForces.setTransitionVelocity(vt);\r\n            matter.Ground().updBody().addContactSurface(\r\n                Transform(Rotation(-0.5*Pi, ZAxis), Vec3(0.0,0.0,0.0)),\r\n                ContactSurface(ContactGeometry::HalfSpace(),\r\n                               ContactMaterial(2.0*stiffness, dissipation, us, ud, uv),\r\n                               1.0));\r\n            Body::Rigid body(MassProperties(1.0, Vec3(0), Inertia(1)));\r\n            body.addContactSurface(Transform(),\r\n                ContactSurface(ContactGeometry::TriangleMesh(PolygonalMesh::createBrickMesh(Vec3(0.25,0.25,0.25), i)),\r\n                               ContactMaterial(2.0*stiffness, dissipation, us, ud, uv),\r\n                               1.0));\r\n            MobilizedBody::Free mesh(matter.updGround(), Transform(), body, Transform());\r\n            State state = system.realizeTopology();\r\n            mesh.setQToFitTransform(state, Transform(Vec3(0.0,0.25-penetration,0.0)));\r\n            system.realize(state, Stage::Dynamics);\r\n            ASSERT(contactForces.getNumContactForces(state)==1);\r\n            const ContactForce& force = contactForces.getContactForce(state,0);\r\n            const Vec3& frc = force.getForceOnSurface2()[1];\r\n            // cout << force.getForceOnSurface2() << endl;\r\n            const Real numericalResult = frc[1];\r\n            const Real intersectionVolume = penetration * 0.5 *0.5;\r\n            const Real theoreticalResult = stiffness * intersectionVolume;\r\n            cout << \"Resolution \" << setw(3) << i << \" Error = \" << 100 * abs((numericalResult/theoreticalResult)-1.0) << \"%\" << endl;\r\n        }\r\n    }\r\n\r\n    int main() {\r\n        try {\r\n            testEffBrickOnPlaneNewFormulation();\r\n        }\r\n        catch(const std::exception& e) {\r\n            cout << \"exception: \" << e.what() << endl;\r\n            return 1;\r\n        }\r\n        cout << \"Done\" << endl;\r\n        return 0;\r\n    }\r\n\r\nThe program produces:\r\n\r\n    Resolution   1 Error = 2.22045e-014%\r\n    Resolution   2 Error = 3.33067e-014%\r\n    Resolution   3 Error = 8.33333%\r\n    Resolution   4 Error = 13.3333%\r\n    Resolution   5 Error = 14.8148%\r\n    Resolution   6 Error = 16.3265%\r\n    Resolution   7 Error = 18.75%\r\n    Resolution   8 Error = 19.7531%\r\n    Resolution   9 Error = 20%\r\n    Resolution  10 Error = 19.8347%\r\n    Resolution  11 Error = 19.4444%\r\n    Resolution  12 Error = 18.9349%\r\n    Resolution  13 Error = 19.0476%\r\n    Resolution  14 Error = 19.2593%\r\n    Resolution  15 Error = 19.2708%\r\n    Resolution  16 Error = 19.3772%\r\n    Resolution  17 Error = 19.7531%\r\n    Resolution  18 Error = 19.9446%\r\n    Resolution  19 Error = 20%\r\n    Resolution  20 Error = 19.9546%\r\n    Resolution  21 Error = 19.8347%\r\n    Resolution  22 Error = 19.6597%\r\n    Resolution  23 Error = 19.6759%\r\n    Resolution  24 Error = 19.7333%\r\n    Resolution  25 Error = 19.7239%\r\n    Resolution  26 Error = 19.7531%\r\n    Resolution  27 Error = 19.898%\r\n    Resolution  28 Error = 19.9762%\r\n    Resolution  29 Error = 20%\r\n\r\n", "reactions": {"url": "https://api.github.com/repos/simbody/simbody/issues/637/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/simbody/simbody/issues/637/timeline", "performed_via_github_app": null}, {"url": "https://api.github.com/repos/simbody/simbody/issues/638", "repository_url": "https://api.github.com/repos/simbody/simbody", "labels_url": "https://api.github.com/repos/simbody/simbody/issues/638/labels{/name}", "comments_url": "https://api.github.com/repos/simbody/simbody/issues/638/comments", "events_url": "https://api.github.com/repos/simbody/simbody/issues/638/events", "html_url": "https://github.com/simbody/simbody/issues/638", "id": 338289987, "node_id": "MDU6SXNzdWUzMzgyODk5ODc=", "number": 638, "title": "Python interface: Directly working with state's Y value leads to crash", "user": {"login": "janEbert", "id": 12694897, "node_id": "MDQ6VXNlcjEyNjk0ODk3", "avatar_url": "https://avatars.githubusercontent.com/u/12694897?v=4", "gravatar_id": "", "url": "https://api.github.com/users/janEbert", "html_url": "https://github.com/janEbert", "followers_url": "https://api.github.com/users/janEbert/followers", "following_url": "https://api.github.com/users/janEbert/following{/other_user}", "gists_url": "https://api.github.com/users/janEbert/gists{/gist_id}", "starred_url": "https://api.github.com/users/janEbert/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/janEbert/subscriptions", "organizations_url": "https://api.github.com/users/janEbert/orgs", "repos_url": "https://api.github.com/users/janEbert/repos", "events_url": "https://api.github.com/users/janEbert/events{/privacy}", "received_events_url": "https://api.github.com/users/janEbert/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2018-07-04T14:06:43Z", "updated_at": "2018-07-12T17:11:11Z", "closed_at": "2018-07-12T17:11:11Z", "author_association": "NONE", "active_lock_reason": null, "body": "Using an OpenSim environment in Python, the program crashes when attempting to do anything with  `SimTK::State`'s `Y` value except for assigning it.\r\n\r\nSetup:\r\n```python\r\nfrom osim.env import ProstheticsEnv\r\nenv = ProstheticsEnv(visualize=False)\r\nenv.reset()\r\n```\r\nWhat works:\r\n```python\r\nstate = env.osim_model.get_state()\r\nprint(state.getY())\r\n\r\ny = env.osim_model.get_state().getY()\r\n```\r\nWhat does not work:\r\n```python\r\nprint(env.osim_model.get_state().getY())\r\nlist(env.osim_model.get_state().getY())\r\n```\r\n\r\nI am on Windows 10 using the latest version of OSim (with Python 3.6.1) and followed the installation instructions to a T.\r\n\r\nSorry if this belongs in the [OSim-RL](https://github.com/stanfordnmbl/osim-rl) repository.", "reactions": {"url": "https://api.github.com/repos/simbody/simbody/issues/638/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/simbody/simbody/issues/638/timeline", "performed_via_github_app": null}, {"url": "https://api.github.com/repos/simbody/simbody/issues/639", "repository_url": "https://api.github.com/repos/simbody/simbody", "labels_url": "https://api.github.com/repos/simbody/simbody/issues/639/labels{/name}", "comments_url": "https://api.github.com/repos/simbody/simbody/issues/639/comments", "events_url": "https://api.github.com/repos/simbody/simbody/issues/639/events", "html_url": "https://github.com/simbody/simbody/issues/639", "id": 340724967, "node_id": "MDU6SXNzdWUzNDA3MjQ5Njc=", "number": 639, "title": "Improve clarity of `takeOneStep()` exception", "user": {"login": "chrisdembia", "id": 846001, "node_id": "MDQ6VXNlcjg0NjAwMQ==", "avatar_url": "https://avatars.githubusercontent.com/u/846001?v=4", "gravatar_id": "", "url": "https://api.github.com/users/chrisdembia", "html_url": "https://github.com/chrisdembia", "followers_url": "https://api.github.com/users/chrisdembia/followers", "following_url": "https://api.github.com/users/chrisdembia/following{/other_user}", "gists_url": "https://api.github.com/users/chrisdembia/gists{/gist_id}", "starred_url": "https://api.github.com/users/chrisdembia/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/chrisdembia/subscriptions", "organizations_url": "https://api.github.com/users/chrisdembia/orgs", "repos_url": "https://api.github.com/users/chrisdembia/repos", "events_url": "https://api.github.com/users/chrisdembia/events{/privacy}", "received_events_url": "https://api.github.com/users/chrisdembia/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-07-12T17:12:43Z", "updated_at": "2018-11-25T21:21:31Z", "closed_at": null, "author_association": "MEMBER", "active_lock_reason": null, "body": "It is somewhat common to get the following exception message:\r\n\r\n```\r\nstd::exception in 'SimTK::State const & OpenSim::Manager::integrate(double)':\r\nSimTK Exception thrown at AbstractIntegratorRep.cpp:428:\r\n  Integrator step failed at time 0.49668703558495564 apparently because:\r\nSimTK Exception thrown at AbstractIntegratorRep.cpp:547:\r\n  Error detected by Simbody method AbstractIntegrator::takeOneStep(): Unable\r\nto advance time past 0.496687.\r\n  (Required condition 't1 > t0' was not met.)\r\n```\r\n\r\nI think the fix is often to use a tighter integration accuracy. Perhaps we could add that suggestion to the exception message.\r\n\r\nThis was originally reported at https://github.com/stanfordnmbl/osim-rl/issues/138#issuecomment-404577929 by @janEbert.", "reactions": {"url": "https://api.github.com/repos/simbody/simbody/issues/639/reactions", "total_count": 1, "+1": 1, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/simbody/simbody/issues/639/timeline", "performed_via_github_app": null}, {"url": "https://api.github.com/repos/simbody/simbody/issues/640", "repository_url": "https://api.github.com/repos/simbody/simbody", "labels_url": "https://api.github.com/repos/simbody/simbody/issues/640/labels{/name}", "comments_url": "https://api.github.com/repos/simbody/simbody/issues/640/comments", "events_url": "https://api.github.com/repos/simbody/simbody/issues/640/events", "html_url": "https://github.com/simbody/simbody/issues/640", "id": 347338132, "node_id": "MDU6SXNzdWUzNDczMzgxMzI=", "number": 640, "title": "investigation about contact dynamics computation", "user": {"login": "jacknlliu", "id": 6220143, "node_id": "MDQ6VXNlcjYyMjAxNDM=", "avatar_url": "https://avatars.githubusercontent.com/u/6220143?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jacknlliu", "html_url": "https://github.com/jacknlliu", "followers_url": "https://api.github.com/users/jacknlliu/followers", "following_url": "https://api.github.com/users/jacknlliu/following{/other_user}", "gists_url": "https://api.github.com/users/jacknlliu/gists{/gist_id}", "starred_url": "https://api.github.com/users/jacknlliu/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jacknlliu/subscriptions", "organizations_url": "https://api.github.com/users/jacknlliu/orgs", "repos_url": "https://api.github.com/users/jacknlliu/repos", "events_url": "https://api.github.com/users/jacknlliu/events{/privacy}", "received_events_url": "https://api.github.com/users/jacknlliu/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2018-08-03T10:08:08Z", "updated_at": "2020-02-20T17:37:02Z", "closed_at": "2020-02-20T17:37:02Z", "author_association": "NONE", "active_lock_reason": null, "body": "Does simbody have efficient contact dynamics implement like something provided by [SimBenchmark](https://leggedrobotics.github.io/SimBenchmark/)?", "reactions": {"url": "https://api.github.com/repos/simbody/simbody/issues/640/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/simbody/simbody/issues/640/timeline", "performed_via_github_app": null}, {"url": "https://api.github.com/repos/simbody/simbody/issues/641", "repository_url": "https://api.github.com/repos/simbody/simbody", "labels_url": "https://api.github.com/repos/simbody/simbody/issues/641/labels{/name}", "comments_url": "https://api.github.com/repos/simbody/simbody/issues/641/comments", "events_url": "https://api.github.com/repos/simbody/simbody/issues/641/events", "html_url": "https://github.com/simbody/simbody/issues/641", "id": 353510935, "node_id": "MDU6SXNzdWUzNTM1MTA5MzU=", "number": 641, "title": "Deleting a CPodesIntegrator leads to a crash", "user": {"login": "carmichaelong", "id": 7455790, "node_id": "MDQ6VXNlcjc0NTU3OTA=", "avatar_url": "https://avatars.githubusercontent.com/u/7455790?v=4", "gravatar_id": "", "url": "https://api.github.com/users/carmichaelong", "html_url": "https://github.com/carmichaelong", "followers_url": "https://api.github.com/users/carmichaelong/followers", "following_url": "https://api.github.com/users/carmichaelong/following{/other_user}", "gists_url": "https://api.github.com/users/carmichaelong/gists{/gist_id}", "starred_url": "https://api.github.com/users/carmichaelong/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/carmichaelong/subscriptions", "organizations_url": "https://api.github.com/users/carmichaelong/orgs", "repos_url": "https://api.github.com/users/carmichaelong/repos", "events_url": "https://api.github.com/users/carmichaelong/events{/privacy}", "received_events_url": "https://api.github.com/users/carmichaelong/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2018-08-23T18:58:51Z", "updated_at": "2018-08-28T23:59:39Z", "closed_at": null, "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "The following code crashes:\r\n\r\n```    \r\nCPodesIntegrator* integPtr = new CPodesIntegrator(sys);\r\ndelete integPtr;\r\n```\r\n\r\nThis does not occur with any other integrator.", "reactions": {"url": "https://api.github.com/repos/simbody/simbody/issues/641/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/simbody/simbody/issues/641/timeline", "performed_via_github_app": null}, {"url": "https://api.github.com/repos/simbody/simbody/issues/643", "repository_url": "https://api.github.com/repos/simbody/simbody", "labels_url": "https://api.github.com/repos/simbody/simbody/issues/643/labels{/name}", "comments_url": "https://api.github.com/repos/simbody/simbody/issues/643/comments", "events_url": "https://api.github.com/repos/simbody/simbody/issues/643/events", "html_url": "https://github.com/simbody/simbody/issues/643", "id": 360175119, "node_id": "MDU6SXNzdWUzNjAxNzUxMTk=", "number": 643, "title": "Document that integrator settings should not be changed after initializing a TimeStepper", "user": {"login": "chrisdembia", "id": 846001, "node_id": "MDQ6VXNlcjg0NjAwMQ==", "avatar_url": "https://avatars.githubusercontent.com/u/846001?v=4", "gravatar_id": "", "url": "https://api.github.com/users/chrisdembia", "html_url": "https://github.com/chrisdembia", "followers_url": "https://api.github.com/users/chrisdembia/followers", "following_url": "https://api.github.com/users/chrisdembia/following{/other_user}", "gists_url": "https://api.github.com/users/chrisdembia/gists{/gist_id}", "starred_url": "https://api.github.com/users/chrisdembia/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/chrisdembia/subscriptions", "organizations_url": "https://api.github.com/users/chrisdembia/orgs", "repos_url": "https://api.github.com/users/chrisdembia/repos", "events_url": "https://api.github.com/users/chrisdembia/events{/privacy}", "received_events_url": "https://api.github.com/users/chrisdembia/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2018-09-14T06:38:30Z", "updated_at": "2018-09-14T06:38:30Z", "closed_at": null, "author_association": "MEMBER", "active_lock_reason": null, "body": "Changing an integrator's accuracy after initializing a TimeStepper has no effect, but this does not seem to be documented. \r\n\r\nDiscovered in https://github.com/opensim-org/opensim-core/issues/2041.", "reactions": {"url": "https://api.github.com/repos/simbody/simbody/issues/643/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/simbody/simbody/issues/643/timeline", "performed_via_github_app": null}, {"url": "https://api.github.com/repos/simbody/simbody/issues/644", "repository_url": "https://api.github.com/repos/simbody/simbody", "labels_url": "https://api.github.com/repos/simbody/simbody/issues/644/labels{/name}", "comments_url": "https://api.github.com/repos/simbody/simbody/issues/644/comments", "events_url": "https://api.github.com/repos/simbody/simbody/issues/644/events", "html_url": "https://github.com/simbody/simbody/issues/644", "id": 368818883, "node_id": "MDU6SXNzdWUzNjg4MTg4ODM=", "number": 644, "title": "3.6.1 failed test TestCustomConstraints", "user": {"login": "apalazzi", "id": 4243291, "node_id": "MDQ6VXNlcjQyNDMyOTE=", "avatar_url": "https://avatars.githubusercontent.com/u/4243291?v=4", "gravatar_id": "", "url": "https://api.github.com/users/apalazzi", "html_url": "https://github.com/apalazzi", "followers_url": "https://api.github.com/users/apalazzi/followers", "following_url": "https://api.github.com/users/apalazzi/following{/other_user}", "gists_url": "https://api.github.com/users/apalazzi/gists{/gist_id}", "starred_url": "https://api.github.com/users/apalazzi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/apalazzi/subscriptions", "organizations_url": "https://api.github.com/users/apalazzi/orgs", "repos_url": "https://api.github.com/users/apalazzi/repos", "events_url": "https://api.github.com/users/apalazzi/events{/privacy}", "received_events_url": "https://api.github.com/users/apalazzi/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2018-10-10T19:32:40Z", "updated_at": "2018-11-03T11:03:50Z", "closed_at": null, "author_association": "NONE", "active_lock_reason": null, "body": "Hi,\r\n\r\ntest TestCustomConstraints fails with 3.6.1 on ubuntu 18.04/gcc 7.3.0:\r\n\r\n```\r\nStarting test TestCustomConstraints ...\r\n  testCoordinateCoupler1 ...\r\n  testCoordinateCoupler1 done. real/CPU ms: 25.3 / 18.7\r\n  testCoordinateCoupler2 ...\r\n  testCoordinateCoupler2 done. real/CPU ms: 304.8 / 169.9\r\n  testCoordinateCoupler3 ...\r\n  testCoordinateCoupler3 done. real/CPU ms: 177.4 / 89.8\r\n  testSpeedCoupler1 ...\r\n  testSpeedCoupler1 done. real/CPU ms: 7.1 / 1.3\r\n  testSpeedCoupler2 ...\r\n  testSpeedCoupler2 done. real/CPU ms: 2118.3 / 1058.4\r\nTest failed due to exception: SimTK Exception thrown at TestCustomConstraints.cpp:451:\r\n  Internal bug detected: Test values should have been numerically equivalent at tolerance=1e-06.\r\n  (Assertion 'SimTK::Test::numericallyEqual((0.0),(power),1,(10*integ.getConstraintToleranceInUse()))' failed).\r\n  Please file an Issue at https://github.com/simbody/simbody/issues.\r\n  Include the above information and anything else needed to reproduce the problem.\r\n\r\nTestCustomConstraints done. real/CPU ms: 2633.9 / 1339.1\r\n```", "reactions": {"url": "https://api.github.com/repos/simbody/simbody/issues/644/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/simbody/simbody/issues/644/timeline", "performed_via_github_app": null}, {"url": "https://api.github.com/repos/simbody/simbody/issues/646", "repository_url": "https://api.github.com/repos/simbody/simbody", "labels_url": "https://api.github.com/repos/simbody/simbody/issues/646/labels{/name}", "comments_url": "https://api.github.com/repos/simbody/simbody/issues/646/comments", "events_url": "https://api.github.com/repos/simbody/simbody/issues/646/events", "html_url": "https://github.com/simbody/simbody/issues/646", "id": 371019583, "node_id": "MDU6SXNzdWUzNzEwMTk1ODM=", "number": 646, "title": "Linker error with Simbody 3.6.1", "user": {"login": "apalazzi", "id": 4243291, "node_id": "MDQ6VXNlcjQyNDMyOTE=", "avatar_url": "https://avatars.githubusercontent.com/u/4243291?v=4", "gravatar_id": "", "url": "https://api.github.com/users/apalazzi", "html_url": "https://github.com/apalazzi", "followers_url": "https://api.github.com/users/apalazzi/followers", "following_url": "https://api.github.com/users/apalazzi/following{/other_user}", "gists_url": "https://api.github.com/users/apalazzi/gists{/gist_id}", "starred_url": "https://api.github.com/users/apalazzi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/apalazzi/subscriptions", "organizations_url": "https://api.github.com/users/apalazzi/orgs", "repos_url": "https://api.github.com/users/apalazzi/repos", "events_url": "https://api.github.com/users/apalazzi/events{/privacy}", "received_events_url": "https://api.github.com/users/apalazzi/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 12, "created_at": "2018-10-17T11:09:35Z", "updated_at": "2018-10-18T20:40:38Z", "closed_at": "2018-10-18T20:40:37Z", "author_association": "NONE", "active_lock_reason": null, "body": "I have a linker error when I compile my application with Simbody 3.6.1:\r\n\r\n<undefined reference to \"SimTK::CacheEntryInfo::recordPrerequisiteVersions(SimTK::StateImpl const&)\">\r\n\r\nUbuntu 18.04, gcc 7.3.0; simbody compiled with -DCMAKE_BUILD_TYPE=RelWithDebInfo \r\n\r\nThe application was running fine with V3.5.\r\n\r\n", "reactions": {"url": "https://api.github.com/repos/simbody/simbody/issues/646/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/simbody/simbody/issues/646/timeline", "performed_via_github_app": null}, {"url": "https://api.github.com/repos/simbody/simbody/issues/648", "repository_url": "https://api.github.com/repos/simbody/simbody", "labels_url": "https://api.github.com/repos/simbody/simbody/issues/648/labels{/name}", "comments_url": "https://api.github.com/repos/simbody/simbody/issues/648/comments", "events_url": "https://api.github.com/repos/simbody/simbody/issues/648/events", "html_url": "https://github.com/simbody/simbody/issues/648", "id": 376701111, "node_id": "MDU6SXNzdWUzNzY3MDExMTE=", "number": 648, "title": "Run-Time check Failure #3 when building debug build in VS 15.8.8", "user": {"login": "mgejke", "id": 4300272, "node_id": "MDQ6VXNlcjQzMDAyNzI=", "avatar_url": "https://avatars.githubusercontent.com/u/4300272?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mgejke", "html_url": "https://github.com/mgejke", "followers_url": "https://api.github.com/users/mgejke/followers", "following_url": "https://api.github.com/users/mgejke/following{/other_user}", "gists_url": "https://api.github.com/users/mgejke/gists{/gist_id}", "starred_url": "https://api.github.com/users/mgejke/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mgejke/subscriptions", "organizations_url": "https://api.github.com/users/mgejke/orgs", "repos_url": "https://api.github.com/users/mgejke/repos", "events_url": "https://api.github.com/users/mgejke/events{/privacy}", "received_events_url": "https://api.github.com/users/mgejke/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2018-11-02T07:42:06Z", "updated_at": "2018-11-06T16:04:22Z", "closed_at": "2018-11-06T16:04:21Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "After upgrading to the latest VS we have begun experiencing exceptions when running\r\n`AssemblySolver::track`\r\n\r\n`Run-Time Check Failure #3 - The variable 'iback' is being used without being initialized.`\r\n\r\nThe exception is thrown in **lbfgsb.cpp**, in the function **mainlb_**(and rightfully so, the variables are uninitialized, although I think it's fine, it's only storing the local state of the function).\r\n\r\nInitializing all the variables to zero at the beginning of the function fixes the issue and seem to give the same results as before(before upgrading VS and Release-build). \r\n\r\nWould that be considered a proper solution?", "reactions": {"url": "https://api.github.com/repos/simbody/simbody/issues/648/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/simbody/simbody/issues/648/timeline", "performed_via_github_app": null}, {"url": "https://api.github.com/repos/simbody/simbody/issues/650", "repository_url": "https://api.github.com/repos/simbody/simbody", "labels_url": "https://api.github.com/repos/simbody/simbody/issues/650/labels{/name}", "comments_url": "https://api.github.com/repos/simbody/simbody/issues/650/comments", "events_url": "https://api.github.com/repos/simbody/simbody/issues/650/events", "html_url": "https://github.com/simbody/simbody/issues/650", "id": 380424169, "node_id": "MDU6SXNzdWUzODA0MjQxNjk=", "number": 650, "title": "Visualizer shows up as blank/black on macOS 10.14 Mojave", "user": {"login": "chrisdembia", "id": 846001, "node_id": "MDQ6VXNlcjg0NjAwMQ==", "avatar_url": "https://avatars.githubusercontent.com/u/846001?v=4", "gravatar_id": "", "url": "https://api.github.com/users/chrisdembia", "html_url": "https://github.com/chrisdembia", "followers_url": "https://api.github.com/users/chrisdembia/followers", "following_url": "https://api.github.com/users/chrisdembia/following{/other_user}", "gists_url": "https://api.github.com/users/chrisdembia/gists{/gist_id}", "starred_url": "https://api.github.com/users/chrisdembia/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/chrisdembia/subscriptions", "organizations_url": "https://api.github.com/users/chrisdembia/orgs", "repos_url": "https://api.github.com/users/chrisdembia/repos", "events_url": "https://api.github.com/users/chrisdembia/events{/privacy}", "received_events_url": "https://api.github.com/users/chrisdembia/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 13, "created_at": "2018-11-13T21:08:40Z", "updated_at": "2018-11-14T19:37:32Z", "closed_at": null, "author_association": "MEMBER", "active_lock_reason": null, "body": "On macOS 10.14, the Visualizer looks shows as plain black when running `BricardMechanism`:\r\n\r\n<img width=\"912\" alt=\"image\" src=\"https://user-images.githubusercontent.com/846001/48443097-ed4f7500-e744-11e8-8e75-ab47b8d673f4.png\">\r\n\r\nI tried a bunch of other examples too; same issue.\r\n\r\nTested on both `master` and `Simbody-3.6.1`.\r\n\r\n@jimmyDunne have you had any issues like this on your computer?", "reactions": {"url": "https://api.github.com/repos/simbody/simbody/issues/650/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/simbody/simbody/issues/650/timeline", "performed_via_github_app": null}, {"url": "https://api.github.com/repos/simbody/simbody/issues/652", "repository_url": "https://api.github.com/repos/simbody/simbody", "labels_url": "https://api.github.com/repos/simbody/simbody/issues/652/labels{/name}", "comments_url": "https://api.github.com/repos/simbody/simbody/issues/652/comments", "events_url": "https://api.github.com/repos/simbody/simbody/issues/652/events", "html_url": "https://github.com/simbody/simbody/issues/652", "id": 381004568, "node_id": "MDU6SXNzdWUzODEwMDQ1Njg=", "number": 652, "title": "Please do not install the empty dir 'api'", "user": {"login": "yurivict", "id": 271906, "node_id": "MDQ6VXNlcjI3MTkwNg==", "avatar_url": "https://avatars.githubusercontent.com/u/271906?v=4", "gravatar_id": "", "url": "https://api.github.com/users/yurivict", "html_url": "https://github.com/yurivict", "followers_url": "https://api.github.com/users/yurivict/followers", "following_url": "https://api.github.com/users/yurivict/following{/other_user}", "gists_url": "https://api.github.com/users/yurivict/gists{/gist_id}", "starred_url": "https://api.github.com/users/yurivict/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/yurivict/subscriptions", "organizations_url": "https://api.github.com/users/yurivict/orgs", "repos_url": "https://api.github.com/users/yurivict/repos", "events_url": "https://api.github.com/users/yurivict/events{/privacy}", "received_events_url": "https://api.github.com/users/yurivict/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2018-11-15T05:21:15Z", "updated_at": "2018-11-15T05:21:15Z", "closed_at": null, "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "You install ```/usr/local/share/doc/simbody/api```.", "reactions": {"url": "https://api.github.com/repos/simbody/simbody/issues/652/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/simbody/simbody/issues/652/timeline", "performed_via_github_app": null}, {"url": "https://api.github.com/repos/simbody/simbody/issues/653", "repository_url": "https://api.github.com/repos/simbody/simbody", "labels_url": "https://api.github.com/repos/simbody/simbody/issues/653/labels{/name}", "comments_url": "https://api.github.com/repos/simbody/simbody/issues/653/comments", "events_url": "https://api.github.com/repos/simbody/simbody/issues/653/events", "html_url": "https://github.com/simbody/simbody/issues/653", "id": 381013316, "node_id": "MDU6SXNzdWUzODEwMTMzMTY=", "number": 653, "title": "getThisExecutablePath() should check for errors", "user": {"login": "yurivict", "id": 271906, "node_id": "MDQ6VXNlcjI3MTkwNg==", "avatar_url": "https://avatars.githubusercontent.com/u/271906?v=4", "gravatar_id": "", "url": "https://api.github.com/users/yurivict", "html_url": "https://github.com/yurivict", "followers_url": "https://api.github.com/users/yurivict/followers", "following_url": "https://api.github.com/users/yurivict/following{/other_user}", "gists_url": "https://api.github.com/users/yurivict/gists{/gist_id}", "starred_url": "https://api.github.com/users/yurivict/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/yurivict/subscriptions", "organizations_url": "https://api.github.com/users/yurivict/orgs", "repos_url": "https://api.github.com/users/yurivict/repos", "events_url": "https://api.github.com/users/yurivict/events{/privacy}", "received_events_url": "https://api.github.com/users/yurivict/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 8, "created_at": "2018-11-15T06:05:10Z", "updated_at": "2019-08-09T00:58:06Z", "closed_at": null, "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "The original issue was resolved by #672, but another bug was reported in the comments below. I have retitled the issue to reflect the remaining problem.\r\n\r\nOriginal report:\r\n```\r\n        Start  21: TestPlugin\r\n 21/107 Test  #21: TestPlugin .....................................***Failed    0.01 sec\r\n```\r\n\r\nFreeBSD 11.2", "reactions": {"url": "https://api.github.com/repos/simbody/simbody/issues/653/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/simbody/simbody/issues/653/timeline", "performed_via_github_app": null}, {"url": "https://api.github.com/repos/simbody/simbody/issues/658", "repository_url": "https://api.github.com/repos/simbody/simbody", "labels_url": "https://api.github.com/repos/simbody/simbody/issues/658/labels{/name}", "comments_url": "https://api.github.com/repos/simbody/simbody/issues/658/comments", "events_url": "https://api.github.com/repos/simbody/simbody/issues/658/events", "html_url": "https://github.com/simbody/simbody/issues/658", "id": 383865878, "node_id": "MDU6SXNzdWUzODM4NjU4Nzg=", "number": 658, "title": "Group-writable files after installation", "user": {"login": "morxa", "id": 4573064, "node_id": "MDQ6VXNlcjQ1NzMwNjQ=", "avatar_url": "https://avatars.githubusercontent.com/u/4573064?v=4", "gravatar_id": "", "url": "https://api.github.com/users/morxa", "html_url": "https://github.com/morxa", "followers_url": "https://api.github.com/users/morxa/followers", "following_url": "https://api.github.com/users/morxa/following{/other_user}", "gists_url": "https://api.github.com/users/morxa/gists{/gist_id}", "starred_url": "https://api.github.com/users/morxa/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/morxa/subscriptions", "organizations_url": "https://api.github.com/users/morxa/orgs", "repos_url": "https://api.github.com/users/morxa/repos", "events_url": "https://api.github.com/users/morxa/events{/privacy}", "received_events_url": "https://api.github.com/users/morxa/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2018-11-23T15:39:43Z", "updated_at": "2018-11-24T22:20:19Z", "closed_at": null, "author_association": "NONE", "active_lock_reason": null, "body": "After installation, a number of files is group-writable, which is uncommon. The affected files:\r\n```\r\n/usr/lib64/libSimTKcommon.so.3.6\r\n/usr/lib64/libSimTKmath.so.3.6\r\n/usr/lib64/libSimTKsimbody.so.3.6\r\n/usr/libexec/simbody/simbody-visualizer\r\n```\r\n\r\nIs there a particular reason for this?\r\n\r\nBackground: I'm currently packaging simbody for Fedora, and this was noticed by `rpmlint`. I can fix this downstream, but  I'd prefer to fix this upstream. I can submit a PR if you're interested.", "reactions": {"url": "https://api.github.com/repos/simbody/simbody/issues/658/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/simbody/simbody/issues/658/timeline", "performed_via_github_app": null}, {"url": "https://api.github.com/repos/simbody/simbody/issues/659", "repository_url": "https://api.github.com/repos/simbody/simbody", "labels_url": "https://api.github.com/repos/simbody/simbody/issues/659/labels{/name}", "comments_url": "https://api.github.com/repos/simbody/simbody/issues/659/comments", "events_url": "https://api.github.com/repos/simbody/simbody/issues/659/events", "html_url": "https://github.com/simbody/simbody/issues/659", "id": 383869130, "node_id": "MDU6SXNzdWUzODM4NjkxMzA=", "number": 659, "title": "Do not call exit from shared library", "user": {"login": "morxa", "id": 4573064, "node_id": "MDQ6VXNlcjQ1NzMwNjQ=", "avatar_url": "https://avatars.githubusercontent.com/u/4573064?v=4", "gravatar_id": "", "url": "https://api.github.com/users/morxa", "html_url": "https://github.com/morxa", "followers_url": "https://api.github.com/users/morxa/followers", "following_url": "https://api.github.com/users/morxa/following{/other_user}", "gists_url": "https://api.github.com/users/morxa/gists{/gist_id}", "starred_url": "https://api.github.com/users/morxa/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/morxa/subscriptions", "organizations_url": "https://api.github.com/users/morxa/orgs", "repos_url": "https://api.github.com/users/morxa/repos", "events_url": "https://api.github.com/users/morxa/events{/privacy}", "received_events_url": "https://api.github.com/users/morxa/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2018-11-23T15:50:43Z", "updated_at": "2018-11-23T21:48:52Z", "closed_at": null, "author_association": "NONE", "active_lock_reason": null, "body": "libSimTKmath calls `exit` in several places:\r\n```\r\n$ git grep 'exit(' .\r\nOptimizers/src/CMAESOptimizer.cpp:    cmaes_exit(&evo);\r\nOptimizers/src/IpOpt/IpIpoptApplication.cpp:        exit(-1);\r\nOptimizers/src/IpOpt/IpIpoptApplication.cpp:        exit(-1);\r\nOptimizers/src/IpOpt/IpIpoptApplication.cpp:      exit(-1);\r\nOptimizers/src/IpOpt/IpIpoptApplication.cpp:      exit(-1);\r\nOptimizers/src/IpOpt/IpIpoptApplication.cpp:      exit(-1);\r\nOptimizers/src/c-cmaes/cmaes.c:void   cmaes_random_exit(cmaes_random_t *);\r\nOptimizers/src/c-cmaes/cmaes.c:void cmaes_readpara_exit(cmaes_readpara_t *);\r\nOptimizers/src/c-cmaes/cmaes.c:                     \"; use cmaes_exit() first\",0,0);\r\nOptimizers/src/c-cmaes/cmaes.c:cmaes_exit(cmaes_t *t)\r\nOptimizers/src/c-cmaes/cmaes.c:} /* cmaes_exit() */\r\nOptimizers/src/c-cmaes/cmaes.c:cmaes_random_exit(cmaes_random_t *t)\r\nOptimizers/src/c-cmaes/cmaes.c:void cmaes_readpara_exit(cmaes_readpara_t *t)\r\nOptimizers/src/c-cmaes/cmaes.c:  exit(1);\r\nOptimizers/src/c-cmaes/cmaes.c:      exit(1);\r\nOptimizers/src/c-cmaes/cmaes_interface.h:void cmaes_exit(cmaes_t *);\r\nOptimizers/src/c-cmaes/docfunctions.txt:cmaes_exit(cmaes_t *) releases the dynamically allocated memory, \r\nOptimizers/src/c-cmaes/docfunctions.txt:             the execution by calling exit(1). This behavoir can \r\ntests/adhoc/nlpqlp.cpp:            exit(0);\r\ntests/adhoc/nlpqlp.cpp:                exit(0);\r\ntests/adhoc/nlpqlp.cpp:                exit(0);\r\ntests/adhoc/nlpqlp.cpp:                    exit(0);\r\n```\r\n\r\nCalling `exit` in a shared libary is generally considered bad practice, as the caller has no way to catch the call, and you will be exiting the main application (the caller). It's also a blocker for getting this package into Fedora.\r\n\r\nI would suggest to replace all `exit` calls by throwing an exception. If the exception is not caught, the behavior will be the same as it is now, but a caller has the option to catch the exception and react appropriately.", "reactions": {"url": "https://api.github.com/repos/simbody/simbody/issues/659/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/simbody/simbody/issues/659/timeline", "performed_via_github_app": null}, {"url": "https://api.github.com/repos/simbody/simbody/issues/662", "repository_url": "https://api.github.com/repos/simbody/simbody", "labels_url": "https://api.github.com/repos/simbody/simbody/issues/662/labels{/name}", "comments_url": "https://api.github.com/repos/simbody/simbody/issues/662/comments", "events_url": "https://api.github.com/repos/simbody/simbody/issues/662/events", "html_url": "https://github.com/simbody/simbody/issues/662", "id": 394536741, "node_id": "MDU6SXNzdWUzOTQ1MzY3NDE=", "number": 662, "title": "Is Explicitly Setting CMP0003 and CMP0005 Necessary?", "user": {"login": "artin-f", "id": 3402077, "node_id": "MDQ6VXNlcjM0MDIwNzc=", "avatar_url": "https://avatars.githubusercontent.com/u/3402077?v=4", "gravatar_id": "", "url": "https://api.github.com/users/artin-f", "html_url": "https://github.com/artin-f", "followers_url": "https://api.github.com/users/artin-f/followers", "following_url": "https://api.github.com/users/artin-f/following{/other_user}", "gists_url": "https://api.github.com/users/artin-f/gists{/gist_id}", "starred_url": "https://api.github.com/users/artin-f/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/artin-f/subscriptions", "organizations_url": "https://api.github.com/users/artin-f/orgs", "repos_url": "https://api.github.com/users/artin-f/repos", "events_url": "https://api.github.com/users/artin-f/events{/privacy}", "received_events_url": "https://api.github.com/users/artin-f/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": {"login": "artin-f", "id": 3402077, "node_id": "MDQ6VXNlcjM0MDIwNzc=", "avatar_url": "https://avatars.githubusercontent.com/u/3402077?v=4", "gravatar_id": "", "url": "https://api.github.com/users/artin-f", "html_url": "https://github.com/artin-f", "followers_url": "https://api.github.com/users/artin-f/followers", "following_url": "https://api.github.com/users/artin-f/following{/other_user}", "gists_url": "https://api.github.com/users/artin-f/gists{/gist_id}", "starred_url": "https://api.github.com/users/artin-f/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/artin-f/subscriptions", "organizations_url": "https://api.github.com/users/artin-f/orgs", "repos_url": "https://api.github.com/users/artin-f/repos", "events_url": "https://api.github.com/users/artin-f/events{/privacy}", "received_events_url": "https://api.github.com/users/artin-f/received_events", "type": "User", "site_admin": false}, "assignees": [{"login": "artin-f", "id": 3402077, "node_id": "MDQ6VXNlcjM0MDIwNzc=", "avatar_url": "https://avatars.githubusercontent.com/u/3402077?v=4", "gravatar_id": "", "url": "https://api.github.com/users/artin-f", "html_url": "https://github.com/artin-f", "followers_url": "https://api.github.com/users/artin-f/followers", "following_url": "https://api.github.com/users/artin-f/following{/other_user}", "gists_url": "https://api.github.com/users/artin-f/gists{/gist_id}", "starred_url": "https://api.github.com/users/artin-f/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/artin-f/subscriptions", "organizations_url": "https://api.github.com/users/artin-f/orgs", "repos_url": "https://api.github.com/users/artin-f/repos", "events_url": "https://api.github.com/users/artin-f/events{/privacy}", "received_events_url": "https://api.github.com/users/artin-f/received_events", "type": "User", "site_admin": false}], "milestone": null, "comments": 3, "created_at": "2018-12-28T03:21:32Z", "updated_at": "2018-12-29T00:35:19Z", "closed_at": "2018-12-29T00:35:19Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Two CMake policies are explicitly set to `NEW` here:\r\nhttps://github.com/simbody/simbody/blob/43c2645c634bc93488deab52da231708b4654a9f/CMakeLists.txt#L21-L24\r\n\r\nBoth `CMP0003` and `CMP0005` were added in CMake version `2.6` [[ref]](https://cmake.org/cmake/help/v3.13/manual/cmake-policies.7.html#manual:cmake-policies(7)).  Since Simbody requires CMake version `2.8.10` and above, both policies are set to `NEW` by default.  Therefore, explicitly setting them seems unnecessary.\r\n\r\nThe above code doesn't cause any issues in Simbody operation, but removing it will improve readability and maintainability a little bit.", "reactions": {"url": "https://api.github.com/repos/simbody/simbody/issues/662/reactions", "total_count": 2, "+1": 2, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/simbody/simbody/issues/662/timeline", "performed_via_github_app": null}, {"url": "https://api.github.com/repos/simbody/simbody/issues/664", "repository_url": "https://api.github.com/repos/simbody/simbody", "labels_url": "https://api.github.com/repos/simbody/simbody/issues/664/labels{/name}", "comments_url": "https://api.github.com/repos/simbody/simbody/issues/664/comments", "events_url": "https://api.github.com/repos/simbody/simbody/issues/664/events", "html_url": "https://github.com/simbody/simbody/issues/664", "id": 424937720, "node_id": "MDU6SXNzdWU0MjQ5Mzc3MjA=", "number": 664, "title": "Don't install lapack DLLs if external lapack is used on windows", "user": {"login": "isuruf", "id": 5234427, "node_id": "MDQ6VXNlcjUyMzQ0Mjc=", "avatar_url": "https://avatars.githubusercontent.com/u/5234427?v=4", "gravatar_id": "", "url": "https://api.github.com/users/isuruf", "html_url": "https://github.com/isuruf", "followers_url": "https://api.github.com/users/isuruf/followers", "following_url": "https://api.github.com/users/isuruf/following{/other_user}", "gists_url": "https://api.github.com/users/isuruf/gists{/gist_id}", "starred_url": "https://api.github.com/users/isuruf/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/isuruf/subscriptions", "organizations_url": "https://api.github.com/users/isuruf/orgs", "repos_url": "https://api.github.com/users/isuruf/repos", "events_url": "https://api.github.com/users/isuruf/events{/privacy}", "received_events_url": "https://api.github.com/users/isuruf/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2019-03-25T14:37:50Z", "updated_at": "2019-03-25T16:58:29Z", "closed_at": null, "author_association": "NONE", "active_lock_reason": null, "body": "", "reactions": {"url": "https://api.github.com/repos/simbody/simbody/issues/664/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/simbody/simbody/issues/664/timeline", "performed_via_github_app": null}, {"url": "https://api.github.com/repos/simbody/simbody/issues/665", "repository_url": "https://api.github.com/repos/simbody/simbody", "labels_url": "https://api.github.com/repos/simbody/simbody/issues/665/labels{/name}", "comments_url": "https://api.github.com/repos/simbody/simbody/issues/665/comments", "events_url": "https://api.github.com/repos/simbody/simbody/issues/665/events", "html_url": "https://github.com/simbody/simbody/issues/665", "id": 427417539, "node_id": "MDU6SXNzdWU0Mjc0MTc1Mzk=", "number": 665, "title": "Benchmark Testing", "user": {"login": "acxz", "id": 17132214, "node_id": "MDQ6VXNlcjE3MTMyMjE0", "avatar_url": "https://avatars.githubusercontent.com/u/17132214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/acxz", "html_url": "https://github.com/acxz", "followers_url": "https://api.github.com/users/acxz/followers", "following_url": "https://api.github.com/users/acxz/following{/other_user}", "gists_url": "https://api.github.com/users/acxz/gists{/gist_id}", "starred_url": "https://api.github.com/users/acxz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/acxz/subscriptions", "organizations_url": "https://api.github.com/users/acxz/orgs", "repos_url": "https://api.github.com/users/acxz/repos", "events_url": "https://api.github.com/users/acxz/events{/privacy}", "received_events_url": "https://api.github.com/users/acxz/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2019-03-31T16:53:14Z", "updated_at": "2019-03-31T20:32:24Z", "closed_at": "2019-03-31T19:38:43Z", "author_association": "NONE", "active_lock_reason": null, "body": "There are many physics engines out there for the simulation/robotics community. As such, there is a need for benchmarking various engines for accurate and objective comparisons. Benchmarking also helps end users determine which is the appropriate engine for their task and for developers to help debug and better their own engines.\r\n\r\nThere is ongoing work for benchmarking at [SimBenchmark](https://github.com/leggedrobotics/SimBenchmark). As of now RaiSim, Bullet, ODE, MuJoCo, and DART have been benchmarked ([results](https://leggedrobotics.github.io/SimBenchmark/)), but it would be great to have more engines benchmarked.\r\n\r\nAs such, I would like to invite members of the Simbody community to help test & benchmark Simbody under the same framework. Based on my (limited) knowledge, this is the first time such benchmarking has been openly available. Utilizing this instead of performing closed benchmarking is beneficial for both the robotics community as well as the Simbody community.", "reactions": {"url": "https://api.github.com/repos/simbody/simbody/issues/665/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/simbody/simbody/issues/665/timeline", "performed_via_github_app": null}, {"url": "https://api.github.com/repos/simbody/simbody/issues/666", "repository_url": "https://api.github.com/repos/simbody/simbody", "labels_url": "https://api.github.com/repos/simbody/simbody/issues/666/labels{/name}", "comments_url": "https://api.github.com/repos/simbody/simbody/issues/666/comments", "events_url": "https://api.github.com/repos/simbody/simbody/issues/666/events", "html_url": "https://github.com/simbody/simbody/issues/666", "id": 435108044, "node_id": "MDU6SXNzdWU0MzUxMDgwNDQ=", "number": 666, "title": "Smooth Contact Model", "user": {"login": "antoinefalisse", "id": 19328993, "node_id": "MDQ6VXNlcjE5MzI4OTkz", "avatar_url": "https://avatars.githubusercontent.com/u/19328993?v=4", "gravatar_id": "", "url": "https://api.github.com/users/antoinefalisse", "html_url": "https://github.com/antoinefalisse", "followers_url": "https://api.github.com/users/antoinefalisse/followers", "following_url": "https://api.github.com/users/antoinefalisse/following{/other_user}", "gists_url": "https://api.github.com/users/antoinefalisse/gists{/gist_id}", "starred_url": "https://api.github.com/users/antoinefalisse/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/antoinefalisse/subscriptions", "organizations_url": "https://api.github.com/users/antoinefalisse/orgs", "repos_url": "https://api.github.com/users/antoinefalisse/repos", "events_url": "https://api.github.com/users/antoinefalisse/events{/privacy}", "received_events_url": "https://api.github.com/users/antoinefalisse/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-04-19T09:10:01Z", "updated_at": "2019-08-09T00:52:33Z", "closed_at": "2019-08-09T00:52:33Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "Hi @sherm1 and @chrisdembia,\r\n\r\n@gilserrancoli and I have been using a smooth approximation of the Hunt-Crossley contact model available in Simbody for our applications (OpenSim-based predictive simulations of movements). The rationale for using such smooth model was the use of gradient-based optimization that requires twice-continuously differentiable models. \r\n\r\nWe believe this smooth model could be useful for the community, in particular with software like Moco, and therefore propose to merge it into Simbody.", "reactions": {"url": "https://api.github.com/repos/simbody/simbody/issues/666/reactions", "total_count": 2, "+1": 2, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/simbody/simbody/issues/666/timeline", "performed_via_github_app": null}, {"url": "https://api.github.com/repos/simbody/simbody/issues/668", "repository_url": "https://api.github.com/repos/simbody/simbody", "labels_url": "https://api.github.com/repos/simbody/simbody/issues/668/labels{/name}", "comments_url": "https://api.github.com/repos/simbody/simbody/issues/668/comments", "events_url": "https://api.github.com/repos/simbody/simbody/issues/668/events", "html_url": "https://github.com/simbody/simbody/issues/668", "id": 450403968, "node_id": "MDU6SXNzdWU0NTA0MDM5Njg=", "number": 668, "title": "Mojave calculation result differs", "user": {"login": "Luli2020", "id": 48451975, "node_id": "MDQ6VXNlcjQ4NDUxOTc1", "avatar_url": "https://avatars.githubusercontent.com/u/48451975?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Luli2020", "html_url": "https://github.com/Luli2020", "followers_url": "https://api.github.com/users/Luli2020/followers", "following_url": "https://api.github.com/users/Luli2020/following{/other_user}", "gists_url": "https://api.github.com/users/Luli2020/gists{/gist_id}", "starred_url": "https://api.github.com/users/Luli2020/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Luli2020/subscriptions", "organizations_url": "https://api.github.com/users/Luli2020/orgs", "repos_url": "https://api.github.com/users/Luli2020/repos", "events_url": "https://api.github.com/users/Luli2020/events{/privacy}", "received_events_url": "https://api.github.com/users/Luli2020/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 6, "created_at": "2019-05-30T16:51:03Z", "updated_at": "2019-05-31T21:58:23Z", "closed_at": null, "author_association": "NONE", "active_lock_reason": null, "body": "We are trying to upgrade our development system into Mojave, however we found that the calculation results differs (slightly but noticeable) from that in other platform (High Sierra or Ubuntu) so our unit test failed. Anybody has same experience or any insight about it? \r\nThe program used MultibodySystem, TimeStepper, RungeKuttaMersonIntegrator etc., and the change happens when first TimeStepper::stepTo() function was called.", "reactions": {"url": "https://api.github.com/repos/simbody/simbody/issues/668/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/simbody/simbody/issues/668/timeline", "performed_via_github_app": null}, {"url": "https://api.github.com/repos/simbody/simbody/issues/669", "repository_url": "https://api.github.com/repos/simbody/simbody", "labels_url": "https://api.github.com/repos/simbody/simbody/issues/669/labels{/name}", "comments_url": "https://api.github.com/repos/simbody/simbody/issues/669/comments", "events_url": "https://api.github.com/repos/simbody/simbody/issues/669/events", "html_url": "https://github.com/simbody/simbody/issues/669", "id": 462228588, "node_id": "MDU6SXNzdWU0NjIyMjg1ODg=", "number": 669, "title": "Constraint::Custom::Implementation override wrong function when implementing acceleration constraint", "user": {"login": "dpkong", "id": 19234180, "node_id": "MDQ6VXNlcjE5MjM0MTgw", "avatar_url": "https://avatars.githubusercontent.com/u/19234180?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dpkong", "html_url": "https://github.com/dpkong", "followers_url": "https://api.github.com/users/dpkong/followers", "following_url": "https://api.github.com/users/dpkong/following{/other_user}", "gists_url": "https://api.github.com/users/dpkong/gists{/gist_id}", "starred_url": "https://api.github.com/users/dpkong/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dpkong/subscriptions", "organizations_url": "https://api.github.com/users/dpkong/orgs", "repos_url": "https://api.github.com/users/dpkong/repos", "events_url": "https://api.github.com/users/dpkong/events{/privacy}", "received_events_url": "https://api.github.com/users/dpkong/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-06-28T22:32:11Z", "updated_at": "2019-07-07T01:25:50Z", "closed_at": "2019-07-07T01:25:50Z", "author_association": "NONE", "active_lock_reason": null, "body": "I define a acceleration constraint implementation inherited from Constraint::Custom::Implementation\r\nI am sure I initialize Implementation(matter, 0, 0, 1) and override the calcAccelerationErrors function\r\nBut it still ask me to override the calcVelocityDotErrors because in runtime it is called and virtual function was called.\r\nAfter I override calcVelocityDotErrors in the acceleration constraint implementation, it works.\r\n[PrescribedAcc.txt](https://github.com/simbody/simbody/files/3341072/PrescribedAcc.txt)\r\n", "reactions": {"url": "https://api.github.com/repos/simbody/simbody/issues/669/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/simbody/simbody/issues/669/timeline", "performed_via_github_app": null}, {"url": "https://api.github.com/repos/simbody/simbody/issues/674", "repository_url": "https://api.github.com/repos/simbody/simbody", "labels_url": "https://api.github.com/repos/simbody/simbody/issues/674/labels{/name}", "comments_url": "https://api.github.com/repos/simbody/simbody/issues/674/comments", "events_url": "https://api.github.com/repos/simbody/simbody/issues/674/events", "html_url": "https://github.com/simbody/simbody/issues/674", "id": 509654554, "node_id": "MDU6SXNzdWU1MDk2NTQ1NTQ=", "number": 674, "title": "macOS Catalina: Visualizer is 1/4 size", "user": {"login": "chrisdembia", "id": 846001, "node_id": "MDQ6VXNlcjg0NjAwMQ==", "avatar_url": "https://avatars.githubusercontent.com/u/846001?v=4", "gravatar_id": "", "url": "https://api.github.com/users/chrisdembia", "html_url": "https://github.com/chrisdembia", "followers_url": "https://api.github.com/users/chrisdembia/followers", "following_url": "https://api.github.com/users/chrisdembia/following{/other_user}", "gists_url": "https://api.github.com/users/chrisdembia/gists{/gist_id}", "starred_url": "https://api.github.com/users/chrisdembia/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/chrisdembia/subscriptions", "organizations_url": "https://api.github.com/users/chrisdembia/orgs", "repos_url": "https://api.github.com/users/chrisdembia/repos", "events_url": "https://api.github.com/users/chrisdembia/events{/privacy}", "received_events_url": "https://api.github.com/users/chrisdembia/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 9, "created_at": "2019-10-20T21:21:35Z", "updated_at": "2019-10-28T20:29:58Z", "closed_at": "2019-10-28T20:29:58Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "On macOS Catalina, the simbody-visualizer only takes up 1/4 of the window:\r\n\r\n<img width=\"912\" alt=\"image\" src=\"https://user-images.githubusercontent.com/846001/67166439-46a42900-f344-11e9-98ac-fae7dd7a6a6e.png\">\r\n\r\nThis might be related: https://github.com/redeclipse/base/issues/920\r\n\r\nGiven that freeglut is deprecated on macOS, we could also consider using Metal or an abstraction layer:\r\n\r\n- https://developer.apple.com/videos/play/wwdc2018/604/?time=430\r\n- https://developer.apple.com/documentation/metal/migrating_opengl_code_to_metal\r\n- https://github.com/LukasBanana/LLGL\r\n- https://github.com/KhronosGroup/MoltenVK", "reactions": {"url": "https://api.github.com/repos/simbody/simbody/issues/674/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/simbody/simbody/issues/674/timeline", "performed_via_github_app": null}, {"url": "https://api.github.com/repos/simbody/simbody/issues/675", "repository_url": "https://api.github.com/repos/simbody/simbody", "labels_url": "https://api.github.com/repos/simbody/simbody/issues/675/labels{/name}", "comments_url": "https://api.github.com/repos/simbody/simbody/issues/675/comments", "events_url": "https://api.github.com/repos/simbody/simbody/issues/675/events", "html_url": "https://github.com/simbody/simbody/issues/675", "id": 512899775, "node_id": "MDU6SXNzdWU1MTI4OTk3NzU=", "number": 675, "title": "Please correct installation instructions on your website", "user": {"login": "yurivict", "id": 271906, "node_id": "MDQ6VXNlcjI3MTkwNg==", "avatar_url": "https://avatars.githubusercontent.com/u/271906?v=4", "gravatar_id": "", "url": "https://api.github.com/users/yurivict", "html_url": "https://github.com/yurivict", "followers_url": "https://api.github.com/users/yurivict/followers", "following_url": "https://api.github.com/users/yurivict/following{/other_user}", "gists_url": "https://api.github.com/users/yurivict/gists{/gist_id}", "starred_url": "https://api.github.com/users/yurivict/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/yurivict/subscriptions", "organizations_url": "https://api.github.com/users/yurivict/orgs", "repos_url": "https://api.github.com/users/yurivict/repos", "events_url": "https://api.github.com/users/yurivict/events{/privacy}", "received_events_url": "https://api.github.com/users/yurivict/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-10-26T23:54:14Z", "updated_at": "2019-12-09T00:12:04Z", "closed_at": "2019-12-09T00:12:04Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Many systems have packages for simbody (see here https://repology.org/project/simbody/versions), but your website asks users to build from source, which is much more difficult: https://simtk.org/projects/simbody/\r\n\r\nPlease correct the recommendations and ask users to install from a package where they are available.\r\n\r\nPlease also add ```FreeBSD``` to the list of supported systems because ```simbody``` package can be easily installed there with this command: ```pkg install simbody```.\r\n", "reactions": {"url": "https://api.github.com/repos/simbody/simbody/issues/675/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/simbody/simbody/issues/675/timeline", "performed_via_github_app": null}, {"url": "https://api.github.com/repos/simbody/simbody/issues/677", "repository_url": "https://api.github.com/repos/simbody/simbody", "labels_url": "https://api.github.com/repos/simbody/simbody/issues/677/labels{/name}", "comments_url": "https://api.github.com/repos/simbody/simbody/issues/677/comments", "events_url": "https://api.github.com/repos/simbody/simbody/issues/677/events", "html_url": "https://github.com/simbody/simbody/issues/677", "id": 517219907, "node_id": "MDU6SXNzdWU1MTcyMTk5MDc=", "number": 677, "title": "CUDA compile issue with \"conformingAdd\" and \"conformingSubtract\" in \"Vec.h\"", "user": {"login": "msdrezavand", "id": 15607674, "node_id": "MDQ6VXNlcjE1NjA3Njc0", "avatar_url": "https://avatars.githubusercontent.com/u/15607674?v=4", "gravatar_id": "", "url": "https://api.github.com/users/msdrezavand", "html_url": "https://github.com/msdrezavand", "followers_url": "https://api.github.com/users/msdrezavand/followers", "following_url": "https://api.github.com/users/msdrezavand/following{/other_user}", "gists_url": "https://api.github.com/users/msdrezavand/gists{/gist_id}", "starred_url": "https://api.github.com/users/msdrezavand/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/msdrezavand/subscriptions", "organizations_url": "https://api.github.com/users/msdrezavand/orgs", "repos_url": "https://api.github.com/users/msdrezavand/repos", "events_url": "https://api.github.com/users/msdrezavand/events{/privacy}", "received_events_url": "https://api.github.com/users/msdrezavand/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2019-11-04T15:17:35Z", "updated_at": "2019-11-05T21:11:02Z", "closed_at": null, "author_association": "NONE", "active_lock_reason": null, "body": "When using SimBody in a .cu file being compiled with cuda 10.0 and gcc/g++ 7.4.0 the following error pops up regarding \"conformingAdd\" and \"conformingSubtract\" in \"Vec.h\":\r\n\r\nsimbody/include/simbody/SimTKcommon/internal/Vec.h(54): error: more than one instance of overloaded function \"SimTK::Impl::conformingAdd\" matches the argument list:\r\n            function template \"void SimTK::Impl::conformingAdd(const SimTK::Vec<1, E1, S1> &, const SimTK::Vec<1, E2, S2> &, SimTK::Vec<1, SimTK::CNT<E1>::Result<E2>::Add, 1> &)\"\r\n            function template \"void SimTK::Impl::conformingAdd(const SimTK::Vec<N, E1, S1> &, const SimTK::Vec<N, E2, S2> &, SimTK::Vec<N, SimTK::CNT<E1>::Result<E2>::Add, 1> &)\"\r\n            argument types are: (const SimTK::Vec<1, SimTK::Real, 1>, const SimTK::Vec<1, SimTK::Real, 1>, SimTK::Vec<1, SimTK::Real, 1>)\r\n          detected during:\r\n            instantiation of \"void SimTK::Impl::conformingAdd(const SimTK::Vec<N, E1, S1> &, const SimTK::Vec<N, E2, S2> &, SimTK::Vec<N, SimTK::CNT<E1>::Result<E2>::Add, 1> &) [with N=2, E1=SimTK::Real, S1=1, E2=SimTK::Real, S2=1]\"\r\n\r\n\r\nI tried to use different compilers but did not help.\r\n\r\n", "reactions": {"url": "https://api.github.com/repos/simbody/simbody/issues/677/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/simbody/simbody/issues/677/timeline", "performed_via_github_app": null}, {"url": "https://api.github.com/repos/simbody/simbody/issues/678", "repository_url": "https://api.github.com/repos/simbody/simbody", "labels_url": "https://api.github.com/repos/simbody/simbody/issues/678/labels{/name}", "comments_url": "https://api.github.com/repos/simbody/simbody/issues/678/comments", "events_url": "https://api.github.com/repos/simbody/simbody/issues/678/events", "html_url": "https://github.com/simbody/simbody/issues/678", "id": 528421121, "node_id": "MDU6SXNzdWU1Mjg0MjExMjE=", "number": 678, "title": "Inverse Kinematics fail", "user": {"login": "livrou", "id": 58196214, "node_id": "MDQ6VXNlcjU4MTk2MjE0", "avatar_url": "https://avatars.githubusercontent.com/u/58196214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/livrou", "html_url": "https://github.com/livrou", "followers_url": "https://api.github.com/users/livrou/followers", "following_url": "https://api.github.com/users/livrou/following{/other_user}", "gists_url": "https://api.github.com/users/livrou/gists{/gist_id}", "starred_url": "https://api.github.com/users/livrou/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/livrou/subscriptions", "organizations_url": "https://api.github.com/users/livrou/orgs", "repos_url": "https://api.github.com/users/livrou/repos", "events_url": "https://api.github.com/users/livrou/events{/privacy}", "received_events_url": "https://api.github.com/users/livrou/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2019-11-26T00:50:32Z", "updated_at": "2019-11-26T00:53:13Z", "closed_at": "2019-11-26T00:53:12Z", "author_association": "NONE", "active_lock_reason": null, "body": "So I am trying to run inverse kinematics and when I put in any time range (0 to 1.5), (0.0083 to 7.666) etc, it won't register that there is a final time and then fails since the final time (0)  is before the start time. Even when I edited it in the text editor and wrote: <time_range> 0.008333 12.333333</time_range>, then loaded it into the IK tool it showed the final time was 0.", "reactions": {"url": "https://api.github.com/repos/simbody/simbody/issues/678/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/simbody/simbody/issues/678/timeline", "performed_via_github_app": null}, {"url": "https://api.github.com/repos/simbody/simbody/issues/679", "repository_url": "https://api.github.com/repos/simbody/simbody", "labels_url": "https://api.github.com/repos/simbody/simbody/issues/679/labels{/name}", "comments_url": "https://api.github.com/repos/simbody/simbody/issues/679/comments", "events_url": "https://api.github.com/repos/simbody/simbody/issues/679/events", "html_url": "https://github.com/simbody/simbody/issues/679", "id": 534255777, "node_id": "MDU6SXNzdWU1MzQyNTU3Nzc=", "number": 679, "title": "Release Simbody 3.7", "user": {"login": "chrisdembia", "id": 846001, "node_id": "MDQ6VXNlcjg0NjAwMQ==", "avatar_url": "https://avatars.githubusercontent.com/u/846001?v=4", "gravatar_id": "", "url": "https://api.github.com/users/chrisdembia", "html_url": "https://github.com/chrisdembia", "followers_url": "https://api.github.com/users/chrisdembia/followers", "following_url": "https://api.github.com/users/chrisdembia/following{/other_user}", "gists_url": "https://api.github.com/users/chrisdembia/gists{/gist_id}", "starred_url": "https://api.github.com/users/chrisdembia/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/chrisdembia/subscriptions", "organizations_url": "https://api.github.com/users/chrisdembia/orgs", "repos_url": "https://api.github.com/users/chrisdembia/repos", "events_url": "https://api.github.com/users/chrisdembia/events{/privacy}", "received_events_url": "https://api.github.com/users/chrisdembia/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 11, "created_at": "2019-12-06T21:01:45Z", "updated_at": "2019-12-09T00:25:31Z", "closed_at": "2019-12-09T00:25:31Z", "author_association": "MEMBER", "active_lock_reason": null, "body": "@sherm1 can I prepare a Simbody 3.6.2 release that includes the macOS Catalina fix (#676)?\r\n\r\n- [x] update changelog\r\n- [x] in README.md, replace \"3.6\" with \"3.7\"\r\n- [x] check that README.md is up to date\r\n- [x] update version number for user guide and advanced programming guide \r\n- [x] check theory manual\r\n- [x] post doxygen on a new simbody repository (simbody-<version>-doxygen)\r\n- [x] update release date of 3.7 in the changelog.\r\n- [x] make 3.7 branch\r\n- [x] make 3.7 release (tag)\r\n- [ ] update master branch to 3.8\r\n  - [x] add \"3.8\" section to CHANGELOG.md.\r\n- [x] update github.com/simbody/simbody.github.io/index.html and github.com/simbody/simbody.github.io/latest/index.html.\r\n- [x] announce release on forum", "reactions": {"url": "https://api.github.com/repos/simbody/simbody/issues/679/reactions", "total_count": 1, "+1": 1, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/simbody/simbody/issues/679/timeline", "performed_via_github_app": null}, {"url": "https://api.github.com/repos/simbody/simbody/issues/682", "repository_url": "https://api.github.com/repos/simbody/simbody", "labels_url": "https://api.github.com/repos/simbody/simbody/issues/682/labels{/name}", "comments_url": "https://api.github.com/repos/simbody/simbody/issues/682/comments", "events_url": "https://api.github.com/repos/simbody/simbody/issues/682/events", "html_url": "https://github.com/simbody/simbody/issues/682", "id": 551742206, "node_id": "MDU6SXNzdWU1NTE3NDIyMDY=", "number": 682, "title": "Simbody 3.7: TestCustomConstraints fails", "user": {"login": "apalazzi", "id": 4243291, "node_id": "MDQ6VXNlcjQyNDMyOTE=", "avatar_url": "https://avatars.githubusercontent.com/u/4243291?v=4", "gravatar_id": "", "url": "https://api.github.com/users/apalazzi", "html_url": "https://github.com/apalazzi", "followers_url": "https://api.github.com/users/apalazzi/followers", "following_url": "https://api.github.com/users/apalazzi/following{/other_user}", "gists_url": "https://api.github.com/users/apalazzi/gists{/gist_id}", "starred_url": "https://api.github.com/users/apalazzi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/apalazzi/subscriptions", "organizations_url": "https://api.github.com/users/apalazzi/orgs", "repos_url": "https://api.github.com/users/apalazzi/repos", "events_url": "https://api.github.com/users/apalazzi/events{/privacy}", "received_events_url": "https://api.github.com/users/apalazzi/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2020-01-18T08:59:52Z", "updated_at": "2020-06-14T23:21:30Z", "closed_at": "2020-01-18T19:58:38Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi,\r\nThe test TestCustomConstraints fot Simbody 3.7 fails on my system (Debian testing \"bullseye\" with some elements from unstable) with the following message:\r\n\r\n```\r\nStarting test TestCustomConstraints ...\r\n  testCoordinateCoupler1 ...\r\n  testCoordinateCoupler1 done. real/CPU ms: 2.2 / 24.1\r\n  testCoordinateCoupler2 ...\r\n  testCoordinateCoupler2 done. real/CPU ms: 38.7 / 452.2\r\n  testCoordinateCoupler3 ...\r\n  testCoordinateCoupler3 done. real/CPU ms: 43.8 / 506.9\r\n  testSpeedCoupler1 ...\r\n  testSpeedCoupler1 done. real/CPU ms: 0.9 / 11.3\r\n  testSpeedCoupler2 ...\r\n  testSpeedCoupler2 done. real/CPU ms: 205.9 / 364.5\r\nTest failed due to exception: SimTK Exception thrown at TestCustomConstraints.cpp:451:\r\n  Internal bug detected: Test values should have been numerically equivalent at tolerance=1e-06.\r\n  (Assertion 'SimTK::Test::numericallyEqual((0.0),(power),1,(10*integ.getConstraintToleranceInUse()))' failed).\r\n  Please file an Issue at https://github.com/simbody/simbody/issues.\r\n  Include the above information and anything else needed to reproduce the problem.\r\n\r\nTestCustomConstraints done. real/CPU ms: 293.9 / 1384.9\r\n```", "reactions": {"url": "https://api.github.com/repos/simbody/simbody/issues/682/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/simbody/simbody/issues/682/timeline", "performed_via_github_app": null}, {"url": "https://api.github.com/repos/simbody/simbody/issues/683", "repository_url": "https://api.github.com/repos/simbody/simbody", "labels_url": "https://api.github.com/repos/simbody/simbody/issues/683/labels{/name}", "comments_url": "https://api.github.com/repos/simbody/simbody/issues/683/comments", "events_url": "https://api.github.com/repos/simbody/simbody/issues/683/events", "html_url": "https://github.com/simbody/simbody/issues/683", "id": 551750436, "node_id": "MDU6SXNzdWU1NTE3NTA0MzY=", "number": 683, "title": "Different behaviour when using simbody RelWithDebInfo vs Release 3.7", "user": {"login": "apalazzi", "id": 4243291, "node_id": "MDQ6VXNlcjQyNDMyOTE=", "avatar_url": "https://avatars.githubusercontent.com/u/4243291?v=4", "gravatar_id": "", "url": "https://api.github.com/users/apalazzi", "html_url": "https://github.com/apalazzi", "followers_url": "https://api.github.com/users/apalazzi/followers", "following_url": "https://api.github.com/users/apalazzi/following{/other_user}", "gists_url": "https://api.github.com/users/apalazzi/gists{/gist_id}", "starred_url": "https://api.github.com/users/apalazzi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/apalazzi/subscriptions", "organizations_url": "https://api.github.com/users/apalazzi/orgs", "repos_url": "https://api.github.com/users/apalazzi/repos", "events_url": "https://api.github.com/users/apalazzi/events{/privacy}", "received_events_url": "https://api.github.com/users/apalazzi/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-01-18T10:19:14Z", "updated_at": "2020-01-19T20:26:00Z", "closed_at": null, "author_association": "NONE", "active_lock_reason": null, "body": "Hi,\r\n\r\nI'm refactoring my program, and I have a strange behavior: if I use the (dynamic) libraries created with RelWithDebInfo it ends with an error \"free(): invalid pointer\", but if I run the debug version the error is different:\r\n```\r\n/home/andrea/simbody/simbody/SimTKmath/Geometry/include/simmath/internal/GCVSPLUtil.h:95: static SimTK::Vec<MM, double, 1> SimTK::GCVSPLUtil::splder(int, int, SimTK::Real, const Vector&, const SimTK::Vector_<SimTK::Vec<MM, double, 1> >&) [with int K = 1; SimTK::Real = double; SimTK::Vector = SimTK::Vector_<double>]: Assertion `t >= x[0] && t <= x[x.size()-1]' failed.\r\n```\r\nI tested different build options (-Ox, -gx, -DNDEBUG) but the result is always the same: the program using RelWithDebInfo aborts on free() while with Debug it fails the assertion.\r\n\r\nLet me know if you need me to test something specific.", "reactions": {"url": "https://api.github.com/repos/simbody/simbody/issues/683/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/simbody/simbody/issues/683/timeline", "performed_via_github_app": null}, {"url": "https://api.github.com/repos/simbody/simbody/issues/684", "repository_url": "https://api.github.com/repos/simbody/simbody", "labels_url": "https://api.github.com/repos/simbody/simbody/issues/684/labels{/name}", "comments_url": "https://api.github.com/repos/simbody/simbody/issues/684/comments", "events_url": "https://api.github.com/repos/simbody/simbody/issues/684/events", "html_url": "https://github.com/simbody/simbody/issues/684", "id": 555738625, "node_id": "MDU6SXNzdWU1NTU3Mzg2MjU=", "number": 684, "title": "Simbody Visualizer should have writeImage()/saveImage() exposed in API; also an option for transparent backgrounds", "user": {"login": "Aravind-Sundararajan", "id": 26929285, "node_id": "MDQ6VXNlcjI2OTI5Mjg1", "avatar_url": "https://avatars.githubusercontent.com/u/26929285?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Aravind-Sundararajan", "html_url": "https://github.com/Aravind-Sundararajan", "followers_url": "https://api.github.com/users/Aravind-Sundararajan/followers", "following_url": "https://api.github.com/users/Aravind-Sundararajan/following{/other_user}", "gists_url": "https://api.github.com/users/Aravind-Sundararajan/gists{/gist_id}", "starred_url": "https://api.github.com/users/Aravind-Sundararajan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Aravind-Sundararajan/subscriptions", "organizations_url": "https://api.github.com/users/Aravind-Sundararajan/orgs", "repos_url": "https://api.github.com/users/Aravind-Sundararajan/repos", "events_url": "https://api.github.com/users/Aravind-Sundararajan/events{/privacy}", "received_events_url": "https://api.github.com/users/Aravind-Sundararajan/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2020-01-27T17:59:25Z", "updated_at": "2020-01-27T18:03:57Z", "closed_at": null, "author_association": "NONE", "active_lock_reason": null, "body": "The usecase here would be:\r\n\r\n```\r\n%MATLAB%\r\nimport org.opensim.modeling.*\r\nmyModel =org.opensim.modeling.Model(*modelPath*);\r\nmyModel.setUseVisualizer(true);\r\nstate = myModel.initSystem();\r\nstatesStorage=  org.opensim.modeling.Storage(*statesPath*);\r\nST = org.opensim.modeling.StatesTrajectory().createFromStatesStorage(myModel, statesStorage,true,true,false);\r\nstate = ST.get(0);\r\nsviz = myModel.updVisualizer().updSimbodyVisualizer();\r\nsviz.setShowSimTime(false);\r\nsviz.setShowFrameNumber(false);\r\nsviz.setBackgroundTypeByInt(2); %ideally an option for transparent background here\r\nmyModel.getVisualizer().show(state);\r\nsviz.saveImage('image.png');\r\n```", "reactions": {"url": "https://api.github.com/repos/simbody/simbody/issues/684/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/simbody/simbody/issues/684/timeline", "performed_via_github_app": null}, {"url": "https://api.github.com/repos/simbody/simbody/issues/685", "repository_url": "https://api.github.com/repos/simbody/simbody", "labels_url": "https://api.github.com/repos/simbody/simbody/issues/685/labels{/name}", "comments_url": "https://api.github.com/repos/simbody/simbody/issues/685/comments", "events_url": "https://api.github.com/repos/simbody/simbody/issues/685/events", "html_url": "https://github.com/simbody/simbody/issues/685", "id": 571784326, "node_id": "MDU6SXNzdWU1NzE3ODQzMjY=", "number": 685, "title": "Support variable mass properties", "user": {"login": "chrisdembia", "id": 846001, "node_id": "MDQ6VXNlcjg0NjAwMQ==", "avatar_url": "https://avatars.githubusercontent.com/u/846001?v=4", "gravatar_id": "", "url": "https://api.github.com/users/chrisdembia", "html_url": "https://github.com/chrisdembia", "followers_url": "https://api.github.com/users/chrisdembia/followers", "following_url": "https://api.github.com/users/chrisdembia/following{/other_user}", "gists_url": "https://api.github.com/users/chrisdembia/gists{/gist_id}", "starred_url": "https://api.github.com/users/chrisdembia/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/chrisdembia/subscriptions", "organizations_url": "https://api.github.com/users/chrisdembia/orgs", "repos_url": "https://api.github.com/users/chrisdembia/repos", "events_url": "https://api.github.com/users/chrisdembia/events{/privacy}", "received_events_url": "https://api.github.com/users/chrisdembia/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2020-02-27T02:45:46Z", "updated_at": "2020-02-27T17:35:09Z", "closed_at": null, "author_association": "MEMBER", "active_lock_reason": null, "body": "@nickbianco and I are hoping to support optimizing a body's mass in Moco. Right now, changing a body's mass require's invoking `OpenSim::Model::initSystem()` which is too expensive to do during direct collocation.\r\n\r\nI had hoped that Simbody would allow editing the mass properties in the state (at stage Instance). I found the following in the source code:\r\n\r\nhttps://github.com/simbody/simbody/blob/c6f465bc7de0ca2adaecdbffac6076a173f5a347/Simbody/src/MobilizedBodyImpl.h#L257-L261\r\n\r\nThis indicates that Simbody does not yet support updating mass properties after `realizeTopology()`.\r\n\r\n@sherm1, do you have a sense of how difficult it would be implement a `MobilizedBody::setMassProperties(SimTK::State&)`?", "reactions": {"url": "https://api.github.com/repos/simbody/simbody/issues/685/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/simbody/simbody/issues/685/timeline", "performed_via_github_app": null}, {"url": "https://api.github.com/repos/simbody/simbody/issues/686", "repository_url": "https://api.github.com/repos/simbody/simbody", "labels_url": "https://api.github.com/repos/simbody/simbody/issues/686/labels{/name}", "comments_url": "https://api.github.com/repos/simbody/simbody/issues/686/comments", "events_url": "https://api.github.com/repos/simbody/simbody/issues/686/events", "html_url": "https://github.com/simbody/simbody/issues/686", "id": 586818429, "node_id": "MDU6SXNzdWU1ODY4MTg0Mjk=", "number": 686, "title": "Allow tweaking optimizer parameters in Assembler class", "user": {"login": "Henrik-Norgren", "id": 61786507, "node_id": "MDQ6VXNlcjYxNzg2NTA3", "avatar_url": "https://avatars.githubusercontent.com/u/61786507?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Henrik-Norgren", "html_url": "https://github.com/Henrik-Norgren", "followers_url": "https://api.github.com/users/Henrik-Norgren/followers", "following_url": "https://api.github.com/users/Henrik-Norgren/following{/other_user}", "gists_url": "https://api.github.com/users/Henrik-Norgren/gists{/gist_id}", "starred_url": "https://api.github.com/users/Henrik-Norgren/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Henrik-Norgren/subscriptions", "organizations_url": "https://api.github.com/users/Henrik-Norgren/orgs", "repos_url": "https://api.github.com/users/Henrik-Norgren/repos", "events_url": "https://api.github.com/users/Henrik-Norgren/events{/privacy}", "received_events_url": "https://api.github.com/users/Henrik-Norgren/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-03-24T09:29:31Z", "updated_at": "2020-03-24T16:49:04Z", "closed_at": null, "author_association": "NONE", "active_lock_reason": null, "body": "While using OpenSim's InverseKinematicsSolver, we noticed that we could get a huge performance boost without any major loss in solving quality by changing the limited memory history parameter in Assembler class:\r\n\r\nhttps://github.com/simbody/simbody/blob/187d22c690359677912f03c0490049f878d36c72/Simbody/src/Assembler.cpp#L767\r\n\r\nThe default is hardcoded to 50, while we've found 3 to be sufficient for our case (we use the LBFGS-B optimizer). This is mainly helpful in realtime, since it allows us to run with a higher accuracy (lower accuracy tends to lead to jumpiness when doing slow movements, since the solver does an early out if the previous solution is still \"good enough\"), but it also on average halves the offline processing time which is quite nice since this usually takes a while. The comment here states that 50 is a compromise value which makes sense, though having some way to modify the value (and other relevant parameters, perhaps even optimizer type) and tweak the performance for specific use cases without patching the library would be useful.", "reactions": {"url": "https://api.github.com/repos/simbody/simbody/issues/686/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/simbody/simbody/issues/686/timeline", "performed_via_github_app": null}, {"url": "https://api.github.com/repos/simbody/simbody/issues/687", "repository_url": "https://api.github.com/repos/simbody/simbody", "labels_url": "https://api.github.com/repos/simbody/simbody/issues/687/labels{/name}", "comments_url": "https://api.github.com/repos/simbody/simbody/issues/687/comments", "events_url": "https://api.github.com/repos/simbody/simbody/issues/687/events", "html_url": "https://github.com/simbody/simbody/issues/687", "id": 606212468, "node_id": "MDU6SXNzdWU2MDYyMTI0Njg=", "number": 687, "title": "Use CMake's ${CMAKE_CURRENT_SOURCE_DIR} instead", "user": {"login": "HiImJulien", "id": 20932956, "node_id": "MDQ6VXNlcjIwOTMyOTU2", "avatar_url": "https://avatars.githubusercontent.com/u/20932956?v=4", "gravatar_id": "", "url": "https://api.github.com/users/HiImJulien", "html_url": "https://github.com/HiImJulien", "followers_url": "https://api.github.com/users/HiImJulien/followers", "following_url": "https://api.github.com/users/HiImJulien/following{/other_user}", "gists_url": "https://api.github.com/users/HiImJulien/gists{/gist_id}", "starred_url": "https://api.github.com/users/HiImJulien/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/HiImJulien/subscriptions", "organizations_url": "https://api.github.com/users/HiImJulien/orgs", "repos_url": "https://api.github.com/users/HiImJulien/repos", "events_url": "https://api.github.com/users/HiImJulien/events{/privacy}", "received_events_url": "https://api.github.com/users/HiImJulien/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 9, "created_at": "2020-04-24T10:30:49Z", "updated_at": "2021-04-18T14:51:59Z", "closed_at": null, "author_association": "NONE", "active_lock_reason": null, "body": "Hey there!\r\n(TL;DR: What needs to be done to fix this is on the bottom.)\r\n\r\nCMake offers two mechanisms to fetch dependencies on the fly. The older `ExternalProject` and the newer `FetchContent`.\r\n\r\nThe way latter works is really simple:\r\n 1. Declare dependency\r\n 2. Check if satisfied, if not, download it\r\n 3. Add subdirectory\r\n\r\nThe only catch comes with how a project specifies it's file paths.\r\nIn my newer projects I use `${CMAKE_CURRENT_SOURCE_DIR}/source.cc`, which causes CMake to search for the file relative to the current CMakeLists that declares the file. \r\n\r\nSimbody, however, uses CMAKE_SOURCE_DIR instead, which relates the paths to the top-level CMake file causing FetchContent Setups to subsequently fail on configure. \r\n\r\n**Solution:** Replace every path to use `${CMAKE_CURRENT_SOURCE_DIR}`, so that users can easily pull in this project using the `FetchContent` API. \r\n\r\nThis is especially neat for users that don't have admin priviliges to install/run conda. Additionally I might have postgraduates checking out my repository, who I don't want to bother with getting a project's dependency straight.\r\n\r\nBelow is a sample of how one would use the `FetchContent` API.\r\n\r\n```\r\ncmake_minimum_required(VERSION 3.11)\r\nproject(sample)\r\n\r\nFetchContent_Declare(\r\n    simbody\r\n    GIT_REPOSITORY https://github.com/simbody/simbody.git\r\n    GIT_TAG \"Simbody-3.7\"\r\n)\r\n\r\nFetchContent_GetProperties(simbody)\r\nif(NOT simbody_POPULATED)\r\n    FetchContent_Populate(simbody)\r\n    add_subdirectory(${simbody_SOURCE_DIR})\r\nendif()\r\n\r\nadd_executable(\r\n    sample_app\r\n    \"${CMAKE_CURRENT_SOURCE_DIR}/src/main.cpp\"\r\n)\r\n\r\ntarget_link_libraries(\r\n    sample_app\r\n    PRIVATE\r\n    SimTK\r\n)\r\n```", "reactions": {"url": "https://api.github.com/repos/simbody/simbody/issues/687/reactions", "total_count": 1, "+1": 1, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/simbody/simbody/issues/687/timeline", "performed_via_github_app": null}, {"url": "https://api.github.com/repos/simbody/simbody/issues/688", "repository_url": "https://api.github.com/repos/simbody/simbody", "labels_url": "https://api.github.com/repos/simbody/simbody/issues/688/labels{/name}", "comments_url": "https://api.github.com/repos/simbody/simbody/issues/688/comments", "events_url": "https://api.github.com/repos/simbody/simbody/issues/688/events", "html_url": "https://github.com/simbody/simbody/issues/688", "id": 606922354, "node_id": "MDU6SXNzdWU2MDY5MjIzNTQ=", "number": 688, "title": "Ubuntu 16.04 simbody-visualizer ExamplePendulum error", "user": {"login": "freeyyc", "id": 8959497, "node_id": "MDQ6VXNlcjg5NTk0OTc=", "avatar_url": "https://avatars.githubusercontent.com/u/8959497?v=4", "gravatar_id": "", "url": "https://api.github.com/users/freeyyc", "html_url": "https://github.com/freeyyc", "followers_url": "https://api.github.com/users/freeyyc/followers", "following_url": "https://api.github.com/users/freeyyc/following{/other_user}", "gists_url": "https://api.github.com/users/freeyyc/gists{/gist_id}", "starred_url": "https://api.github.com/users/freeyyc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/freeyyc/subscriptions", "organizations_url": "https://api.github.com/users/freeyyc/orgs", "repos_url": "https://api.github.com/users/freeyyc/repos", "events_url": "https://api.github.com/users/freeyyc/events{/privacy}", "received_events_url": "https://api.github.com/users/freeyyc/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 7, "created_at": "2020-04-26T05:18:58Z", "updated_at": "2020-06-14T23:11:58Z", "closed_at": null, "author_association": "NONE", "active_lock_reason": null, "body": "Ubuntu 16.04\r\nbuilded successful\r\n\r\nwhen run ./ExamplePendulum. get a Error:\r\n```\r\nyyc@yyc-HP-Z4-G4-Workstation:~/simbody-source/build$ ./ExamplePendulum\r\nReactions @M: ~[~[~[24.7279,30.7279,-0.2],~[-33.76,33.56,-12]] ~[~[6.36396,9.36396,0],~[-16.88,16.78,-6]] ~[~[6.66134e-16,3,0],~[-7.92,5.94,-3]] ~[~[-1.18329e-30,-7.88861e-31,-4.44089e-16],~[0,0,0]] ~[~[-1.32625e-30,1.31634e-30,1.23252e-15],~[1.77636e-17,1.23252e-15,-1.03042e-30]]]\r\nReactions @F: ~[~[~[-24.7279,-30.7279,0.2],~[33.76,-33.56,12]] ~[~[-6.36396,-9.36396,-0],~[16.88,-16.78,6]] ~[~[-6.66134e-16,-3,-0],~[7.92,-5.94,3]] ~[~[1.18329e-30,7.88861e-31,4.44089e-16],~[-0,-0,-0]] ~[~[1.32625e-30,-1.31634e-30,-1.23252e-15],~[-1.77636e-17,-1.23252e-15,1.03042e-30]]]\r\nnorm of difference: 0\r\nPin mobilizer reaction forces:\r\nFB_G=~[~[2.12132,5.12132,0.0707107],~[-16.88,16.78,-6]] ~[~[0,0,-5.94],~[-7.92,5.94,-3]]\r\nConstraint reaction forces (should be the same):\r\nFC_G=~[~[2.12132,5.12132,0.0707107],~[-16.88,16.78,-6]] ~[~[-2.66454e-15,3.10862e-15,-5.94],~[-7.92,5.94,-3]]\r\nHit ENTER to run a short simulation ...simbody-visualizer listenerThread: unrecoverable error:\r\nSimTK Exception thrown at simbody-visualizer.cpp:2048:\r\n  Error detected by Simbody method simbody-visualizer: An attempt to read() 1 bytes from pipe 3 failed with errno=4 (Interrupted system call).\r\n  (Required condition 'retval!=-1' was not met.)\r\n\r\n\r\nFM_G=~[~[~[29.3755,27.4883,-4.92352],~[-40.9974,36.0737,-12]] ~[~[8.68779,7.74405,2.66454e-15],~[-20.4986,18.0368,-6]] ~[~[2.86849,0.878508,0],~[-8.58479,9.29639,-3]] ~[~[-1.69336e-30,-2.81945e-30,-2.87144e-16],~[-4.44089e-16,0,7.88861e-31]] ~[~[-6.28915e-30,-1.91384e-30,2.69026e-16],~[1.38336e-15,9.95069e-16,5.31156e-30]]]\r\nyyc@yyc-HP-Z4-G4-Workstation:~/simbody-source/build$ \r\n```\r\n\r\n", "reactions": {"url": "https://api.github.com/repos/simbody/simbody/issues/688/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/simbody/simbody/issues/688/timeline", "performed_via_github_app": null}, {"url": "https://api.github.com/repos/simbody/simbody/issues/694", "repository_url": "https://api.github.com/repos/simbody/simbody", "labels_url": "https://api.github.com/repos/simbody/simbody/issues/694/labels{/name}", "comments_url": "https://api.github.com/repos/simbody/simbody/issues/694/comments", "events_url": "https://api.github.com/repos/simbody/simbody/issues/694/events", "html_url": "https://github.com/simbody/simbody/issues/694", "id": 630795645, "node_id": "MDU6SXNzdWU2MzA3OTU2NDU=", "number": 694, "title": "IpTNLPAdapter.cpp Build Warning", "user": {"login": "CloneDeath", "id": 2948533, "node_id": "MDQ6VXNlcjI5NDg1MzM=", "avatar_url": "https://avatars.githubusercontent.com/u/2948533?v=4", "gravatar_id": "", "url": "https://api.github.com/users/CloneDeath", "html_url": "https://github.com/CloneDeath", "followers_url": "https://api.github.com/users/CloneDeath/followers", "following_url": "https://api.github.com/users/CloneDeath/following{/other_user}", "gists_url": "https://api.github.com/users/CloneDeath/gists{/gist_id}", "starred_url": "https://api.github.com/users/CloneDeath/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/CloneDeath/subscriptions", "organizations_url": "https://api.github.com/users/CloneDeath/orgs", "repos_url": "https://api.github.com/users/CloneDeath/repos", "events_url": "https://api.github.com/users/CloneDeath/events{/privacy}", "received_events_url": "https://api.github.com/users/CloneDeath/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2020-06-04T12:54:12Z", "updated_at": "2020-06-12T21:27:06Z", "closed_at": "2020-06-12T21:27:06Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "When doing a clean build of the entire project, I observed the following warning:\r\n\r\n```\r\n[ 29%] Building CXX object SimTKmath/sharedTarget/CMakeFiles/SimTKmath.dir/__/Optimizers/src/IpOpt/IpTNLPAdapter.cpp.o\r\n/home/nicholas/Projects/Simulations/simbody/SimTKmath/Optimizers/src/IpOpt/IpTNLPAdapter.cpp: In member function \u2018virtual bool SimTKIpopt::TNLPAdapter::GetSpaces(SimTKIpopt::SmartPtr<const SimTKIpopt::VectorSpace>&, SimTKIpopt::SmartPtr<const SimTKIpopt::VectorSpace>&, SimTKIpopt::SmartPtr<const SimTKIpopt::VectorSpace>&, SimTKIpopt::SmartPtr<const SimTKIpopt::VectorSpace>&, SimTKIpopt::SmartPtr<const SimTKIpopt::MatrixSpace>&, SimTKIpopt::SmartPtr<const SimTKIpopt::VectorSpace>&, SimTKIpopt::SmartPtr<const SimTKIpopt::MatrixSpace>&, SimTKIpopt::SmartPtr<const SimTKIpopt::VectorSpace>&, SimTKIpopt::SmartPtr<const SimTKIpopt::MatrixSpace>&, SimTKIpopt::SmartPtr<const SimTKIpopt::VectorSpace>&, SimTKIpopt::SmartPtr<const SimTKIpopt::MatrixSpace>&, SimTKIpopt::SmartPtr<const SimTKIpopt::MatrixSpace>&, SimTKIpopt::SmartPtr<const SimTKIpopt::MatrixSpace>&, SimTKIpopt::SmartPtr<const SimTKIpopt::SymMatrixSpace>&)\u2019:\r\n/home/nicholas/Projects/Simulations/simbody/SimTKmath/Optimizers/src/IpOpt/IpTNLPAdapter.cpp:176:8: warning: \u2018__builtin___sprintf_chk\u2019 may write a terminating nul past the end of the destination [-Wformat-overflow=]\r\n   bool TNLPAdapter::GetSpaces(SmartPtr<const VectorSpace>& x_space,\r\n        ^~~~~~~~~~~\r\nIn file included from /usr/include/stdio.h:862:0,\r\n                 from /usr/include/c++/7/cstdio:42,\r\n                 from /usr/include/c++/7/ext/string_conversions.h:43,\r\n                 from /usr/include/c++/7/bits/basic_string.h:6361,\r\n                 from /usr/include/c++/7/string:52,\r\n                 from /usr/include/c++/7/bits/locale_classes.h:40,\r\n                 from /usr/include/c++/7/bits/ios_base.h:41,\r\n                 from /usr/include/c++/7/ios:42,\r\n                 from /usr/include/c++/7/istream:38,\r\n                 from /usr/include/c++/7/sstream:38,\r\n                 from /usr/include/c++/7/complex:45,\r\n                 from /home/nicholas/Projects/Simulations/simbody/SimTKcommon/./include/SimTKcommon/internal/common.h:257,\r\n                 from /home/nicholas/Projects/Simulations/simbody/SimTKmath/Optimizers/src/IpOpt/IpTypes.hpp:12,\r\n                 from /home/nicholas/Projects/Simulations/simbody/SimTKmath/Optimizers/src/IpOpt/IpUtils.hpp:13,\r\n                 from /home/nicholas/Projects/Simulations/simbody/SimTKmath/Optimizers/src/IpOpt/IpNLP.hpp:12,\r\n                 from /home/nicholas/Projects/Simulations/simbody/SimTKmath/Optimizers/src/IpOpt/IpTNLPAdapter.hpp:12,\r\n                 from /home/nicholas/Projects/Simulations/simbody/SimTKmath/Optimizers/src/IpOpt/IpTNLPAdapter.cpp:9:\r\n/usr/include/x86_64-linux-gnu/bits/stdio2.h:34:43: note: \u2018__builtin___sprintf_chk\u2019 output between 120 and 129 bytes into a destination of size 128\r\n       __bos (__s), __fmt, __va_arg_pack ());\r\n                                           ^\r\n```\r\n\r\nI am using `Ubuntu 18.04.4 LTS`\r\n\r\nIssue can be reproduced by:\r\n```\r\nmkdir build\r\ncd build\r\ncmake ..\r\nmake\r\n```", "reactions": {"url": "https://api.github.com/repos/simbody/simbody/issues/694/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/simbody/simbody/issues/694/timeline", "performed_via_github_app": null}, {"url": "https://api.github.com/repos/simbody/simbody/issues/696", "repository_url": "https://api.github.com/repos/simbody/simbody", "labels_url": "https://api.github.com/repos/simbody/simbody/issues/696/labels{/name}", "comments_url": "https://api.github.com/repos/simbody/simbody/issues/696/comments", "events_url": "https://api.github.com/repos/simbody/simbody/issues/696/events", "html_url": "https://github.com/simbody/simbody/issues/696", "id": 635283942, "node_id": "MDU6SXNzdWU2MzUyODM5NDI=", "number": 696, "title": "README example contains a horizontal plane", "user": {"login": "adamkewley", "id": 4730570, "node_id": "MDQ6VXNlcjQ3MzA1NzA=", "avatar_url": "https://avatars.githubusercontent.com/u/4730570?v=4", "gravatar_id": "", "url": "https://api.github.com/users/adamkewley", "html_url": "https://github.com/adamkewley", "followers_url": "https://api.github.com/users/adamkewley/followers", "following_url": "https://api.github.com/users/adamkewley/following{/other_user}", "gists_url": "https://api.github.com/users/adamkewley/gists{/gist_id}", "starred_url": "https://api.github.com/users/adamkewley/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/adamkewley/subscriptions", "organizations_url": "https://api.github.com/users/adamkewley/orgs", "repos_url": "https://api.github.com/users/adamkewley/repos", "events_url": "https://api.github.com/users/adamkewley/events{/privacy}", "received_events_url": "https://api.github.com/users/adamkewley/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-06-09T09:51:26Z", "updated_at": "2020-06-12T21:15:51Z", "closed_at": "2020-06-12T21:15:51Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Not a fatal issue, but just something I noticed when going through the docs.\r\n\r\nIf I compile the example in the README (\"Here's some code to simulate and visualize a 2-link chain\") and run it, I'm getting something that looks like this:\r\n\r\n![Screenshot from 2020-06-09 10-45-27](https://user-images.githubusercontent.com/4730570/84133066-93a54e80-aa3e-11ea-9560-b2d92069f569.png)\r\n\r\nI'm using the simbody that's built for OpenSim (tag = `Simbody-3.7`), so it's a bit older than what's in the master branch (so this might've been fixed already).\r\n\r\n\r\n", "reactions": {"url": "https://api.github.com/repos/simbody/simbody/issues/696/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/simbody/simbody/issues/696/timeline", "performed_via_github_app": null}, {"url": "https://api.github.com/repos/simbody/simbody/issues/699", "repository_url": "https://api.github.com/repos/simbody/simbody", "labels_url": "https://api.github.com/repos/simbody/simbody/issues/699/labels{/name}", "comments_url": "https://api.github.com/repos/simbody/simbody/issues/699/comments", "events_url": "https://api.github.com/repos/simbody/simbody/issues/699/events", "html_url": "https://github.com/simbody/simbody/issues/699", "id": 648814874, "node_id": "MDU6SXNzdWU2NDg4MTQ4NzQ=", "number": 699, "title": "Test template in one header", "user": {"login": "tomlogan501", "id": 56969577, "node_id": "MDQ6VXNlcjU2OTY5NTc3", "avatar_url": "https://avatars.githubusercontent.com/u/56969577?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tomlogan501", "html_url": "https://github.com/tomlogan501", "followers_url": "https://api.github.com/users/tomlogan501/followers", "following_url": "https://api.github.com/users/tomlogan501/following{/other_user}", "gists_url": "https://api.github.com/users/tomlogan501/gists{/gist_id}", "starred_url": "https://api.github.com/users/tomlogan501/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tomlogan501/subscriptions", "organizations_url": "https://api.github.com/users/tomlogan501/orgs", "repos_url": "https://api.github.com/users/tomlogan501/repos", "events_url": "https://api.github.com/users/tomlogan501/events{/privacy}", "received_events_url": "https://api.github.com/users/tomlogan501/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2020-07-01T09:14:40Z", "updated_at": "2020-07-02T15:53:47Z", "closed_at": null, "author_association": "NONE", "active_lock_reason": null, "body": "Hi,\r\nWould it be great to regroup all test template in one header file other than declare in each test files ?\r\n", "reactions": {"url": "https://api.github.com/repos/simbody/simbody/issues/699/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/simbody/simbody/issues/699/timeline", "performed_via_github_app": null}, {"url": "https://api.github.com/repos/simbody/simbody/issues/701", "repository_url": "https://api.github.com/repos/simbody/simbody", "labels_url": "https://api.github.com/repos/simbody/simbody/issues/701/labels{/name}", "comments_url": "https://api.github.com/repos/simbody/simbody/issues/701/comments", "events_url": "https://api.github.com/repos/simbody/simbody/issues/701/events", "html_url": "https://github.com/simbody/simbody/issues/701", "id": 664002855, "node_id": "MDU6SXNzdWU2NjQwMDI4NTU=", "number": 701, "title": "Some examples segfault when compiled without the NDEBUG flag", "user": {"login": "dpellegr", "id": 7815854, "node_id": "MDQ6VXNlcjc4MTU4NTQ=", "avatar_url": "https://avatars.githubusercontent.com/u/7815854?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dpellegr", "html_url": "https://github.com/dpellegr", "followers_url": "https://api.github.com/users/dpellegr/followers", "following_url": "https://api.github.com/users/dpellegr/following{/other_user}", "gists_url": "https://api.github.com/users/dpellegr/gists{/gist_id}", "starred_url": "https://api.github.com/users/dpellegr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dpellegr/subscriptions", "organizations_url": "https://api.github.com/users/dpellegr/orgs", "repos_url": "https://api.github.com/users/dpellegr/repos", "events_url": "https://api.github.com/users/dpellegr/events{/privacy}", "received_events_url": "https://api.github.com/users/dpellegr/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 4, "created_at": "2020-07-22T19:38:17Z", "updated_at": "2020-07-23T07:46:50Z", "closed_at": null, "author_association": "NONE", "active_lock_reason": null, "body": "I have successfully compiled the `TheoJansenStrandbeest.cpp` example (linux, gcc 10.1, simbody 3.7) but I get a segfault as soon as I launch it.\r\n\r\nHere is my gdb backtrace:\r\n\r\n```\r\n0x0000555555563685 in SimTK::ListOfDependents::notePrerequisiteChange (this=0x5555555dafd8, stateImpl=...)\r\n    at /usr/include/simbody/SimTKcommon/internal/StateImpl.h:2257\r\n2257\t    for (auto ckey : m_dependents) {\r\n(gdb) backtrace \r\n#0  0x0000555555563685 in SimTK::ListOfDependents::notePrerequisiteChange (this=0x5555555dafd8, stateImpl=...)\r\n    at /usr/include/simbody/SimTKcommon/internal/StateImpl.h:2257\r\n#1  0x0000555555562b3d in SimTK::CacheEntryInfo::invalidate (this=0x5555555daf98, stateImpl=...)\r\n    at /usr/include/simbody/SimTKcommon/internal/StateImpl.h:331\r\n#2  0x00005555555636b6 in SimTK::ListOfDependents::notePrerequisiteChange (this=0x55555558b2a0, stateImpl=...)\r\n    at /usr/include/simbody/SimTKcommon/internal/StateImpl.h:2260\r\n#3  0x00007ffff7edeec5 in SimTK::StateImpl::advanceSystemToStage(SimTK::Stage) const ()\r\n   from /usr/lib/libSimTKcommon.so.3.7\r\n#4  0x00007ffff7eee8d7 in SimTK::System::Guts::realizeModel(SimTK::State&) const ()\r\n   from /usr/lib/libSimTKcommon.so.3.7\r\n#5  0x00007ffff7eefe75 in SimTK::System::Guts::realizeTopology() const () from /usr/lib/libSimTKcommon.so.3.7\r\n#6  0x000055555555dd20 in main () at TheoJansenStrandbeest.cpp:208\r\n```", "reactions": {"url": "https://api.github.com/repos/simbody/simbody/issues/701/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/simbody/simbody/issues/701/timeline", "performed_via_github_app": null}, {"url": "https://api.github.com/repos/simbody/simbody/issues/702", "repository_url": "https://api.github.com/repos/simbody/simbody", "labels_url": "https://api.github.com/repos/simbody/simbody/issues/702/labels{/name}", "comments_url": "https://api.github.com/repos/simbody/simbody/issues/702/comments", "events_url": "https://api.github.com/repos/simbody/simbody/issues/702/events", "html_url": "https://github.com/simbody/simbody/issues/702", "id": 696696315, "node_id": "MDU6SXNzdWU2OTY2OTYzMTU=", "number": 702, "title": "ParallelExecutor executes in multiple threads when it should not, causes access to invalid TLS", "user": {"login": "MadCatX", "id": 1009657, "node_id": "MDQ6VXNlcjEwMDk2NTc=", "avatar_url": "https://avatars.githubusercontent.com/u/1009657?v=4", "gravatar_id": "", "url": "https://api.github.com/users/MadCatX", "html_url": "https://github.com/MadCatX", "followers_url": "https://api.github.com/users/MadCatX/followers", "following_url": "https://api.github.com/users/MadCatX/following{/other_user}", "gists_url": "https://api.github.com/users/MadCatX/gists{/gist_id}", "starred_url": "https://api.github.com/users/MadCatX/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/MadCatX/subscriptions", "organizations_url": "https://api.github.com/users/MadCatX/orgs", "repos_url": "https://api.github.com/users/MadCatX/repos", "events_url": "https://api.github.com/users/MadCatX/events{/privacy}", "received_events_url": "https://api.github.com/users/MadCatX/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 8, "created_at": "2020-09-09T10:32:15Z", "updated_at": "2020-09-21T01:26:26Z", "closed_at": null, "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Hello everyone,\r\n\r\nI have been seeing an odd crash in some of [molmodel](https://github.com/samuelflores/molmodel) unit tests which I eventually traced back to Simbody's `ParallelExecutor` running in multithreaded mode even when it should use the singlethreaded shortcut. The following conditions have to be met for the problem to occur:\r\n\r\n- A `Parallel2DExecutor` task is created.\r\n- The backing `ParallelExecutor` is set to use only one thread.\r\n- The computed problem is of such size that the last square created by `Parallel2DExecutor` is empty (= has zero size).\r\n\r\nThis causes [this condition](https://github.com/simbody/simbody/blob/320bbe9f39f5d24bc06ff30bc882caedee2d0654/SimTKcommon/src/ParallelExecutor.cpp#L73):\r\n    `if (min(times, numMaxThreads) == 1) {`\r\n\r\nto evaluate to false because `times` is 0 and `ParallelExecutor` then enters the multithreaded loop. Since the task's TLS has already been initialized to singlethreaded operation by previous iterations of the comptutation, `finish()` method of the task then tries to access the TLS of the worker thread instead of the main thread, causing a crash.\r\n\r\nChanging the respective check to\r\n      `if (min(times, numMaxThreads) <= 1) {`\r\n      \r\nshould fix the issue.\r\n\r\nFor the record, I used [TestDuMMForces](https://github.com/samuelflores/molmodel/blob/master/tests/TestDuMMForces.cpp) from molmodel test suite to debug this.\r\n\r\nI also wonder if there could be a \"reverse\" case of this problem. For instance, if the initial `TriangleTask` solution used only one thread but the subsequent `SquareTask`s were large enough for multithreaded processing. My analysis of the code suggests that this should not happen but I'm not sufficiently familiar with the code to think through all the possibilities.", "reactions": {"url": "https://api.github.com/repos/simbody/simbody/issues/702/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/simbody/simbody/issues/702/timeline", "performed_via_github_app": null}, {"url": "https://api.github.com/repos/simbody/simbody/issues/703", "repository_url": "https://api.github.com/repos/simbody/simbody", "labels_url": "https://api.github.com/repos/simbody/simbody/issues/703/labels{/name}", "comments_url": "https://api.github.com/repos/simbody/simbody/issues/703/comments", "events_url": "https://api.github.com/repos/simbody/simbody/issues/703/events", "html_url": "https://github.com/simbody/simbody/issues/703", "id": 697660959, "node_id": "MDU6SXNzdWU2OTc2NjA5NTk=", "number": 703, "title": "Any idea why OpenSimPartyDemoCable.cpp fails to converge?", "user": {"login": "adamkewley", "id": 4730570, "node_id": "MDQ6VXNlcjQ3MzA1NzA=", "avatar_url": "https://avatars.githubusercontent.com/u/4730570?v=4", "gravatar_id": "", "url": "https://api.github.com/users/adamkewley", "html_url": "https://github.com/adamkewley", "followers_url": "https://api.github.com/users/adamkewley/followers", "following_url": "https://api.github.com/users/adamkewley/following{/other_user}", "gists_url": "https://api.github.com/users/adamkewley/gists{/gist_id}", "starred_url": "https://api.github.com/users/adamkewley/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/adamkewley/subscriptions", "organizations_url": "https://api.github.com/users/adamkewley/orgs", "repos_url": "https://api.github.com/users/adamkewley/repos", "events_url": "https://api.github.com/users/adamkewley/events{/privacy}", "received_events_url": "https://api.github.com/users/adamkewley/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2020-09-10T09:17:50Z", "updated_at": "2020-09-12T08:13:03Z", "closed_at": "2020-09-12T08:13:03Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "Minor issue, because this code isn't part of the main build, but it would be helpful if I could understand what's going on.\r\n\r\nI'm currently looking into optimizing OpenSim's muscle wrapping code. One suggestion is to change the underlying implementation (effectively, [this](https://github.com/opensim-org/opensim-core/tree/master/OpenSim/Simulation/Wrap) bunch of code) to use SimTK's Cable implementation.\r\n\r\n(EDIT: accidently hit CTRL+Enter)\r\n\r\nI noticed someone's had a crack at this in `OpenSImPartyDemoCable.cpp`, which looks great, but when I run that example code it seems to only be able to integrate up to ~0.75 sec (final time is 10s) before throwing an exception. \r\n\r\n```\r\nEXCEPTION: SimTK Exception thrown at AbstractIntegratorRep.cpp:428:\r\n  Integrator step failed at time 0.79735195427894145 apparently because:\r\nSimTK Exception thrown at AbstractIntegratorRep.cpp:547:\r\n  Error detected by Simbody method AbstractIntegrator::takeOneStep(): Unable to advance time past 0.797352.\r\n  (Required condition 't1 > t0' was not met.)\r\n```\r\n\r\nAny ideas why this might happen? It could just be a funky parameter but I figured I'd ask before diving in\r\n\r\n\r\n", "reactions": {"url": "https://api.github.com/repos/simbody/simbody/issues/703/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/simbody/simbody/issues/703/timeline", "performed_via_github_app": null}, {"url": "https://api.github.com/repos/simbody/simbody/issues/706", "repository_url": "https://api.github.com/repos/simbody/simbody", "labels_url": "https://api.github.com/repos/simbody/simbody/issues/706/labels{/name}", "comments_url": "https://api.github.com/repos/simbody/simbody/issues/706/comments", "events_url": "https://api.github.com/repos/simbody/simbody/issues/706/events", "html_url": "https://github.com/simbody/simbody/issues/706", "id": 757208064, "node_id": "MDU6SXNzdWU3NTcyMDgwNjQ=", "number": 706, "title": "Failed build on Windows.", "user": {"login": "jasonmeverett", "id": 58365572, "node_id": "MDQ6VXNlcjU4MzY1NTcy", "avatar_url": "https://avatars.githubusercontent.com/u/58365572?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jasonmeverett", "html_url": "https://github.com/jasonmeverett", "followers_url": "https://api.github.com/users/jasonmeverett/followers", "following_url": "https://api.github.com/users/jasonmeverett/following{/other_user}", "gists_url": "https://api.github.com/users/jasonmeverett/gists{/gist_id}", "starred_url": "https://api.github.com/users/jasonmeverett/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jasonmeverett/subscriptions", "organizations_url": "https://api.github.com/users/jasonmeverett/orgs", "repos_url": "https://api.github.com/users/jasonmeverett/repos", "events_url": "https://api.github.com/users/jasonmeverett/events{/privacy}", "received_events_url": "https://api.github.com/users/jasonmeverett/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 11, "created_at": "2020-12-04T15:56:48Z", "updated_at": "2020-12-05T17:58:42Z", "closed_at": "2020-12-05T17:58:42Z", "author_association": "NONE", "active_lock_reason": null, "body": "Hi all,\r\n\r\nI've had success with installing Simbody on a few environments, but I'm getting stuck on trying to compile on my local Windows machine. Any help would be greatly appreciated!\r\n\r\n**Basic information**:\r\n* [Up-to-date Simbody](https://github.com/simbody/simbody/commit/dda623d3e099b38ef9e551a6b647cb5e8dfbbb25)\r\n* CMake 3.19.0-rc3\r\n* Visual Studio 16 2019\r\n* RelWithDebInfo\r\n\r\n**CMake Output**:\r\n```\r\nCMake Deprecation Warning at CMakeLists.txt:19 (cmake_minimum_required):\r\n  Compatibility with CMake < 2.8.12 will be removed from a future version of\r\n  CMake.\r\n\r\n  Update the VERSION argument <min> value or use a ...<max> suffix to tell\r\n  CMake that the project does not need compatibility with older versions.\r\n\r\n\r\nSelecting Windows SDK version 10.0.18362.0 to target Windows 10.0.19042.\r\nThe C compiler identification is MSVC 19.28.29334.0\r\nThe CXX compiler identification is MSVC 19.28.29334.0\r\nDetecting C compiler ABI info\r\nDetecting C compiler ABI info - done\r\nCheck for working C compiler: C:/Program Files (x86)/Microsoft Visual Studio/2019/Community/VC/Tools/MSVC/14.28.29333/bin/Hostx64/x64/cl.exe - skipped\r\nDetecting C compile features\r\nDetecting C compile features - done\r\nDetecting CXX compiler ABI info\r\nDetecting CXX compiler ABI info - done\r\nCheck for working CXX compiler: C:/Program Files (x86)/Microsoft Visual Studio/2019/Community/VC/Tools/MSVC/14.28.29333/bin/Hostx64/x64/cl.exe - skipped\r\nDetecting CXX compile features\r\nDetecting CXX compile features - done\r\nCould NOT find Doxygen (missing: DOXYGEN_EXECUTABLE) \r\nFound OpenGL: opengl32   \r\nConfiguring done\r\nGenerating done\r\n```\r\n\r\n**Snippet of Visual Studio Output** (focusing on the error):\r\n```\r\nRebuild started...\r\n1>------ Rebuild All started: Project: ZERO_CHECK, Configuration: RelWithDebInfo x64 ------\r\n1>Checking Build System\r\n2>------ Rebuild All started: Project: PlatformFiles_subdir, Configuration: RelWithDebInfo x64 ------\r\n2>Copy C:\\LIB\\simbody\\Platform\\Windows\\lib_x64\\libblas.dll -> C:\\LIB\\simbody\\build\\RelWithDebInfo\\libblas.dll\r\n2>Copy C:\\LIB\\simbody\\Platform\\Windows\\lib_x64\\libgcc_s_sjlj-1.dll -> C:\\LIB\\simbody\\build\\RelWithDebInfo\\libgcc_s_sjlj-1.dll\r\n2>Copy C:\\LIB\\simbody\\Platform\\Windows\\lib_x64\\libgfortran-3.dll -> C:\\LIB\\simbody\\build\\RelWithDebInfo\\libgfortran-3.dll\r\n2>Copy C:\\LIB\\simbody\\Platform\\Windows\\lib_x64\\liblapack.dll -> C:\\LIB\\simbody\\build\\RelWithDebInfo\\liblapack.dll\r\n2>Copy C:\\LIB\\simbody\\Platform\\Windows\\lib_x64\\libquadmath-0.dll -> C:\\LIB\\simbody\\build\\RelWithDebInfo\\libquadmath-0.dll\r\n2>Building Custom Rule C:/LIB/simbody/Platform/CMakeLists.txt\r\n3>------ Rebuild All started: Project: Code - Platform Files, Configuration: RelWithDebInfo x64 ------\r\n3>Building Custom Rule C:/LIB/simbody/CMakeLists.txt\r\n4>------ Rebuild All started: Project: Code - SimTKcommon, Configuration: RelWithDebInfo x64 ------\r\n4>Building Custom Rule C:/LIB/simbody/SimTKcommon/sharedTarget/CMakeLists.txt\r\n4>About.cpp\r\n4>NiceTypeName.cpp\r\n\r\n...\r\n...\r\n...\r\n\r\n5>Geo_Point.cpp\r\n5>Geo_Sphere.cpp\r\n5>Geo_Triangle.cpp\r\n5>Geodesic.cpp\r\n5>OBBTree.cpp\r\n5>OrientedBoundingBox.cpp\r\n5>gcvspl.cpp\r\n5>About.cpp\r\n5>C:\\Program Files (x86)\\Microsoft Visual Studio\\2019\\Community\\VC\\Tools\\MSVC\\14.28.29333\\include\\algorithm(7417,1): error C2678: binary '*': no operator found which takes a left-hand operand of type 'const _BidIt' (or there is no acceptable conversion)\r\n5>        with\r\n5>        [\r\n5>            _BidIt=SimTK::VectorIterator<SimTK::Real,SimTK::VectorBase<SimTK::Real>>\r\n5>        ] (compiling source file C:\\LIB\\simbody\\SimTKmath\\Geometry\\src\\ContactGeometry_TriangleMesh.cpp)\r\n\r\n...\r\n...\r\n...\r\n\r\n\r\n\r\n31>TestScalar.cpp\r\n29>TestPolygonalMesh.cpp\r\n35>TestXml.cpp\r\n16>TestArray.vcxproj -> C:\\LIB\\simbody\\build\\RelWithDebInfo\\TestArray.exe\r\n26>TestParallelExecutor.vcxproj -> C:\\LIB\\simbody\\build\\RelWithDebInfo\\TestParallelExecutor.exe\r\n11>RandomTest.vcxproj -> C:\\LIB\\simbody\\build\\RelWithDebInfo\\RandomTest.exe\r\n8>MatVecTest.vcxproj -> C:\\LIB\\simbody\\build\\RelWithDebInfo\\MatVecTest.exe\r\n5>Done building project \"SimTKmath.vcxproj\" -- FAILED.\r\n\r\n```\r\n\r\nAny help would be greatly appreciated. I can provide more information if needed.", "reactions": {"url": "https://api.github.com/repos/simbody/simbody/issues/706/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/simbody/simbody/issues/706/timeline", "performed_via_github_app": null}, {"url": "https://api.github.com/repos/simbody/simbody/issues/709", "repository_url": "https://api.github.com/repos/simbody/simbody", "labels_url": "https://api.github.com/repos/simbody/simbody/issues/709/labels{/name}", "comments_url": "https://api.github.com/repos/simbody/simbody/issues/709/comments", "events_url": "https://api.github.com/repos/simbody/simbody/issues/709/events", "html_url": "https://github.com/simbody/simbody/issues/709", "id": 770255096, "node_id": "MDU6SXNzdWU3NzAyNTUwOTY=", "number": 709, "title": "Anaconda Windows Install - Visualizer Exception", "user": {"login": "jasonmeverett", "id": 58365572, "node_id": "MDQ6VXNlcjU4MzY1NTcy", "avatar_url": "https://avatars.githubusercontent.com/u/58365572?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jasonmeverett", "html_url": "https://github.com/jasonmeverett", "followers_url": "https://api.github.com/users/jasonmeverett/followers", "following_url": "https://api.github.com/users/jasonmeverett/following{/other_user}", "gists_url": "https://api.github.com/users/jasonmeverett/gists{/gist_id}", "starred_url": "https://api.github.com/users/jasonmeverett/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jasonmeverett/subscriptions", "organizations_url": "https://api.github.com/users/jasonmeverett/orgs", "repos_url": "https://api.github.com/users/jasonmeverett/repos", "events_url": "https://api.github.com/users/jasonmeverett/events{/privacy}", "received_events_url": "https://api.github.com/users/jasonmeverett/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 14, "created_at": "2020-12-17T18:00:38Z", "updated_at": "2021-04-30T03:06:54Z", "closed_at": "2021-04-30T03:06:54Z", "author_association": "NONE", "active_lock_reason": null, "body": "After installing with miniconda3 and building an example program, I get the following error message pertaining to `VisualizerProtocol`:\r\n\r\n```\r\nEXCEPTION OCCURED:\r\n\r\nSimTK Exception thrown at VisualizerProtocol.cpp:165:\r\n  Error detected by Simbody method VisualizerProtocol::ctor(): Unable to spawn executable 'simbody-visualizer' from directories:\r\n  c:\\LIB\\modeller\\build\\Debug\\\r\n  D:/bld/simbody_1591833882663/_h_env/Library/bin/\r\n  C:\\Program Files\\Simbody\\bin\\\r\n  C:\\Program Files\\SimTK\\bin\\\r\n```\r\n\r\nStrange thing is, `simbody-visualizer` exists on the path, but it's not in any of the above directories since I am using the conda installation. It almost seems as if there's a hardcoded `C:\\Program Files\\Simbody\\bin\\` somewhere and that's where it's trying to access the visualizer.\r\n\r\nHas anyone had success with Windows 10 (build version `20H2`), with Simbody's Anaconda packages?\r\n\r\nI can provide more information if need be. Thanks in advance.\r\n\r\n\r\n", "reactions": {"url": "https://api.github.com/repos/simbody/simbody/issues/709/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/simbody/simbody/issues/709/timeline", "performed_via_github_app": null}, {"url": "https://api.github.com/repos/simbody/simbody/issues/710", "repository_url": "https://api.github.com/repos/simbody/simbody", "labels_url": "https://api.github.com/repos/simbody/simbody/issues/710/labels{/name}", "comments_url": "https://api.github.com/repos/simbody/simbody/issues/710/comments", "events_url": "https://api.github.com/repos/simbody/simbody/issues/710/events", "html_url": "https://github.com/simbody/simbody/issues/710", "id": 773647216, "node_id": "MDU6SXNzdWU3NzM2NDcyMTY=", "number": 710, "title": "Clang10 /w C++20 error: SimTK indexes: use of overloaded operator '==' is ambiguous", "user": {"login": "adamkewley", "id": 4730570, "node_id": "MDQ6VXNlcjQ3MzA1NzA=", "avatar_url": "https://avatars.githubusercontent.com/u/4730570?v=4", "gravatar_id": "", "url": "https://api.github.com/users/adamkewley", "html_url": "https://github.com/adamkewley", "followers_url": "https://api.github.com/users/adamkewley/followers", "following_url": "https://api.github.com/users/adamkewley/following{/other_user}", "gists_url": "https://api.github.com/users/adamkewley/gists{/gist_id}", "starred_url": "https://api.github.com/users/adamkewley/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/adamkewley/subscriptions", "organizations_url": "https://api.github.com/users/adamkewley/orgs", "repos_url": "https://api.github.com/users/adamkewley/repos", "events_url": "https://api.github.com/users/adamkewley/events{/privacy}", "received_events_url": "https://api.github.com/users/adamkewley/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2020-12-23T10:19:55Z", "updated_at": "2020-12-23T17:03:05Z", "closed_at": null, "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "I'm compiling a downstream project that uses OpenSim, but (transitively) includes Simbody. Top-level compiler details:\r\n\r\n```bash\r\n# clang++\r\nDebian clang version 10.0.1-++20200708124224+ef32c611aa2-1~exp1~20200707224822.188 \r\nTarget: x86_64-pc-linux-gnu\r\nThread model: posix\r\nInstalledDir: /usr/bin\r\n# clang\r\nDebian clang version 10.0.1-++20200708124224+ef32c611aa2-1~exp1~20200707224822.188 \r\nTarget: x86_64-pc-linux-gnu\r\nThread model: posix\r\nInstalledDir: /usr/bin\r\n```\r\n\r\nInstalled as a prebuilt binary from the llvm project site. Effectively, I unpacked it and then configured a project that uses it. Command-line looks something like this:\r\n\r\n```bash\r\nCXX=clang++-10 CC=clang-10 cmake -S ../osmv -B . -DCMAKE_PREFIX_PATH=$(readlink -f ~/Desktop/osc/master-RelWithDebInfo-install/lib/cmake) -DCMAKE_GENERATOR=Ninja\r\ncmake --build . --target all\r\n```\r\n\r\nThis compiles completely fine if my project is set to C++17, e.g. with:\r\n\r\n```\r\ntarget_compile_features(osmv PUBLIC cxx_std_17)\r\n# broken: cxx_std_20\r\n```\r\n\r\nWhen compiling under C++20, it breaks with (gisted, because it's a big error dump):\r\n\r\nhttps://gist.github.com/adamkewley/36c726f82afe89bffa087a5b9d02f50a\r\n\r\nExcerpt of that gist:\r\n\r\n```\r\n/home/adam/Desktop/osc/master-RelWithDebInfo-install/include/simbody/simmath/internal/ContactGeometry.h:840:27: error: use of overloaded operator '==' is ambiguous (with operand types 'SimTK::ContactGeometryTypeId' and 'SimTK::ContactGeometryTypeId')\r\n{   return geo.getTypeId()==classTypeId(); }\r\n           ~~~~~~~~~~~~~~~^ ~~~~~~~~~~~~~\r\n/home/adam/Desktop/osc/master-RelWithDebInfo-install/include/simbody/simmath/internal/ContactGeometry.h:44:1: note: candidate function\r\nSimTK_DEFINE_UNIQUE_INDEX_TYPE(ContactGeometryTypeId);\r\n^\r\n/home/adam/Desktop/osc/master-RelWithDebInfo-install/include/simbody/SimTKcommon/internal/common.h:427:5: note: expanded from macro 'SimTK_DEFINE_UNIQUE_INDEX_TYPE'\r\n    SimTK_DEFINE_AND_EXPORT_UNIQUE_LOCAL_INDEX_TYPE(,,,NAME)   \\\r\n    ^\r\n/home/adam/Desktop/osc/master-RelWithDebInfo-install/include/simbody/SimTKcommon/internal/common.h:459:10: note: expanded from macro 'SimTK_DEFINE_AND_EXPORT_UNIQUE_LOCAL_INDEX_TYPE'\r\n    bool operator==(int  i) const {assert(isValidExtended() && isValidExtended(i)); return ix==i;}    \\\r\n         ^\r\n/home/adam/Desktop/osc/master-RelWithDebInfo-install/include/simbody/simmath/internal/ContactGeometry.h:44:1: note: candidate function (with reversed parameter order)\r\n/home/adam/Desktop/osc/master-RelWithDebInfo-install/include/simbody/SimTKcommon/internal/common.h:427:5: note: expanded from macro 'SimTK_DEFINE_UNIQUE_INDEX_TYPE'\r\n    SimTK_DEFINE_AND_EXPORT_UNIQUE_LOCAL_INDEX_TYPE(,,,NAME)   \\\r\n    ^\r\n/home/adam/Desktop/osc/master-RelWithDebInfo-install/include/simbody/SimTKcommon/internal/common.h:459:10: note: expanded from macro 'SimTK_DEFINE_AND_EXPORT_UNIQUE_LOCAL_INDEX_TYPE'\r\n    bool operator==(int  i) const {assert(isValidExtended() && isValidExtended(i)); return ix==i;}    \\\r\n```\r\n\r\nThe error seems to be because C++20 adds the spaceship operator (clang implementation coverage is [here](https://clang.llvm.org/cxx_status.html), search 'Consistent comparison'). \r\n\r\nSimbody (obviously) doesn't use this feature, but it seems to change the semantics of comparison operators such that they're now broken in Simbody. One quick fix that got rid of *some* of those errors was to add a comparison between the index type and itself, because (if I understand correctly) the index-type's current implementation relies on an implicit conversion to an `int` when comparing an index to its own type.\r\n\r\nHowever, that doesn't fix all of the errors because some of them *seem* to be due to a change in the semantics of comparison. C++20 seems to require that comparison is reversible. That is, that `a == b` is equivalent to `b == a` at the source level, and an ambiguity can be generated if `a == b` is possible but `b == a` is not (which might, when combined in weird ways with implicit conversion, be part of the issue here).\r\n\r\nHere's some related reading material:\r\n\r\n- Similar issue, different project: https://github.com/boostorg/date_time/issues/132\r\n- Overview of comparisons in C++20: https://brevzin.github.io/c++/2019/07/28/comparisons-cpp20/#reversing-primary-operators\r\n\r\nI don't currently have time to fix this, PR it, deal with reviews, etc. but might have time in the future. I figured it's best to document the behavior now rather than the issue being undocumented and everyone seperately having to figure out what the issue is.", "reactions": {"url": "https://api.github.com/repos/simbody/simbody/issues/710/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/simbody/simbody/issues/710/timeline", "performed_via_github_app": null}, {"url": "https://api.github.com/repos/simbody/simbody/issues/711", "repository_url": "https://api.github.com/repos/simbody/simbody", "labels_url": "https://api.github.com/repos/simbody/simbody/issues/711/labels{/name}", "comments_url": "https://api.github.com/repos/simbody/simbody/issues/711/comments", "events_url": "https://api.github.com/repos/simbody/simbody/issues/711/events", "html_url": "https://github.com/simbody/simbody/issues/711", "id": 787665493, "node_id": "MDU6SXNzdWU3ODc2NjU0OTM=", "number": 711, "title": "Docker & Simbody Visualizer : GLXBadContext", "user": {"login": "jasonmeverett", "id": 58365572, "node_id": "MDQ6VXNlcjU4MzY1NTcy", "avatar_url": "https://avatars.githubusercontent.com/u/58365572?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jasonmeverett", "html_url": "https://github.com/jasonmeverett", "followers_url": "https://api.github.com/users/jasonmeverett/followers", "following_url": "https://api.github.com/users/jasonmeverett/following{/other_user}", "gists_url": "https://api.github.com/users/jasonmeverett/gists{/gist_id}", "starred_url": "https://api.github.com/users/jasonmeverett/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jasonmeverett/subscriptions", "organizations_url": "https://api.github.com/users/jasonmeverett/orgs", "repos_url": "https://api.github.com/users/jasonmeverett/repos", "events_url": "https://api.github.com/users/jasonmeverett/events{/privacy}", "received_events_url": "https://api.github.com/users/jasonmeverett/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 5, "created_at": "2021-01-17T09:18:58Z", "updated_at": "2021-01-18T14:49:41Z", "closed_at": "2021-01-18T14:49:41Z", "author_association": "NONE", "active_lock_reason": null, "body": "I've wrapped Simbody into a Docker image (Ubuntu 20.04), and I'm trying to also activate the visualizer. I've gotten other X11-apps to open up just fine from within the container. When I run the install test, I get the following error:\r\n\r\n```\r\nroot@67ec1dd13b50:/simbody-source/build# ./SimbodyInstallTest\r\nX Error of failed request:  GLXBadContext\r\n  Major opcode of failed request:  149 (GLX)\r\n  Minor opcode of failed request:  5 (X_GLXMakeCurrent)\r\n  Serial number of failed request:  147\r\n  Current serial number in output stream:  147\r\n```\r\n\r\nI'm running an RTX 2070 Super. Any help would be greatly appreciated. I can provide more information if needed.\r\n\r\nThanks!", "reactions": {"url": "https://api.github.com/repos/simbody/simbody/issues/711/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/simbody/simbody/issues/711/timeline", "performed_via_github_app": null}, {"url": "https://api.github.com/repos/simbody/simbody/issues/712", "repository_url": "https://api.github.com/repos/simbody/simbody", "labels_url": "https://api.github.com/repos/simbody/simbody/issues/712/labels{/name}", "comments_url": "https://api.github.com/repos/simbody/simbody/issues/712/comments", "events_url": "https://api.github.com/repos/simbody/simbody/issues/712/events", "html_url": "https://github.com/simbody/simbody/issues/712", "id": 791777534, "node_id": "MDU6SXNzdWU3OTE3Nzc1MzQ=", "number": 712, "title": "Including Differnet-Type Euler sequences (3-2-1, 1-3-1, etc.) into Quaternion Initialization", "user": {"login": "jasonmeverett", "id": 58365572, "node_id": "MDQ6VXNlcjU4MzY1NTcy", "avatar_url": "https://avatars.githubusercontent.com/u/58365572?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jasonmeverett", "html_url": "https://github.com/jasonmeverett", "followers_url": "https://api.github.com/users/jasonmeverett/followers", "following_url": "https://api.github.com/users/jasonmeverett/following{/other_user}", "gists_url": "https://api.github.com/users/jasonmeverett/gists{/gist_id}", "starred_url": "https://api.github.com/users/jasonmeverett/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jasonmeverett/subscriptions", "organizations_url": "https://api.github.com/users/jasonmeverett/orgs", "repos_url": "https://api.github.com/users/jasonmeverett/repos", "events_url": "https://api.github.com/users/jasonmeverett/events{/privacy}", "received_events_url": "https://api.github.com/users/jasonmeverett/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2021-01-22T07:39:13Z", "updated_at": "2021-01-23T04:07:16Z", "closed_at": "2021-01-23T04:07:16Z", "author_association": "NONE", "active_lock_reason": null, "body": "We quite often default to 3-2-1 sequence for our work, which is the purpose of opening this. Eventually it would probably be nice to have some sort of default function that can handle any arbitrary sequence (like a character sequence of 'XYZ', 'ZYZ', etc, maybe?), but that's probably out of the scope of this.", "reactions": {"url": "https://api.github.com/repos/simbody/simbody/issues/712/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/simbody/simbody/issues/712/timeline", "performed_via_github_app": null}, {"url": "https://api.github.com/repos/simbody/simbody/issues/715", "repository_url": "https://api.github.com/repos/simbody/simbody", "labels_url": "https://api.github.com/repos/simbody/simbody/issues/715/labels{/name}", "comments_url": "https://api.github.com/repos/simbody/simbody/issues/715/comments", "events_url": "https://api.github.com/repos/simbody/simbody/issues/715/events", "html_url": "https://github.com/simbody/simbody/issues/715", "id": 841351108, "node_id": "MDU6SXNzdWU4NDEzNTExMDg=", "number": 715, "title": "ObservedPointFitter crashes attempting to get a reference to nullptr", "user": {"login": "MadCatX", "id": 1009657, "node_id": "MDQ6VXNlcjEwMDk2NTc=", "avatar_url": "https://avatars.githubusercontent.com/u/1009657?v=4", "gravatar_id": "", "url": "https://api.github.com/users/MadCatX", "html_url": "https://github.com/MadCatX", "followers_url": "https://api.github.com/users/MadCatX/followers", "following_url": "https://api.github.com/users/MadCatX/following{/other_user}", "gists_url": "https://api.github.com/users/MadCatX/gists{/gist_id}", "starred_url": "https://api.github.com/users/MadCatX/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/MadCatX/subscriptions", "organizations_url": "https://api.github.com/users/MadCatX/orgs", "repos_url": "https://api.github.com/users/MadCatX/repos", "events_url": "https://api.github.com/users/MadCatX/events{/privacy}", "received_events_url": "https://api.github.com/users/MadCatX/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 3, "created_at": "2021-03-25T22:01:56Z", "updated_at": "2021-03-26T22:01:55Z", "closed_at": "2021-03-26T22:01:54Z", "author_association": "CONTRIBUTOR", "active_lock_reason": null, "body": "I wish I could be more descriptive but the problem seems a bit illusive to me.\r\n\r\nI ran into this issue while fixing up [molmodel](https://github.com/samuelflores/molmodel)'s test suite. Some tests ([TestFitMagnesiums](https://github.com/samuelflores/molmodel/blob/master/tests/TestFitMagnesiums.cpp), [TestLoadPdb](https://github.com/samuelflores/molmodel/blob/master/tests/TestLoadPdb.cpp), [TestProteinDihedrals](https://github.com/samuelflores/molmodel/blob/master/tests/TestProteinDihedrals.cpp)) fail because they hit an assertion deep inside Simbody. The actual backtrace is always the same and looks like this:\r\n\r\n    SimTK Exception thrown at ReferencePtr.h:141:\r\n      Error detected by Simbody method ReferencePtr::getRef(): An attempt was made to dereference a null pointer.\r\n      (Required condition 'p!=nullptr' was not met.)\r\n\r\n    #0  __GI_raise (sig=sig@entry=6) at ../sysdeps/unix/sysv/linux/raise.c:49\r\n    #1  0x00007ffff56ae8a4 in __GI_abort () at abort.c:79\r\n    #2  0x00007ffff590c926 in __gnu_cxx::__verbose_terminate_handler() [clone .cold] () from /lib64/libstdc++.so.6\r\n    #3  0x00007ffff59181ac in __cxxabiv1::__terminate(void (*)()) () from /lib64/libstdc++.so.6\r\n    #4  0x00007ffff5918217 in std::terminate() () from /lib64/libstdc++.so.6\r\n    #5  0x00007ffff59184c9 in __cxa_throw () from /lib64/libstdc++.so.6\r\n    #6  0x00007ffff64a85d3 in SimTK::ReferencePtr<SimTK::StateImpl>::getRef (this=0x8129e0)\r\n    at /home/madcat/Devel/BTU_FGU/MMB/3rdparty/simbody/SimTKcommon/./include/SimTKcommon/internal/ReferencePtr.h:140\r\n    #7  0x00007ffff64a8535 in SimTK::ReferencePtr<SimTK::StateImpl>::operator* (this=0x8129e0)\r\n    at /home/madcat/Devel/BTU_FGU/MMB/3rdparty/simbody/SimTKcommon/./include/SimTKcommon/internal/ReferencePtr.h:151\r\n    #8  0x00007ffff649cc1f in SimTK::PerSubsystemInfo::clearAllocationStack<SimTK::CacheEntryInfo> (this=0x8129e0, \r\n    stack=...) at /home/madcat/Devel/BTU_FGU/MMB/3rdparty/simbody/SimTKcommon/Simulation/src/State.cpp:187\r\n    #9  0x00007ffff648afe5 in SimTK::PerSubsystemInfo::clearCache (this=0x8129e0)\r\n    at /home/madcat/Devel/BTU_FGU/MMB/3rdparty/simbody/SimTKcommon/Simulation/src/State.cpp:242\r\n    #10 0x00007ffff648b00c in SimTK::PerSubsystemInfo::clearAllStacks (this=0x8129e0)\r\n    at /home/madcat/Devel/BTU_FGU/MMB/3rdparty/simbody/SimTKcommon/Simulation/src/State.cpp:245\r\n    #11 0x00007ffff649f9bc in SimTK::PerSubsystemInfo::initialize (this=0x8129e0)\r\n    at /home/madcat/Devel/BTU_FGU/MMB/3rdparty/simbody/SimTKcommon/Simulation/include/SimTKcommon/internal/StateImpl.h:854\r\n    #12 0x00007ffff648b63d in SimTK::PerSubsystemInfo::restoreToStage (this=0x8129e0, g=...)\r\n    at /home/madcat/Devel/BTU_FGU/MMB/3rdparty/simbody/SimTKcommon/Simulation/src/State.cpp:338\r\n    #13 0x00007ffff7e719a0 in SimTK::PerSubsystemInfo::invalidateStageJustThisSubsystem (this=0x8129e0, g=...)\r\n    at /home/madcat/Devel/BTU_FGU/MMB_runtime/mmb_deps_debug/simbody/include/simbody/SimTKcommon/internal/StateImpl.h:652\r\n    #14 0x00007ffff648a7e5 in SimTK::StateImpl::operator= (this=0x511a50, src=...)\r\n    at /home/madcat/Devel/BTU_FGU/MMB/3rdparty/simbody/SimTKcommon/Simulation/src/State.cpp:447\r\n    #15 0x00007ffff648a5ac in SimTK::State::operator= (this=0x4b5020, src=...)\r\n    at /home/madcat/Devel/BTU_FGU/MMB/3rdparty/simbody/SimTKcommon/Simulation/src/State.cpp:77\r\n    #16 0x00007ffff758b849 in SimbodyMatterSubsystemRep::convertToQuaternions (this=0x7ac100, inputState=..., \r\n    outputState=...)\r\n    at /home/madcat/Devel/BTU_FGU/MMB/3rdparty/simbody/Simbody/src/SimbodyMatterSubsystemRep.cpp:1797\r\n    #17 0x00007ffff756dbed in SimTK::SimbodyMatterSubsystem::convertToQuaternions (this=0x7ac0e0, inputState=..., \r\n    outputState=...) at /home/madcat/Devel/BTU_FGU/MMB/3rdparty/simbody/Simbody/src/SimbodyMatterSubsystem.cpp:1971\r\n    #18 0x00007ffff73b51e3 in SimTK::ObservedPointFitter::findBestFit (system=..., state=..., bodyIxs=..., \r\n    stations=..., targetLocations=..., weights=..., tolerance=0.001)\r\n    at /home/madcat/Devel/BTU_FGU/MMB/3rdparty/simbody/Simbody/src/ObservedPointFitter.cpp:361\r\n    #19 0x00007ffff73af9b1 in SimTK::ObservedPointFitter::findBestFit (system=..., state=..., bodyIxs=..., \r\n    stations=..., targetLocations=..., tolerance=0.001)\r\n    at /home/madcat/Devel/BTU_FGU/MMB/3rdparty/simbody/Simbody/src/ObservedPointFitter.cpp:217\r\n    #20 0x00007ffff7c3b631 in SimTK::ObservedPointFitter::findBestFit (system=..., state=..., \r\n    bodyIxs=std::vector of length 107, capacity 128 = {...}, \r\n    stations=std::vector of length 107, capacity 128 = {...}, \r\n    targetLocations=std::vector of length 107, capacity 128 = {...}, tolerance=0.001)\r\n    at /home/madcat/Devel/BTU_FGU/MMB_runtime/mmb_deps_debug/simbody/include/simbody/simbody/internal/ObservedPointFitter.h:71\r\n    #21 0x00007ffff7c29ef3 in SimTK::Compound::fitDefaultConfiguration (this=0x7fffffffd368, \r\n    atomTargets=std::map with 230 elements = {...}, targetRms=0.0050000000000000001, useObservedPointFitter=true, \r\n    minimizerTolerance=150) at /home/madcat/Devel/BTU_FGU/MMB/3rdparty/molmodel/src/Compound.cpp:2233\r\n\r\nThe TestFitMagnesiums code seems to be as close as it gets to a minimal example, although there is still a lot of molmodel code involved. I don't exclude the possibility that this is a molmodel issue because the code hasn't received much maintenance for some time. Is there anything I can do to narrow down the cause of the problem?\r\n\r\nMany thanks!", "reactions": {"url": "https://api.github.com/repos/simbody/simbody/issues/715/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/simbody/simbody/issues/715/timeline", "performed_via_github_app": null}, {"url": "https://api.github.com/repos/simbody/simbody/issues/717", "repository_url": "https://api.github.com/repos/simbody/simbody", "labels_url": "https://api.github.com/repos/simbody/simbody/issues/717/labels{/name}", "comments_url": "https://api.github.com/repos/simbody/simbody/issues/717/comments", "events_url": "https://api.github.com/repos/simbody/simbody/issues/717/events", "html_url": "https://github.com/simbody/simbody/issues/717", "id": 905396763, "node_id": "MDU6SXNzdWU5MDUzOTY3NjM=", "number": 717, "title": "Failed to compile (Install) simbody with vs2019", "user": {"login": "YongchuanYu", "id": 75265208, "node_id": "MDQ6VXNlcjc1MjY1MjA4", "avatar_url": "https://avatars.githubusercontent.com/u/75265208?v=4", "gravatar_id": "", "url": "https://api.github.com/users/YongchuanYu", "html_url": "https://github.com/YongchuanYu", "followers_url": "https://api.github.com/users/YongchuanYu/followers", "following_url": "https://api.github.com/users/YongchuanYu/following{/other_user}", "gists_url": "https://api.github.com/users/YongchuanYu/gists{/gist_id}", "starred_url": "https://api.github.com/users/YongchuanYu/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/YongchuanYu/subscriptions", "organizations_url": "https://api.github.com/users/YongchuanYu/orgs", "repos_url": "https://api.github.com/users/YongchuanYu/repos", "events_url": "https://api.github.com/users/YongchuanYu/events{/privacy}", "received_events_url": "https://api.github.com/users/YongchuanYu/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2021-05-28T13:20:24Z", "updated_at": "2021-05-28T13:20:24Z", "closed_at": null, "author_association": "NONE", "active_lock_reason": null, "body": "When I use VS 2019 to install Simbody in Windows follow the instruction, no matter which type I chosed, \"debug\", \"release\" or others, when I right click on \"ALL BUILD\",  it always has several errors like :\u201cfatal error LNK1104: can not open file '..\\..\\..\\..\\..\\..\\RelWithDebInfo\\SimTKmath.lib\", \r\nand also \"binary '*': no operator found which takes a left-hand operand of type 'const_Bidlt' (or there is no acceptable conversion)\r\n\r\nBut with VS 2017 there is no any trouble.", "reactions": {"url": "https://api.github.com/repos/simbody/simbody/issues/717/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/simbody/simbody/issues/717/timeline", "performed_via_github_app": null}, {"url": "https://api.github.com/repos/simbody/simbody/issues/718", "repository_url": "https://api.github.com/repos/simbody/simbody", "labels_url": "https://api.github.com/repos/simbody/simbody/issues/718/labels{/name}", "comments_url": "https://api.github.com/repos/simbody/simbody/issues/718/comments", "events_url": "https://api.github.com/repos/simbody/simbody/issues/718/events", "html_url": "https://github.com/simbody/simbody/issues/718", "id": 941186323, "node_id": "MDU6SXNzdWU5NDExODYzMjM=", "number": 718, "title": "MATLAB error", "user": {"login": "sh-hsz", "id": 66769671, "node_id": "MDQ6VXNlcjY2NzY5Njcx", "avatar_url": "https://avatars.githubusercontent.com/u/66769671?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sh-hsz", "html_url": "https://github.com/sh-hsz", "followers_url": "https://api.github.com/users/sh-hsz/followers", "following_url": "https://api.github.com/users/sh-hsz/following{/other_user}", "gists_url": "https://api.github.com/users/sh-hsz/gists{/gist_id}", "starred_url": "https://api.github.com/users/sh-hsz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sh-hsz/subscriptions", "organizations_url": "https://api.github.com/users/sh-hsz/orgs", "repos_url": "https://api.github.com/users/sh-hsz/repos", "events_url": "https://api.github.com/users/sh-hsz/events{/privacy}", "received_events_url": "https://api.github.com/users/sh-hsz/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "open", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 0, "created_at": "2021-07-10T06:31:04Z", "updated_at": "2021-07-10T06:31:04Z", "closed_at": null, "author_association": "NONE", "active_lock_reason": null, "body": "I'd like to design an exoskeleton for arm26.osim in MATLAB and define a pin joint between to links of created robots but MATLAB makes the following error:\r\n\r\n\r\nJava exception occurred:\r\njava.lang.RuntimeException: SimTK Exception thrown at Integrator.cpp:431:\r\n  Integrator initialization failed apparently because:\r\nSimTK Exception thrown at SimbodyMatterSubsystemRep.cpp:4361:\r\n  Error detected by Simbody method SimbodyMatterSubsystem::projectQ(): Failed to achieve required\r\n  accuracy 0.0001. Norm on entry  was 0.0252783; norm on exit 0.0251779. You might need a better\r\n  starting configuration, or if there are prescribed or  locked q's you might have to free some of\r\n  them.\r\n\r\n\r\nhow can I solve this error?", "reactions": {"url": "https://api.github.com/repos/simbody/simbody/issues/718/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/simbody/simbody/issues/718/timeline", "performed_via_github_app": null}, {"url": "https://api.github.com/repos/simbody/simbody/issues/722", "repository_url": "https://api.github.com/repos/simbody/simbody", "labels_url": "https://api.github.com/repos/simbody/simbody/issues/722/labels{/name}", "comments_url": "https://api.github.com/repos/simbody/simbody/issues/722/comments", "events_url": "https://api.github.com/repos/simbody/simbody/issues/722/events", "html_url": "https://github.com/simbody/simbody/issues/722", "id": 1003881724, "node_id": "I_kwDOALlZGc471gT8", "number": 722, "title": "Question about Simbody pre-processing/input file/CPP... for simulation", "user": {"login": "yumianhuli2", "id": 39210837, "node_id": "MDQ6VXNlcjM5MjEwODM3", "avatar_url": "https://avatars.githubusercontent.com/u/39210837?v=4", "gravatar_id": "", "url": "https://api.github.com/users/yumianhuli2", "html_url": "https://github.com/yumianhuli2", "followers_url": "https://api.github.com/users/yumianhuli2/followers", "following_url": "https://api.github.com/users/yumianhuli2/following{/other_user}", "gists_url": "https://api.github.com/users/yumianhuli2/gists{/gist_id}", "starred_url": "https://api.github.com/users/yumianhuli2/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/yumianhuli2/subscriptions", "organizations_url": "https://api.github.com/users/yumianhuli2/orgs", "repos_url": "https://api.github.com/users/yumianhuli2/repos", "events_url": "https://api.github.com/users/yumianhuli2/events{/privacy}", "received_events_url": "https://api.github.com/users/yumianhuli2/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 1, "created_at": "2021-09-22T06:36:09Z", "updated_at": "2021-09-22T15:49:23Z", "closed_at": "2021-09-22T15:49:23Z", "author_association": "NONE", "active_lock_reason": null, "body": "Does Simbody have a pre-processing module to generate the simulation input file, and then perform the simulation by parsing the simulation input file? Or Simbody currently only providing the ability to write CPP files for simulation?\r\nThank you\uff01", "reactions": {"url": "https://api.github.com/repos/simbody/simbody/issues/722/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/simbody/simbody/issues/722/timeline", "performed_via_github_app": null}, {"url": "https://api.github.com/repos/simbody/simbody/issues/723", "repository_url": "https://api.github.com/repos/simbody/simbody", "labels_url": "https://api.github.com/repos/simbody/simbody/issues/723/labels{/name}", "comments_url": "https://api.github.com/repos/simbody/simbody/issues/723/comments", "events_url": "https://api.github.com/repos/simbody/simbody/issues/723/events", "html_url": "https://github.com/simbody/simbody/issues/723", "id": 1018359490, "node_id": "I_kwDOALlZGc48su7C", "number": 723, "title": "About the method of solving Simbody dynamics", "user": {"login": "yumianhuli2", "id": 39210837, "node_id": "MDQ6VXNlcjM5MjEwODM3", "avatar_url": "https://avatars.githubusercontent.com/u/39210837?v=4", "gravatar_id": "", "url": "https://api.github.com/users/yumianhuli2", "html_url": "https://github.com/yumianhuli2", "followers_url": "https://api.github.com/users/yumianhuli2/followers", "following_url": "https://api.github.com/users/yumianhuli2/following{/other_user}", "gists_url": "https://api.github.com/users/yumianhuli2/gists{/gist_id}", "starred_url": "https://api.github.com/users/yumianhuli2/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/yumianhuli2/subscriptions", "organizations_url": "https://api.github.com/users/yumianhuli2/orgs", "repos_url": "https://api.github.com/users/yumianhuli2/repos", "events_url": "https://api.github.com/users/yumianhuli2/events{/privacy}", "received_events_url": "https://api.github.com/users/yumianhuli2/received_events", "type": "User", "site_admin": false}, "labels": [], "state": "closed", "locked": false, "assignee": null, "assignees": [], "milestone": null, "comments": 2, "created_at": "2021-10-06T13:45:04Z", "updated_at": "2021-10-07T00:40:54Z", "closed_at": "2021-10-06T15:50:56Z", "author_association": "NONE", "active_lock_reason": null, "body": "Dear Simbody Team\uff01\r\nCould you plz tell me which method is used to solve simbody dynamics? Is it Newton-Euler, Lagrange, or Kane method\uff1fThank you\uff01", "reactions": {"url": "https://api.github.com/repos/simbody/simbody/issues/723/reactions", "total_count": 0, "+1": 0, "-1": 0, "laugh": 0, "hooray": 0, "confused": 0, "heart": 0, "rocket": 0, "eyes": 0}, "timeline_url": "https://api.github.com/repos/simbody/simbody/issues/723/timeline", "performed_via_github_app": null}]